<UserControl 
    x:Class="MeisterGeister.View.Helden.Controls.InventarView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:vm="clr-namespace:MeisterGeister.ViewModel.Inventar"
    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" 	    
	xmlns:ViewGeneral="clr-namespace:MeisterGeister.View.General"  
    xmlns:HeldenControls="clr-namespace:MeisterGeister.View.Helden.Controls"
    mc:Ignorable="d" 
    x:Name="userControl"
    d:DesignHeight="500" 
    d:DesignWidth="790" 
    Background="Transparent" DataContext="{x:Null}"
	d:DataContext="{d:DesignData /SampleData/InventarViewModelSampleData1.xaml}"
    ViewGeneral:UIElementBehavior.ViewModel="{Binding}">
    <UserControl.Resources>
        <ViewGeneral:InverseBooleanConverter x:Key="InverseBooleanConverter" />

        <DataTemplate x:Key="removeButton">
            <Button Padding="0" Width="25" Height="25" Command="{Binding OnRemove}" Style="{DynamicResource ReadOnlyButtonStyle}">
                <Image Source="/DSA MeisterGeister;component/Images/Icons/General/entf_01.png"/>
            </Button>
        </DataTemplate>

        <DataTemplate x:Key="trageortTemplate">
            <TextBlock Text="{Binding Trageort.Name}"/>
        </DataTemplate>
        
        <DataTemplate x:Key="trageortEditTemplate">
            <ComboBox ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type DataGrid},AncestorLevel=1},Path=DataContext.TrageortListe}"
                                                  SelectedItem="{Binding Trageort,Mode=TwoWay}" DisplayMemberPath="Name"/>
        </DataTemplate>

        <Style x:Key="ButtonBackground" TargetType="{x:Type Border}">
            <Setter Property="Background">
                <Setter.Value>
                    <RadialGradientBrush>
                        <GradientStop Color="#FF997545" Offset="0"/>
                        <GradientStop Color="Transparent" Offset="1"/>
                    </RadialGradientBrush>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Key="NahkampfItemTemplate">
            <StackPanel>
                <CheckBox IsChecked="{Binding HasChanges}"/>
                <CheckBox IsChecked="{Binding HasValidationErrors}"/>
                <TextBlock Text="{Binding Talente}"/>
                <TextBlock Text="{Binding TP}"/>
                <TextBlock Text="{Binding TPKK}"/>
                <TextBlock Text="{Binding WM}"/>
            </StackPanel>
        </DataTemplate>
        <Storyboard x:Key="FilterAllEnter">
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="imageAll">
                <EasingThicknessKeyFrame KeyTime="0" Value="0"/>
                <EasingThicknessKeyFrame KeyTime="0:0:0.4" Value="-5"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="FilterAllLeave">
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="imageAll">
                <SplineThicknessKeyFrame KeyTime="0" Value="-5"/>
                <SplineThicknessKeyFrame KeyTime="0:0:0.4" Value="0"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="FilterNahkampfEnter">
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="image">
                <EasingThicknessKeyFrame KeyTime="0" Value="0"/>
                <EasingThicknessKeyFrame KeyTime="0:0:0.4" Value="-5"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="FilterNahkampfLeave">
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="image">
                <SplineThicknessKeyFrame KeyTime="0" Value="-5"/>
                <SplineThicknessKeyFrame KeyTime="0:0:0.4" Value="0"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="FilterFernkampfEnter">
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="image1">
                <EasingThicknessKeyFrame KeyTime="0" Value="0"/>
                <EasingThicknessKeyFrame KeyTime="0:0:0.4" Value="-5"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="FilterFernkampfLeave">
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="image1">
                <SplineThicknessKeyFrame KeyTime="0" Value="-5"/>
                <SplineThicknessKeyFrame KeyTime="0:0:0.4" Value="0"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="FilterSchildEnter">
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="image2">
                <EasingThicknessKeyFrame KeyTime="0" Value="0"/>
                <EasingThicknessKeyFrame KeyTime="0:0:0.4" Value="-5"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="FilterSchildLeave">
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="image2">
                <SplineThicknessKeyFrame KeyTime="0" Value="-5"/>
                <SplineThicknessKeyFrame KeyTime="0:0:0.4" Value="0"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="FilterRuestungEnter">
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="image3">
                <EasingThicknessKeyFrame KeyTime="0" Value="0"/>
                <EasingThicknessKeyFrame KeyTime="0:0:0.4" Value="-5"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="FilterRuestungLeave">
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="image3">
                <SplineThicknessKeyFrame KeyTime="0" Value="-5"/>
                <SplineThicknessKeyFrame KeyTime="0:0:0.4" Value="0"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="FilterSonstigesEnter">
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="image4">
                <EasingThicknessKeyFrame KeyTime="0" Value="0"/>
                <EasingThicknessKeyFrame KeyTime="0:0:0.4" Value="-5"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="FilterSonstigesLeave">
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="image4">
                <SplineThicknessKeyFrame KeyTime="0" Value="-5"/>
                <SplineThicknessKeyFrame KeyTime="0:0:0.4" Value="0"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="CloseUebersicht">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Uebersicht">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.35"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="Uebersicht">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.35"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.HorizontalAlignment)" Storyboard.TargetName="Uebersicht">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static HorizontalAlignment.Stretch}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static HorizontalAlignment.Stretch}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)" Storyboard.TargetName="Uebersicht">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static VerticalAlignment.Stretch}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static VerticalAlignment.Stretch}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="OpenUebersicht">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Uebersicht">
                <SplineDoubleKeyFrame KeyTime="0" Value="0.35"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="Uebersicht">
                <SplineDoubleKeyFrame KeyTime="0" Value="0.35"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.HorizontalAlignment)" Storyboard.TargetName="Uebersicht">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static HorizontalAlignment.Stretch}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static HorizontalAlignment.Stretch}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)" Storyboard.TargetName="Uebersicht">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static VerticalAlignment.Stretch}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static VerticalAlignment.Stretch}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="CloseRuestung"/>
        <Storyboard x:Key="OpenRuestung"/>
        <Storyboard x:Key="EnterGoRuestung"/>
        <Storyboard x:Key="LeaveGoRuestung"/>
        <Storyboard x:Key="MovingInfo" AutoReverse="False" RepeatBehavior="Forever"/>
        <Storyboard x:Key="VerticalRotate" RepeatBehavior="Forever"/>
        <Storyboard x:Key="btnGoRuestungArrowVerticalRotate" RepeatBehavior="Forever"/>

    </UserControl.Resources>

    <UserControl.Triggers>
        <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="borderAll">
            <BeginStoryboard x:Name="FilterAllEnter_BeginStoryboard" Storyboard="{StaticResource FilterAllEnter}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="borderAll">
            <BeginStoryboard x:Name="FilterAllLeave_BeginStoryboard" Storyboard="{StaticResource FilterAllLeave}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="borderNahkampf">
            <BeginStoryboard Storyboard="{StaticResource FilterNahkampfEnter}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="borderNahkampf">
            <BeginStoryboard x:Name="FilterNahkampfLeave_BeginStoryboard" Storyboard="{StaticResource FilterNahkampfLeave}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="borderFernkampf">
            <BeginStoryboard Storyboard="{StaticResource FilterFernkampfEnter}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="borderFernkampf">
            <BeginStoryboard x:Name="FilterFernkampfLeave_BeginStoryboard" Storyboard="{StaticResource FilterFernkampfLeave}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="borderSchild">
            <BeginStoryboard Storyboard="{StaticResource FilterSchildEnter}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="borderSchild">
            <BeginStoryboard x:Name="FilterSchildLeave_BeginStoryboard" Storyboard="{StaticResource FilterSchildLeave}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="borderRuestung">
            <BeginStoryboard Storyboard="{StaticResource FilterRuestungEnter}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="borderRuestung">
            <BeginStoryboard x:Name="FilterRuestungLeave_BeginStoryboard" Storyboard="{StaticResource FilterRuestungLeave}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="borderSonstiges">
            <BeginStoryboard Storyboard="{StaticResource FilterSonstigesEnter}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="borderSonstiges">
            <BeginStoryboard x:Name="FilterSonstigesLeave_BeginStoryboard" Storyboard="{StaticResource FilterSonstigesLeave}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard Storyboard="{StaticResource MovingInfo}"/>
            <BeginStoryboard Storyboard="{StaticResource VerticalRotate}"/>
            <BeginStoryboard Storyboard="{StaticResource btnGoRuestungArrowVerticalRotate}"/>
        </EventTrigger>
    </UserControl.Triggers>

    <Grid Grid.Row="1" Margin="4,0,4,0">
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <Expander Margin="5" Grid.ColumnSpan="2" IsExpanded="True">
            <Expander.Header>
                <TextBlock Text="Held" Style="{DynamicResource TextTitel}" />
            </Expander.Header>
            <Grid x:Name="Statistik" >
                <Border Style="{DynamicResource ControlContentBorder}">
                    <Grid x:Name="HeldInhalt">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition />
                            <ColumnDefinition Width="50"/>
                        </Grid.ColumnDefinitions>
                        <Border Margin="0,0,5,0" BorderThickness="0,0,1,0" BorderBrush="#B3996C">
                            <StackPanel Grid.Column="0" Margin="0,0,0,0" HorizontalAlignment="Left">
                                <Label Content="Tragkraft"  Style="{DynamicResource TextInStack}" Height="25" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0" />
                                <Label Content="Gewicht" Style="{DynamicResource TextInStack}" Height="25" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0" />
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="Behinderung" Style="{DynamicResource TextInStack}" Height="25" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0" />
                                    <Image Height="16" ToolTipService.ToolTip="(Behinderung) Kann in den Einstellungen aktiviert/deaktiviert werden">
                                        <Image.Source>
                                            <BitmapImage UriSource="/DSA MeisterGeister;component/Images/Icons/General/info.png" />
                                        </Image.Source>
                                    </Image>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="Überlastung" Style="{DynamicResource TextInStack}" Height="25" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0"/>
                                    <Image Margin="4,0,0,0"  Height="16" Width="16" ToolTipService.ToolTip="(Überlastung) Kann in den Einstellungen aktiviert/deaktiviert werden">
                                        <Image.Source>
                                            <BitmapImage  UriSource="/DSA MeisterGeister;component/Images/Icons/General/info.png" />
                                        </Image.Source>
                                    </Image>
                                </StackPanel>
                            </StackPanel>
                        </Border>
                        <Border Margin="0,0,5,0" Grid.Column="1" BorderThickness="0,0,1,0" BorderBrush="#B3996C">
                            <StackPanel>
                                <Label Content="{Binding SelectedHeld.Tragkraft}" Margin="0" Height="25" VerticalAlignment="Center" HorizontalAlignment="Left"  />
                                <Label Content="{Binding SelectedHeld.Gewicht}" Margin="0" Height="25" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                <Grid>
                                    <StackPanel Orientation="Horizontal">
                                        <ViewGeneral:IntBox Margin="0,0" MinValue="0" MinWidth="20" ButtonHiddenMode="{Binding IsBEEingebenVisibility}" ShowButtons="{Binding IsBehinderungEingeben, Converter={StaticResource InverseBooleanConverter}}" ToolTip="Behinderung" Value="{Binding SelectedHeld.BE}" IsReadOnly="{Binding IsBehinderungEingeben}" NoBackground="{Binding IsBehinderungEingeben}" Style="{DynamicResource ReadOnlyStyle}" Height="25"/>
                                    </StackPanel>
                                </Grid>

                                <StackPanel Orientation="Horizontal">
                                    <ViewGeneral:IntBox Margin="0,0" MinValue="0" MinWidth="20" ButtonHiddenMode="{Binding IsBEEingebenVisibility}" ShowButtons="{Binding IsUeberlastungEingeben, Converter={StaticResource InverseBooleanConverter}}" ToolTip="Überlastung" Value="{Binding SelectedHeld.Ueberlastung}" IsReadOnly="{Binding IsUeberlastungEingeben}" NoBackground="{Binding IsUeberlastungEingeben}" Style="{DynamicResource ReadOnlyStyle}" Height="25" />
                                    <Label Content="/" Height="25" Margin="0"/>
                                    <Label Content="{Binding SelectedHeld.GewichtZuTragkraftProzent}" Margin="0" FontFamily="Segoe UI" Height="25" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                    <Label Content="%" Height="25" Margin="0"/>
                                </StackPanel>
                            </StackPanel>
                        </Border>
                        <Border Margin="0,0,5,0" Grid.Column="2" BorderThickness="0,0,1,0" BorderBrush="#B3996C">
                            <StackPanel >
                                <Label Content="Attacke"  Style="{DynamicResource TextInStack}" Height="25" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0" />
                                <Label Content="Parade"  Style="{DynamicResource TextInStack}" Height="25" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0" />
                                <Label Content="Iniative" Style="{DynamicResource TextInStack}" Height="25" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0" />
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="RS-Gesamt"  Style="{DynamicResource TextInStack}" Height="25" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0" />
                                    <Image Height="16" Width="16" Stretch="Fill"  ToolTipService.ToolTip="(RS) Kann in den Einstellungen aktiviert/deaktiviert werden">
                                        <Image.Source>
                                            <BitmapImage  UriSource="/DSA MeisterGeister;component/Images/Icons/General/info.png" />
                                        </Image.Source>
                                    </Image>
                                </StackPanel>
                            </StackPanel>
                        </Border>
                        <Border Margin="0,0,5,0" Grid.Column="3" BorderThickness="0,0,1,0" BorderBrush="#B3996C">
                            <StackPanel>
                                <Label Content="{Binding SelectedHeld.AT}"  Margin="0" Height="25" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                <Label Content="{Binding SelectedHeld.PA}"  Margin="0" Height="25" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                <Label Content="{Binding SelectedHeld.InitiativeBasisOhneMod}" Margin="0" Height="25" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                <Grid>
                                    <StackPanel Orientation="Horizontal">
                                        <ViewGeneral:IntBox Margin="0,0" MinValue="0" MinWidth="20" ButtonHiddenMode="{Binding IsRuestungEinfachEingeben}" ShowButtons="{Binding IsRuestungBerechnungEinfach, Converter={StaticResource InverseBooleanConverter}}" ToolTip="Rüstungsschutz Gesamt" Value="{Binding SelectedHeld.RS[Gesamt]}" IsReadOnly="{Binding IsRuestungBerechnungEinfach}" NoBackground="{Binding IsRuestungBerechnungEinfach}" Style="{DynamicResource ReadOnlyStyle}" Height="25" />
                                    </StackPanel>
                                </Grid>
                            </StackPanel>
                        </Border>
                        <Border Margin="0,0,5,0" Grid.Column="4" BorderThickness="0,0,1,0" BorderBrush="#B3996C">
                            <StackPanel>
                                <Label  FontWeight="Bold" >
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Text="Zonen-RS: " />

                                    </Grid>
                                </Label>
                            </StackPanel>
                        </Border>
                        <StackPanel Grid.Column="5">
                            <Label>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="13"/>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="13"/>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="13"/>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="13"/>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="13"/>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="13"/>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="13"/>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="13"/>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="13"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="{Binding SelectedHeld.RS[Kopf], Mode=TwoWay}" ToolTip="Kopf" HorizontalAlignment="Center"/>
                                    <TextBlock Grid.Column="1" Text="|" />
                                    <TextBlock Grid.Column="2" Text="{Binding SelectedHeld.RS[Brust]}" ToolTip="Brust" HorizontalAlignment="Center"/>
                                    <TextBlock Grid.Column="3" Text="|" />
                                    <TextBlock Grid.Column="4" Text="{Binding SelectedHeld.RS[Rücken]}" ToolTip="Rücken" HorizontalAlignment="Center"/>
                                    <TextBlock Grid.Column="5" Text="|" />
                                    <TextBlock Grid.Column="6" Text="{Binding SelectedHeld.RS[Bauch]}" ToolTip="Bauch" HorizontalAlignment="Center"/>
                                    <TextBlock Grid.Column="7" Text="|" />
                                    <TextBlock Grid.Column="8" Text="{Binding SelectedHeld.RS[ArmL]}" ToolTip="ArmL" HorizontalAlignment="Center"/>
                                    <TextBlock Grid.Column="9" Text="|" />
                                    <TextBlock Grid.Column="10" Text="{Binding SelectedHeld.RS[ArmR]}" ToolTip="ArmR" HorizontalAlignment="Center"/>
                                    <TextBlock Grid.Column="11" Text="|" />
                                    <TextBlock Grid.Column="12" Text="{Binding SelectedHeld.RS[BeinL]}" ToolTip="BeinL" HorizontalAlignment="Center"/>
                                    <TextBlock Grid.Column="13" Text="|" />
                                    <TextBlock Grid.Column="14" Text="{Binding SelectedHeld.RS[BeinR]}" ToolTip="BeinR" HorizontalAlignment="Center"/>
                                    <TextBlock Grid.Column="15" Text="|" />
                                    <TextBlock Grid.Column="16" Text="{Binding SelectedHeld.RS[Gesamt], Mode=TwoWay}" ToolTip="Gesamt" HorizontalAlignment="Center"/>
                                </Grid>
                            </Label>
                        </StackPanel>

                        <Grid x:Name="ZoenenRuestungOeffnen" Grid.Column="6">
                            <ToggleButton x:Name="btnZonenOverlay" IsEnabled="{Binding IsRuestungBerechnungZonen}" ToolTipService.ShowOnDisabled="True">
                                <ToggleButton.Effect>
                                    <DropShadowEffect RenderingBias="Quality"/>
                                </ToggleButton.Effect>
                                <ToggleButton.ToolTip>
                                    <StackPanel Background="#389E804D">
                                        <TextBlock Text="Klicken, um Zonenrüstungsschutz einzustellen..." FontWeight="Bold" Margin="10" Visibility="{Binding IsRuestungBerechnungZonen,Converter={StaticResource BooleanToVisibilityConverter1}}" />
                                        <Grid Height="266" Width="257" HorizontalAlignment="Center" VerticalAlignment="Center">
                                            <Grid.Background>
                                                <ImageBrush ImageSource="/DSA MeisterGeister;component/Images/Koerperzonen/koerperzonen_01.png" Stretch="Uniform" TileMode="None" />
                                            </Grid.Background>
                                            <Image Width="45" Margin="15,15" VerticalAlignment="Top" HorizontalAlignment="Left" ToolTip="Rüstungsschutz" Source="/DSA MeisterGeister;component/Images/Icons/ruestung.png"/>
                                            <ViewGeneral:IntBox Margin="159,20,6,223" Width="45" ShowButtons="False" ToolTip="Rüstungsschutz (Gesamt)" Value="{Binding SelectedHeld.RS[Gesamt]}" />
                                            <ViewGeneral:IntBox Margin="81,20,84,223" Width="45" ShowButtons="False" ToolTip="Rüstungsschutz (Kopf)" Value="{Binding SelectedHeld.RS[Kopf]}" />
                                            <ViewGeneral:IntBox Margin="60,59,132,184" Width="45" ShowButtons="False" ToolTip="Rüstungsschutz (Brust)" Value="{Binding SelectedHeld.RS[Brust]}" />
                                            <ViewGeneral:IntBox Margin="130,59,62,184" Width="45" ShowButtons="False" ToolTip="Rüstungsschutz (Rücken)" Value="{Binding SelectedHeld.RS[Rücken]}" />
                                            <ViewGeneral:IntBox Margin="17,95,175,148" Width="45" ShowButtons="False" ToolTip="Rüstungsschutz (rechter Arm)" Value="{Binding SelectedHeld.RS[ArmR]}" />
                                            <ViewGeneral:IntBox Margin="177,95,15,148" Width="45" ShowButtons="False" ToolTip="Rüstungsschutz (linker Arm)" Value="{Binding SelectedHeld.RS[ArmL]}" />
                                            <ViewGeneral:IntBox Margin="81,125,84,118" Width="45" ShowButtons="False" ToolTip="Rüstungsschutz (Bauch)" Value="{Binding SelectedHeld.RS[Bauch]}" />
                                            <ViewGeneral:IntBox Margin="40,179,125,28" Width="45" ShowButtons="False" ToolTip="Rüstungsschutz (rechtes Bein)" Value="{Binding SelectedHeld.RS[BeinR]}" />
                                            <ViewGeneral:IntBox Margin="130,179,35,28" Width="45" ShowButtons="False" ToolTip="Rüstungsschutz (linkes Bein)" Value="{Binding SelectedHeld.RS[BeinL]}" />
                                        </Grid>
                                    </StackPanel>
                                </ToggleButton.ToolTip>
                                <Image Margin="1" Height="50" Source="/DSA MeisterGeister;component/Images/Icons/ruestung.png"/>
                            </ToggleButton>
                            <Image Height="16" Width="16" x:Name="_imageAeKeHinweis" Stretch="Fill" VerticalAlignment="Top" HorizontalAlignment="Right" ToolTipService.ToolTip="(Zonen RS) Kann in den Einstellungen aktiviert/deaktiviert werden">
                                <Image.Source>
                                    <BitmapImage UriSource="/DSA MeisterGeister;component/Images/Icons/General/info.png" />
                                </Image.Source>
                            </Image>
                            <Popup x:Name="_rsZonenRsControl" PlacementTarget="{Binding ElementName=btnZonenOverlay}" Placement="Left" IsOpen="{Binding ElementName=btnZonenOverlay, Path=IsChecked}">
                                <Border Background="#F27A7A7A">
                                    <Grid  Height="266" Width="257" HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <Grid.Background>
                                            <ImageBrush ImageSource="/DSA MeisterGeister;component/Images/Koerperzonen/koerperzonen_01.png" Stretch="Uniform" TileMode="None" />
                                        </Grid.Background>
                                        <Image Width="45" Margin="15,15" VerticalAlignment="Top" HorizontalAlignment="Left" ToolTip="Rüstungsschutz" Source="/DSA MeisterGeister;component/Images/Icons/ruestung.png"/>
                                        <ViewGeneral:IntBox Margin="81,20,84,223" Width="65" MinValue="0" ShowButtons="True" ToolTip="Rüstungsschutz (Kopf)" Value="{Binding SelectedHeld.RS[Kopf]}" />
                                        <ViewGeneral:IntBox Margin="60,59,132,184" Width="65" MinValue="0" ShowButtons="True" ToolTip="Rüstungsschutz (Brust)" Value="{Binding SelectedHeld.RS[Brust]}" />
                                        <ViewGeneral:IntBox Margin="130,59,62,184" Width="65" MinValue="0" ShowButtons="True" ToolTip="Rüstungsschutz (Rücken)" Value="{Binding SelectedHeld.RS[Rücken]}" />
                                        <ViewGeneral:IntBox Margin="17,95,175,148" Width="65" MinValue="0" ShowButtons="True" ToolTip="Rüstungsschutz (rechter Arm)" Value="{Binding SelectedHeld.RS[ArmR]}" />
                                        <ViewGeneral:IntBox Margin="177,95,15,148" Width="65" MinValue="0" ShowButtons="True" ToolTip="Rüstungsschutz (linker Arm)" Value="{Binding SelectedHeld.RS[ArmL]}" />
                                        <ViewGeneral:IntBox Margin="81,125,84,118" Width="65" MinValue="0" ShowButtons="True" ToolTip="Rüstungsschutz (Bauch)" Value="{Binding SelectedHeld.RS[Bauch]}" />
                                        <ViewGeneral:IntBox Margin="40,179,125,28" Width="65" MinValue="0" ShowButtons="True" ToolTip="Rüstungsschutz (rechtes Bein)" Value="{Binding SelectedHeld.RS[BeinR]}" />
                                        <ViewGeneral:IntBox Margin="130,179,35,28" Width="65" MinValue="0" ShowButtons="True" ToolTip="Rüstungsschutz (linkes Bein)" Value="{Binding SelectedHeld.RS[BeinL]}" />
                                    </Grid>
                                    <!--<StackPanel Orientation="Vertical" Grid.Row="1" HorizontalAlignment="Center" >
                                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" >
                                                    <Button ToolTip="Rüstung entfernen" Command="{Binding OnRemoveRüstung}"/>
                                                    <Button ToolTip="Rüstung hinzufügen" Command="{Binding OnAddRüstung}"/>
                                                </StackPanel>
                                            </StackPanel>-->
                                </Border>
                            </Popup>
                        </Grid>
                    </Grid>
                </Border>
            </Grid>
        </Expander>

        <TabControl x:Name="Tab" Background="Transparent" SelectedIndex="{Binding SelectedFilterIndex, Mode=TwoWay}" BorderThickness="0" Grid.Row="1" Grid.ColumnSpan="2">
            <TabControl.Resources>
                <Style x:Key="TabItemFocusVisual">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="3,3,3,1" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <LinearGradientBrush x:Key="TabItemHotBackground" EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#EAF6FD" Offset="0.15"/>
                    <GradientStop Color="#D9F0FC" Offset=".5"/>
                    <GradientStop Color="#BEE6FD" Offset=".5"/>
                    <GradientStop Color="#A7D9F5" Offset="1"/>
                </LinearGradientBrush>
                <SolidColorBrush x:Key="TabItemSelectedBackground" Color="#F9F9F9"/>
                <SolidColorBrush x:Key="TabItemHotBorderBrush" Color="#3C7FB1"/>
                <SolidColorBrush x:Key="TabItemDisabledBackground" Color="#F4F4F4"/>
                <SolidColorBrush x:Key="TabItemDisabledBorderBrush" Color="#FFC9C7BA"/>
                <Style x:Key="TabItemStyle1" TargetType="{x:Type TabItem}">
                    <Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Padding" Value="6,1,6,1"/>
                    <Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}"/>
                    <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabItem}">
                                <Grid SnapsToDevicePixels="true" Background="Transparent">
                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Padding="{TemplateBinding Padding}">
                                        <ContentPresenter x:Name="Content" ContentSource="Header" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemHotBackground}"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter Property="Panel.ZIndex" Value="1"/>
                                        <Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemSelectedBackground}"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="false"/>
                                            <Condition Property="IsMouseOver" Value="true"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource TabItemHotBorderBrush}"/>
                                    </MultiTrigger>
                                    <Trigger Property="TabStripPlacement" Value="Bottom">
                                        <Setter Property="BorderThickness" TargetName="Bd" Value="1,0,1,1"/>
                                    </Trigger>
                                    <Trigger Property="TabStripPlacement" Value="Left">
                                        <Setter Property="BorderThickness" TargetName="Bd" Value="1,1,0,1"/>
                                    </Trigger>
                                    <Trigger Property="TabStripPlacement" Value="Right">
                                        <Setter Property="BorderThickness" TargetName="Bd" Value="0,1,1,1"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="true"/>
                                            <Condition Property="TabStripPlacement" Value="Top"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Margin" Value="-2,-2,-2,-1"/>
                                        <Setter Property="Margin" TargetName="Content" Value="0,0,0,1"/>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="true"/>
                                            <Condition Property="TabStripPlacement" Value="Bottom"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Margin" Value="-2,-1,-2,-2"/>
                                        <Setter Property="Margin" TargetName="Content" Value="0,1,0,0"/>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="true"/>
                                            <Condition Property="TabStripPlacement" Value="Left"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Margin" Value="-2,-2,-1,-2"/>
                                        <Setter Property="Margin" TargetName="Content" Value="0,0,1,0"/>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="true"/>
                                            <Condition Property="TabStripPlacement" Value="Right"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Margin" Value="-1,-2,-2,-2"/>
                                        <Setter Property="Margin" TargetName="Content" Value="1,0,0,0"/>
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemDisabledBackground}"/>
                                        <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource TabItemDisabledBorderBrush}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <DataTemplate x:Key="DataTemplate1">
                    <Grid/>
                </DataTemplate>
            </TabControl.Resources>
            <TabItem x:Name="All" Background="Transparent" IsSelected="{Binding IsAllSelected}" Height="0">
                <TabItem.Header>
                    <Rectangle Fill="Blue" />
                </TabItem.Header>
            </TabItem>
            <TabItem x:Name="NahkampfFilter" IsSelected="{Binding IsNahkampfWaffeSelected}" Height="0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Column="0" Margin="5">
                        <Label Content="Talent" Style="{DynamicResource TextInStack}" />
                    </StackPanel>
                    <StackPanel Grid.Column="1" Margin="5">
                        <ComboBox Margin="0,0,0,3"  ItemsSource="{Binding NahkampfWaffeTalentListe}" SelectedItem="{Binding SelectedNahkampfwaffeTalent}" Height="25.96" DisplayMemberPath="Talentname" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" IsEditable="True">
                            <ComboBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel />
                                </ItemsPanelTemplate>
                            </ComboBox.ItemsPanel>
                        </ComboBox>
                    </StackPanel>
                    <StackPanel Grid.Column="2" Margin="5">
                        <Label Content="Nahkampfwaffe:" Style="{DynamicResource TextInStack}"/>
                    </StackPanel>
                    <StackPanel Grid.Column="3" Margin="5">
                        <ComboBox Height="25.96" ItemsSource="{Binding NahkampfwaffeListe}" SelectedItem="{Binding SelectedNahkampfwaffe}" Margin="0,0,0,3" DisplayMemberPath="Name" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" IsEditable="True">
                            <ComboBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel />
                                </ItemsPanelTemplate>
                            </ComboBox.ItemsPanel>
                            <ComboBox.InputBindings>
                                <KeyBinding Key="Enter" Command="{Binding OnAddNahkampfwaffe}"/>
                            </ComboBox.InputBindings>
                        </ComboBox>
                    </StackPanel>
                    <StackPanel Grid.Column="4" Margin="5">
                        <Button Padding="0" x:Name="ADDNah2" Command="{Binding OnAddNahkampfwaffe}" VerticalAlignment="Center" Height="23" Margin="0,0,0,5" Style="{DynamicResource ReadOnlyButtonStyle}" IsEnabled="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}}">
                            <Image Source="/DSA MeisterGeister;component/Images/Icons/General/add.png" />
                        </Button>
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem x:Name="FernkampfFilter" Background="Transparent" IsSelected="{Binding IsFernkampfwaffeSelected}" Height="0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Column="0" Margin="5">
                        <Label Content="Talent" Style="{DynamicResource TextInStack}" />
                    </StackPanel>
                    <StackPanel Grid.Column="1" Margin="5">
                        <ComboBox Margin="0,0,0,3" Height="25.96" ItemsSource="{Binding FernkampWaffeTalentListe}" SelectedItem="{Binding SelectedFernkampfwaffeTalent}" DisplayMemberPath="Talentname" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" IsEditable="True">
                            <ComboBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel />
                                </ItemsPanelTemplate>
                            </ComboBox.ItemsPanel>
                        </ComboBox>
                    </StackPanel>
                    <StackPanel Grid.Column="2" Margin="5">
                        <Label Content="Fernkampfwaffe:" Style="{DynamicResource TextInStack}"/>
                    </StackPanel>
                    <StackPanel Grid.Column="3" Margin="5">
                        <ComboBox Height="25.96" ItemsSource="{Binding FernkampfwaffeListe}"  SelectedItem="{Binding SelectedFernkampfwaffe}" Margin="0,0,0,3" DisplayMemberPath="Name" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" IsEditable="True">
                            <ComboBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel />
                                </ItemsPanelTemplate>
                            </ComboBox.ItemsPanel>
                            <ComboBox.InputBindings>
                                <KeyBinding Key="Enter"  Command="{Binding OnAddFernwaffe}" />
                            </ComboBox.InputBindings>
                        </ComboBox>
                    </StackPanel>
                    <StackPanel Grid.Column="4" Margin="5">
                        <Button Padding="0" Command="{Binding OnAddFernwaffe}" VerticalAlignment="Center" Height="23" Margin="0,0,0,5" Style="{DynamicResource ReadOnlyButtonStyle}" IsEnabled="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}}">
                            <Image Source="/DSA MeisterGeister;component/Images/Icons/General/add.png" />
                        </Button>
                    </StackPanel>
                </Grid>

            </TabItem>
            <TabItem x:Name="SchildFilter" Background="Transparent" IsSelected="{Binding IsSchildSelected}" Height="0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Column="0" Margin="5">
                        <Label Content="Schild:" Style="{DynamicResource TextInStack}"/>
                    </StackPanel>
                    <StackPanel Grid.Column="1" Margin="5">
                        <ComboBox Height="25.96" ItemsSource="{Binding SchildListe}" SelectedItem="{Binding SelectedSchild}" Margin="0,0,0,3" DisplayMemberPath="Name" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" IsEditable="True">
                            <ComboBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel />
                                </ItemsPanelTemplate>
                            </ComboBox.ItemsPanel>
                            <ComboBox.InputBindings>
                                <KeyBinding Key="Enter"  Command="{Binding OnAddSchild}" />
                            </ComboBox.InputBindings>
                        </ComboBox>
                    </StackPanel>
                    <StackPanel Grid.Column="2" Margin="5">
                        <Button Padding="0" Command="{Binding OnAddSchild}" VerticalAlignment="Center" Height="23" Margin="0,0,0,5" Style="{DynamicResource ReadOnlyButtonStyle}" IsEnabled="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}}">
                            <Image Source="/DSA MeisterGeister;component/Images/Icons/General/add.png" />
                        </Button>
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem x:Name="RuestungFilter" Background="Transparent" IsSelected="{Binding IsRuestungSelected}" Height="0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Column="0" Margin="5">
                        <Label Content="Rüstung:" Style="{DynamicResource TextInStack}"/>
                    </StackPanel>
                    <StackPanel Grid.Column="1" Margin="5">
                        <ComboBox Height="25.96" ItemsSource="{Binding RuestungListe}"  SelectedItem="{Binding SelectedRuestung}" Margin="0,0,0,3" DisplayMemberPath="Name" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" IsEditable="True">
                            <ComboBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel />
                                </ItemsPanelTemplate>
                            </ComboBox.ItemsPanel>
                            <ComboBox.InputBindings>
                                <KeyBinding Key="Enter"  Command="{Binding OnAddRuestung}" />
                            </ComboBox.InputBindings>
                        </ComboBox>
                    </StackPanel>
                    <StackPanel Grid.Column="2" Margin="5">
                        <Button Padding="0"  Command="{Binding OnAddRuestung}" VerticalAlignment="Center" Height="23" Style="{DynamicResource ReadOnlyButtonStyle}" IsEnabled="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}}">
                            <Image Source="/DSA MeisterGeister;component/Images/Icons/General/add.png" />
                        </Button>
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem x:Name="Sonstiges" Background="Transparent" IsSelected="{Binding IsSonstigesSelected}" Height="0" >
                <TabItem.Effect>
                    <DropShadowEffect ShadowDepth="1"/>
                </TabItem.Effect>
                <TabItem.Header>
                    <Grid Height="50" Width="50">
                        <Border Height="50" Width="50" >
                            <Image Height="50" Width="50" Source="/DSA MeisterGeister;component/Images/Icons/proviant.png">
                                <Image.Effect>
                                    <DropShadowEffect/>
                                </Image.Effect>
                            </Image>
                        </Border>
                    </Grid>
                </TabItem.Header>
                <Grid Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <StackPanel Orientation="Horizontal" IsEnabled="False">
                            <!--<TextBlock Text="Sonstiges" Margin="0,0,10,0" VerticalAlignment="Center" />
                                            <ComboBox Height="23"  Width="222" ItemsSource="{Binding InventarListe}" DisplayMemberPath="Name" SelectedItem="{Binding SelectedItem}" IsEditable="True">
                                                <ComboBox.InputBindings>
                                                    <KeyBinding Key="Enter"  Command="{Binding OnAddInventar}" />
                                                </ComboBox.InputBindings>
                                            </ComboBox>
                                            <Button Command="{Binding OnAddInventar}" VerticalAlignment="Center" Height="25" Style="{DynamicResource ReadOnlyButtonStyle}" IsEnabled="{Binding IsReadOnly, Converter={StaticResource InverseBooleanConverter}}">
                                                <Image Source="/DSA MeisterGeister;component/Images/Icons/General/add.png" />
                                            </Button>-->
                            <TextBlock Foreground="Red" Text="HINWEIS: Derzeit können Gegenstände nur über den Basar eingefügt werden." VerticalAlignment="Center" Margin="5" />
                        </StackPanel>
                    </Grid>
                </Grid>
            </TabItem>
        </TabControl>

        <ScrollViewer VerticalAlignment="Stretch" x:Name="scrollViewer" Grid.Row="2">

            <StackPanel Orientation="Vertical">
                <StackPanel.Resources>
                    <Style TargetType="Expander" BasedOn="{StaticResource {x:Type Expander}}">
                        <Setter Property="Margin" Value="0,4,0,0"/>
                    </Style>
                </StackPanel.Resources>

                <!-- Nahkampf -->
                <Expander IsExpanded="{Binding IsNahkampfwaffevorhanden,Mode=TwoWay}">
                    <Expander.Header>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" MaxHeight="20">
                            <Image Source="/DSA MeisterGeister;component/Images/Icons/nahkampf_01.png" />
                            <TextBlock Style="{StaticResource TextTitel}" Text="Nahkampfwaffen"/>
                        </StackPanel>
                    </Expander.Header>
                    <DataGrid ItemsSource="{Binding HeldNahkampfWaffeImInventar}" ViewGeneral:UIElementBehavior.ScrollViewer="{Binding ElementName=scrollViewer}">
                        <!--Talent-->
                        <DataGrid.Columns>
                            <DataGridCheckBoxColumn Width="30" Binding="{Binding Ausgeruestet,Mode=TwoWay}"/>
                            <DataGridTemplateColumn Width="70" Header="Trageort" CellTemplate="{StaticResource trageortTemplate}" CellEditingTemplate="{StaticResource trageortEditTemplate}"/>
                            <!--<DataGridTextColumn Width="55" Header="Anzahl" Binding="{Binding EntityHA.Anzahl}"/>-->
                            <DataGridTextColumn Width="55" Header="Gewicht" Binding="{Binding EntityNW.Gewicht}" IsReadOnly="True"/>
                            <DataGridTextColumn Width="*" Header="Name" Binding="{Binding EntityNW.Name}" IsReadOnly="True"/>
                            <DataGridTextColumn Width="70" Header="TP" Binding="{Binding TP}" IsReadOnly="True"/>
                            <DataGridTextColumn Width="60" Header="TP/KK" Binding="{Binding TPKK}" IsReadOnly="True"/>
                            <DataGridTextColumn Width="30" Header="BF" Binding="{Binding EntityNW.BF}"/>
                            <DataGridTextColumn Width="30" Header="INI" Binding="{Binding EntityNW.INI}" IsReadOnly="True"/>
                            <DataGridTextColumn Width="30" Header="WM" Binding="{Binding WM}" IsReadOnly="True"/>
                            <DataGridTextColumn Width="40" Header="DK" Binding="{Binding EntityNW.DK}" IsReadOnly="True"/>
                            <DataGridTemplateColumn Width="100" Header="AT / PA" IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ItemsControl Grid.Column="10" ItemsSource="{Binding KämpferWaffen}" VerticalAlignment="Center" HorizontalAlignment="Center">
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Horizontal" ToolTip="{Binding Talent.Talentname}" VerticalAlignment="Center" HorizontalAlignment="Center">
                                                        <Image Source="/DSA%20MeisterGeister;component/Images/Icons/nahkampf_03.png" Height="14" Width="14" />
                                                        <ViewGeneral:TextBoxModInfo Margin="2,0,0,0" ModListe="{Binding ModifikatorenListeAT}" WertName="AT-Wert" StartWert="{Binding AttackeOhneMod}" Wert="{Binding AT}" />
                                                        <Image Source="/DSA%20MeisterGeister;component/Images/Icons/schild.png" Margin="12,0,0,0" Height="14" Width="14"/>
                                                        <ViewGeneral:TextBoxModInfo Margin="2,0,0,0" ModListe="{Binding ModifikatorenListePA}" WertName="PA-Wert" StartWert="{Binding ParadeOhneMod}" Wert="{Binding PA}" />
                                                    </StackPanel>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn MinWidth="30" CellTemplate="{StaticResource removeButton}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Expander>

                <!--Fernkampf-->
                <Expander IsExpanded="{Binding IsFernkampfwaffevorhanden,Mode=TwoWay}">
                    <Expander.Header>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" MaxHeight="20">
                            <Image Source="/DSA MeisterGeister;component/Images/Icons/fernkampf.png"/>
                            <TextBlock Style="{StaticResource TextTitel}" Text="Fernkampfwaffen"/>
                        </StackPanel>
                    </Expander.Header>
                    <DockPanel>
                        <DataGrid DockPanel.Dock="Top" ItemsSource="{Binding HeldFernkampfwaffeImInventar}" ViewGeneral:UIElementBehavior.ScrollViewer="{Binding ElementName=scrollViewer}">
                            <DataGrid.Columns>
                                <DataGridCheckBoxColumn Width="90" Header="Ausgerüstet" Binding="{Binding Ausgeruestet,Mode=TwoWay}"/>
                                <DataGridTemplateColumn Width="70" Header="Trageort" CellTemplate="{StaticResource trageortTemplate}" CellEditingTemplate="{StaticResource trageortEditTemplate}"/>
                                <!--<DataGridTextColumn Width="55" Header="Anzahl" Binding="{Binding EntityHA.Anzahl}"/>-->
                                <DataGridTextColumn Width="55" Header="Gewicht" Binding="{Binding Gewicht}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="*" Header="Name" Binding="{Binding Name}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="70" Header="TP" Binding="{Binding TP}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="120" Header="Reichweiten" Binding="{Binding EntityFW.Reichweiten}" IsReadOnly="True"/>
                                <DataGridTextColumn Width="80" Header="TP+" Binding="{Binding EntityFW.TPReichweiten}"  IsReadOnly="True"/>
                                <DataGridTextColumn Width="50" Header="Laden" Binding="{Binding EntityFW.Laden}" IsReadOnly="True"/>
                                <DataGridTemplateColumn Width="50" Header="FK">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <ItemsControl Grid.Column="10" ItemsSource="{Binding KämpferWaffen}" VerticalAlignment="Center" HorizontalAlignment="Center">
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <StackPanel Orientation="Horizontal" ToolTip="{Binding Talent.Talentname}" VerticalAlignment="Center" HorizontalAlignment="Center">
                                                            <Image Source="/DSA%20MeisterGeister;component/Images/Icons/fernkampf.png" Height="14" Width="14" />
                                                            <ViewGeneral:TextBoxModInfo Margin="2,0,0,0" ModListe="{Binding ModifikatorenListeFK}" WertName="AT-Wert" StartWert="{Binding FernkampfOhneMod}" Wert="{Binding AT}" />
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn MinWidth="30" CellTemplate="{StaticResource removeButton}"/>
                            </DataGrid.Columns>
                        </DataGrid>
                        <TextBlock DockPanel.Dock="Bottom" HorizontalAlignment="Center" Text="*: Wundschwelle (KO/2)-2 | **: improvisiert" Style="{StaticResource TextTitel}"/>
                    </DockPanel>
                </Expander>

                <!-- Schild -->
                <Expander IsExpanded="{Binding IsSchildVorhanden,Mode=TwoWay}">
                    <Expander.Header>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" MaxHeight="20">
                            <Image Source="/DSA MeisterGeister;component/Images/Icons/schild.png"/>
                            <TextBlock Style="{StaticResource TextTitel}" Text="Schilde"/>
                        </StackPanel>
                    </Expander.Header>
                    <DataGrid ItemsSource="{Binding HeldSchildImInventar}" ViewGeneral:UIElementBehavior.ScrollViewer="{Binding ElementName=scrollViewer}">
                        <DataGrid.Columns>
                            <DataGridCheckBoxColumn Width="90" Header="Ausgerüstet" Binding="{Binding Ausgeruestet,Mode=TwoWay}"/>
                            <DataGridTemplateColumn Width="70" Header="Trageort" CellTemplate="{StaticResource trageortTemplate}" CellEditingTemplate="{StaticResource trageortEditTemplate}"/>
                            <!--<DataGridTextColumn Width="55" Header="Anzahl" Binding="{Binding EntityHA.Anzahl}"/>-->
                            <DataGridTextColumn Width="55" Header="Gewicht" Binding="{Binding EntityS.Gewicht}" IsReadOnly="True"/>
                            <DataGridTextColumn Width="*" Header="Name" Binding="{Binding EntityS.Name}" IsReadOnly="True"/>
                            <DataGridTextColumn Width="50" Header="Größe" Binding="{Binding EntityS.Größe}" IsReadOnly="True"/>
                            <DataGridTextColumn Width="30" Header="WM" Binding="{Binding WM}" IsReadOnly="True"/>
                            <DataGridTextColumn Width="30" Header="INI" Binding="{Binding EntityS.INI}" IsReadOnly="True"/>
                            <DataGridTextColumn Width="30" Header="BF" Binding="{Binding EntityS.BF}" IsReadOnly="True"/>
                            <DataGridTemplateColumn MinWidth="30" CellTemplate="{StaticResource removeButton}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Expander>

                <!-- Rüstung -->

                <Expander IsExpanded="{Binding IsRuestungVorhanden,Mode=TwoWay}">
                    <Expander.Header>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" MaxHeight="20">
                            <Image Source="/DSA MeisterGeister;component/Images/Icons/ruestung.png"/>
                            <TextBlock Style="{StaticResource TextTitel}" Text="Rüstungen"/>
                        </StackPanel>
                    </Expander.Header>

                    <DataGrid ItemsSource="{Binding HeldRuestungImInventar}" ViewGeneral:UIElementBehavior.ScrollViewer="{Binding ElementName=scrollViewer}">
                        <DataGrid.Columns>
                            <DataGridCheckBoxColumn Width="90" Header="Ausgerüstet" Binding="{Binding Ausgeruestet,Mode=TwoWay}"/>
                            <DataGridTemplateColumn Width="70" Header="Trageort" CellTemplate="{StaticResource trageortTemplate}" CellEditingTemplate="{StaticResource trageortEditTemplate}"/>
                            <!--<DataGridTextColumn Width="55" Header="Anzahl" Binding="{Binding EntityHA.Anzahl}"/>-->
                            <DataGridTextColumn Width="55" Header="Gewicht" Binding="{Binding EntityR.Gewicht}" IsReadOnly="True"/>
                            <DataGridTextColumn Width="*" Header="Name" Binding="{Binding EntityR.Name}" IsReadOnly="True"/>
                            <DataGridTextColumn Width="30" Header="RS" Binding="{Binding EntityR.RS}" IsReadOnly="True"/>
                            <DataGridTextColumn Width="30" Header="BE" Binding="{Binding EntityR.BE}" IsReadOnly="True"/>
                            <DataGridTemplateColumn MinWidth="30" CellTemplate="{StaticResource removeButton}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Expander>

                <!-- Sonstiges -->
                <Expander IsExpanded="{Binding IsSonstigesVorhanden,Mode=TwoWay}">
                    <Expander.Header>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" MaxHeight="20">
                            <Image Source="/DSA MeisterGeister;component/Images/Icons/ueberanstrengung.png" />
                            <TextBlock Style="{StaticResource TextTitel}" Text="Sonstiges"/>
                        </StackPanel>
                    </Expander.Header>

                    <DataGrid ItemsSource="{Binding HeldSonstigesImInventar}" ViewGeneral:UIElementBehavior.ScrollViewer="{Binding ElementName=scrollViewer}">
                        <DataGrid.Columns>
                            <!--<DataGridTextColumn Width="55" Header="Anzahl" Binding="{Binding EntityHI.Anzahl}"/>-->
                            <DataGridTemplateColumn Width="70" Header="Trageort" CellTemplate="{StaticResource trageortTemplate}" CellEditingTemplate="{StaticResource trageortEditTemplate}"/>
                            <DataGridTextColumn Width="55" Header="Gewicht" Binding="{Binding EntityI.Gewicht}" IsReadOnly="True"/>
                            <DataGridTextColumn Width="*" Header="Name" Binding="{Binding EntityI.Name}" IsReadOnly="True"/>
                            <DataGridTemplateColumn MinWidth="30" CellTemplate="{StaticResource removeButton}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Expander>

            </StackPanel>
        </ScrollViewer>
        <Grid x:Name="Filter" Grid.Column="1" Grid.Row="2">
            <StackPanel>
                <Button x:Name="borderAll" Width="40" Height="40" ToolTipService.ToolTip="Alle Gegenstände" Click="brdKlicked">
                    <Button.Effect>
                        <DropShadowEffect RenderingBias="Quality"/>
                    </Button.Effect>
                    <Image x:Name="imageAll" Source="/DSA MeisterGeister;component/Images/Icons/General/filter.png"/>
                </Button>
                <Button x:Name="borderNahkampf" Width="40" Height="40" ToolTipService.ToolTip="Nahkampfwaffen" Click="brdKlicked">
                    <Button.Effect>
                        <DropShadowEffect RenderingBias="Quality"/>
                    </Button.Effect>
                    <Image x:Name="image" RenderTransformOrigin="0.5,0.5" Source="/DSA MeisterGeister;component/Images/Icons/nahkampf_01.png" />
                </Button>
                <Button x:Name="borderFernkampf" Width="40" Height="40" ToolTipService.ToolTip="Fernkampfwaffen" Click="brdKlicked">
                    <Button.Effect>
                        <DropShadowEffect RenderingBias="Quality"/>
                    </Button.Effect>
                    <Image x:Name="image1" Source="/DSA MeisterGeister;component/Images/Icons/fernkampf.png" />
                </Button>
                <Button x:Name="borderSchild" Width="40" Height="40" ToolTipService.ToolTip="Schild" Click="brdKlicked">
                    <Button.Effect>
                        <DropShadowEffect RenderingBias="Quality"/>
                    </Button.Effect>
                    <Image x:Name="image2" Source="/DSA MeisterGeister;component/Images/Icons/schild.png" />
                </Button>
                <Button x:Name="borderRuestung" Width="40" Height="40" ToolTipService.ToolTip="Rüstungen" Click="brdKlicked">
                    <Button.Effect>
                        <DropShadowEffect RenderingBias="Quality"/>
                    </Button.Effect>
                    <Image x:Name="image3" Margin="-1,1,1,-1" Source="/DSA MeisterGeister;component/Images/Icons/ruestung.png" />
                </Button>
                <Button x:Name="borderSonstiges" Width="40" Height="40" ToolTipService.ToolTip="Sonstige Gegenstände" Click="brdKlicked">
                    <Button.Effect>
                        <DropShadowEffect RenderingBias="Quality"/>
                    </Button.Effect>
                    <Image x:Name="image4" Source="/DSA MeisterGeister;component/Images/Icons/ueberanstrengung.png" />
                </Button>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>