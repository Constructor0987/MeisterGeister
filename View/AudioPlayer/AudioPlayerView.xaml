<UserControl x:Class="MeisterGeister.View.AudioPlayer.AudioPlayerView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:vmAudioPlayer="clr-namespace:MeisterGeister.ViewModel.AudioPlayer"
    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" 
    xmlns:local="clr-namespace:MeisterGeister.View.AudioPlayer"
    xmlns:ViewGeneral="clr-namespace:MeisterGeister.View.General"  
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"    
    mc:Ignorable="d"
    d:DesignHeight="571" d:DesignWidth="1046" Background="{StaticResource Background1}" Margin="0,5,5,0" IsEnabled="True"
             Loaded="Window_Loaded" Unloaded="Window_Unloaded" KeyDown="Window_KeyDown" >

    <UserControl.Resources>
        <Style x:Key="myLBStyle" TargetType="{x:Type ListBoxItem}">
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                             Color="Transparent"/>
            </Style.Resources>
        </Style>
        
        <vmAudioPlayer:MultiBooleanAndConverter x:Key="MultiBooleanAndConverter1" />
        <vmAudioPlayer:MultiBooleanORConverter x:Key="MultiBooleanORConverter1" />    
        <vmAudioPlayer:IsEqualOrGreaterThanConverter x:Key="IsEqualOrGreaterThanConverter1"/>
        <vmAudioPlayer:IsEqualOrGreaterThanVisibleConverter x:Key="IsEqualOrGreaterThanVisibleConverter1"/>
        <vmAudioPlayer:StringNullOrEmptyToVisibilityConverter x:Key="StringNullOrEmptyToVisibilityConverter1"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter1"/>
        <vmAudioPlayer:InvertedBoolenConverter x:Key="InvertedBoolenConverter1" />
        <vmAudioPlayer:BooleanInverseToVisibilityConverter x:Key="BooleanInverseToVisibilityConverter1"/>
        <vmAudioPlayer:MultiBooleanToVisibilityConverter x:Key="MultiBooleanToVisibilityConverter1" />
        <vmAudioPlayer:IsNullOrEmptyToBoolConverter x:Key="IsNullOrEmptyToBoolConverter1" />
        <vmAudioPlayer:BooleanAndNotReihenfolgeConverter x:Key="BooleanAndNotReihenfolgeConverter1" />
        <vmAudioPlayer:DoubleToTimespanHHMMSSConverter x:Key="DoubleToTimespanHHMMSSConverter1" />
        <vmAudioPlayer:SliderRangeMarginConverter x:Key="SliderRangeMarginConverter1" />
        <vmAudioPlayer:BooleanInverseToVisibilityHiddenConverter x:Key="BooleanInverseToVisibilityHiddenConverter1"/>

        <ControlTemplate x:Key="simpleSliderMin" TargetType="{x:Type Slider}">
            <Border SnapsToDevicePixels="true" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Name="brdSliderMin">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <Rectangle x:Name="PART_SelectionRange"/>

                    <Track x:Name="PART_Track" Grid.Row="1">
                        <Track.Thumb>
                            <Thumb x:Name="Thumb">
                                <Thumb.Template>
                                    <ControlTemplate TargetType="Thumb">
                                        <Polygon
                                        Points="0,1 8,10 0,19"
                                        Stroke="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}" 
                                        StrokeThickness="1">
                                            <Polygon.Fill>
                                                <SolidColorBrush Color="{StaticResource {x:Static SystemColors.HighlightColorKey}}" Opacity="0.4"/>
                                            </Polygon.Fill>
                                        </Polygon>
                                    </ControlTemplate>
                                </Thumb.Template>
                            </Thumb>
                        </Track.Thumb>
                    </Track>
                </Grid>
            </Border>
        </ControlTemplate>

        <ControlTemplate x:Key="simpleSliderMax" TargetType="{x:Type Slider}">
            <Border SnapsToDevicePixels="true" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <Rectangle x:Name="PART_SelectionRange"/>

                    <Track x:Name="PART_Track" Grid.Row="1">
                        <Track.Thumb>
                            <Thumb x:Name="Thumb">
                                <Thumb.Template>
                                    <ControlTemplate TargetType="Thumb">
                                        <Polygon
                                        Points="0,10 8,1 8,19"
                                        Stroke="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}" 
                                        StrokeThickness="1">
                                            <Polygon.Fill>
                                                <SolidColorBrush Color="{StaticResource {x:Static SystemColors.HighlightColorKey}}" Opacity="0.4"/>
                                            </Polygon.Fill>
                                        </Polygon>
                                    </ControlTemplate>
                                </Thumb.Template>
                            </Thumb>
                        </Track.Thumb>
                    </Track>
                </Grid>
            </Border>
        </ControlTemplate>

        <DataTemplate x:Key="lbEditorThemeListboxIcon" >
            <StackPanel Name="spnllbiIcon" Orientation="Horizontal" >
                <Grid Name="grd">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="25" />
                        <ColumnDefinition Width="40*" MinWidth="40" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="25" />
                    </Grid.RowDefinitions>
                    <Image Source="/Images/Icons/General/copy.png" Stretch="Fill" />
                    <Label Content="{ Binding Path=ATheme.Name}" Grid.Column="1" FontSize="14" Padding="5,2,5,5" />
                </Grid>
                <Button Padding="0" Width="22" Cursor="Hand" ToolTip="Exportieren des Themes" 
                    Visibility="{Binding Path=IsMouseOver, ElementName=spnllbiIcon, Converter={StaticResource BooleanToVisibilityConverter1}}" 
                    Command="{Binding OnBtnExportLbEditorTheme}" >
                    <Image Source="/Images/Icons/General/export.png"/>
                </Button>
                <Button Padding="0" Width="22" Cursor="Hand" ToolTip="Löschen des Themes" 
                    Visibility="{Binding Path=IsMouseOver, ElementName=spnllbiIcon, Converter={StaticResource BooleanToVisibilityConverter1}}" 
                    Command="{Binding OnBtnLöschenLbEditorTheme}" >
                    <Image Source="/Images/Icons/General/entf_01.png" />
                </Button>
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="cmbxItemEditorThemeIcon" >
            <StackPanel Name="spnllbiIcon" Orientation="Horizontal" >
                <Grid Name="grd">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="25" />
                        <ColumnDefinition Width="40*" MinWidth="40" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="25" />
                    </Grid.RowDefinitions>
                    <Image Source="/Images/Icons/General/copy.png" Stretch="Fill" />
                    <Label Content="{ Binding Path=ATheme.Name}" Grid.Column="1" FontSize="14" Padding="5,2,5,5" />
                </Grid>
            </StackPanel>
        </DataTemplate>

        <Style x:Key="ImageEnabled" TargetType="Image">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.25"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="GlasButton" TargetType="{x:Type Button}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <!-- Background Layer -->
                            <Ellipse Fill="{TemplateBinding Background}"/>
                            <!-- Lichtbrechungs-Layer -->
                            <Ellipse x:Name="RefractionLayer">
                                <Ellipse.Fill>
                                    <RadialGradientBrush GradientOrigin="0.496,1.052">
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                                <TranslateTransform X="0.02" Y="0.3"/>
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Offset="1" Color="#00000000"/>
                                        <GradientStop Offset="0.4" Color="#FFFFFFFF"/>
                                    </RadialGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                            <!-- Spieglungs-Layer -->
                            <Path x:Name="ReflectionLayer" VerticalAlignment="Top" Stretch="Fill">
                                <Path.RenderTransform>
                                    <ScaleTransform ScaleY="0.5" />
                                </Path.RenderTransform>
                                <Path.Data>
                                    <PathGeometry>
                                        <PathFigure IsClosed="True" StartPoint="98.999,45.499">
                                            <BezierSegment Point1="98.999,54.170" Point2="89.046,52.258" Point3="85.502,51.029"/>
                                            <BezierSegment
                                    IsSmoothJoin="True"
                                    Point1="75.860,47.685"
                                    Point2="69.111,45.196"
                                    Point3="50.167,45.196"/>
                                            <BezierSegment Point1="30.805,45.196" Point2="20.173,47.741" Point3="10.665,51.363"/>
                                            <BezierSegment
                                    IsSmoothJoin="True"
                                    Point1="7.469,52.580"
                                    Point2="1.000,53.252"
                                    Point3="1.000,44.999"/>
                                            <BezierSegment Point1="1.000,39.510" Point2="0.884,39.227" Point3="2.519,34.286"/>
                                            <BezierSegment
                                    IsSmoothJoin="True"
                                    Point1="9.106,14.370"
                                    Point2="27.875,0"
                                    Point3="50,0"/>
                                            <BezierSegment Point1="72.198,0" Point2="91.018,14.466" Point3="97.546,34.485"/>
                                            <BezierSegment
                                    IsSmoothJoin="True"
                                    Point1="99.139,39.369"
                                    Point2="98.999,40.084"
                                    Point3="98.999,45.499"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Path.Data>
                                <Path.Fill>
                                    <RadialGradientBrush GradientOrigin="0.498,0.526">
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform
                                       CenterX="0.5"
                                       CenterY="0.5"
                                       ScaleX="1"
                                       ScaleY="1.997"/>
                                                <TranslateTransform X="0" Y="0.5"/>
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Offset="1" Color="#FFFFFFFF"/>
                                        <GradientStop Offset="0.85" Color="#92FFFFFF"/>
                                        <GradientStop Offset="0" Color="#00000000"/>
                                    </RadialGradientBrush>
                                </Path.Fill>
                            </Path>
                            <!-- Content -->
                            <ContentPresenter Margin="0,2,0,0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="RefractionLayer" Property="Fill">
                                    <Setter.Value>
                                        <RadialGradientBrush GradientOrigin="0.496,1.052">
                                            <RadialGradientBrush.RelativeTransform>
                                                <TransformGroup>
                                                    <ScaleTransform
                                          CenterX="0.5"
                                          CenterY="0.5"
                                          ScaleX="1.5"
                                          ScaleY="1.5"/>
                                                    <TranslateTransform X="0.02" Y="0.3"/>
                                                </TransformGroup>
                                            </RadialGradientBrush.RelativeTransform>
                                            <GradientStop Offset="1" Color="#00000000"/>
                                            <GradientStop Offset="0.45" Color="#FFFFFFFF"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="ReflectionLayer" Property="Fill">
                                    <Setter.Value>
                                        <RadialGradientBrush GradientOrigin="0.498,0.526">
                                            <RadialGradientBrush.RelativeTransform>
                                                <TransformGroup>
                                                    <ScaleTransform
                                          CenterX="0.5"
                                          CenterY="0.5"
                                          ScaleX="1"
                                          ScaleY="1.997"/>
                                                    <TranslateTransform X="0" Y="0.5"/>
                                                </TransformGroup>
                                            </RadialGradientBrush.RelativeTransform>
                                            <GradientStop Offset="1" Color="#FFFFFFFF"/>
                                            <GradientStop Offset="0.85" Color="#BBFFFFFF"/>
                                            <GradientStop Offset="0" Color="#00000000"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="RefractionLayer" Property="Fill">
                                    <Setter.Value>
                                        <RadialGradientBrush GradientOrigin="0.496,1.052">
                                            <RadialGradientBrush.RelativeTransform>
                                                <TransformGroup>
                                                    <ScaleTransform
                                          CenterX="0.5"
                                          CenterY="0.5"
                                          ScaleX="1.5"
                                          ScaleY="1.5"/>
                                                    <TranslateTransform X="0.02" Y="0.3"/>
                                                </TransformGroup>
                                            </RadialGradientBrush.RelativeTransform>
                                            <GradientStop Offset="1" Color="#00000000"/>
                                            <GradientStop Offset="0.3" Color="#FFFFFFFF"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="ReflectionLayer" Property="Fill">
                                    <Setter.Value>
                                        <RadialGradientBrush GradientOrigin="0.498,0.526">
                                            <RadialGradientBrush.RelativeTransform>
                                                <TransformGroup>
                                                    <ScaleTransform
                                          CenterX="0.5"
                                          CenterY="0.5"
                                          ScaleX="1"
                                          ScaleY="1.997"/>
                                                    <TranslateTransform X="0" Y="0.5"/>
                                                </TransformGroup>
                                            </RadialGradientBrush.RelativeTransform>
                                            <GradientStop Offset="1" Color="#CCFFFFFF"/>
                                            <GradientStop Offset="0.85" Color="#66FFFFFF"/>
                                            <GradientStop Offset="0" Color="#00000000"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SimpleListBoxItem" TargetType="ListBoxItem">
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>
            </Style.Resources>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border Name="Border" Padding="2" SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#38BEB3A3" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#389E804D" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>                    
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition >
                <RowDefinition.Style>
                    <Style TargetType="RowDefinition">
                        <Setter Property="Height" Value="22"/>
                        <Style.Triggers>
                            <DataTrigger Value="True">
                                <DataTrigger.Binding>
                                    <MultiBinding Converter="{StaticResource MultiBooleanORConverter1}" >
                                        <Binding Path="hotkeyListUsed.Count" Converter="{StaticResource IsEqualOrGreaterThanConverter1}" ConverterParameter='1' />
                                        <Binding Path="StdPadAufC" />
                                    </MultiBinding>
                                </DataTrigger.Binding>
                                <Setter Property="Height" Value="56" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </RowDefinition.Style>
            </RowDefinition>
            <RowDefinition Height="207*" />
            <RowDefinition Height="334*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="766*" />
            <ColumnDefinition Width="120" />
        </Grid.ColumnDefinitions>

        <GroupBox Header="Hotkeys" VerticalAlignment="Bottom" Margin="10,-5,10,0" Height="60" Padding="0,-1,0,-3" 
            Visibility="{Binding ShowHotkeyPanel, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter1}}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="55" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="35" />
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal">
                    <Button Height="30" Style="{StaticResource GlasButton}" Background="Black" Width="30" ToolTip="Stoppen aller laufenden Hotkeys" 
                            Command="{Binding OnAllHotkeysStop}" >
                        <Image Source="/Images/Icons/General/stop.png" Margin="5,6,4,4" />
                    </Button>
                    <Slider Width="22" Maximum="100" Minimum="0" Name="slHotkey" UseLayoutRounding="True" SmallChange="1" LargeChange="10" Orientation="Vertical" Margin="2" 
                            Value="{Binding HotkeyVolume, UpdateSourceTrigger=PropertyChanged}"                             
                            MouseWheel="slVolume_MouseWheel" >
                        <Slider.ToolTip>
                            <TextBlock Text="{Binding HotkeyVolume, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0}% }" />
                        </Slider.ToolTip>
                    </Slider>
                </StackPanel>

                <ScrollViewer Grid.Column="1" VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Auto" HorizontalAlignment="Stretch">
                    <StackPanel Margin="0,5,0,0" >
                        <ItemsControl ItemsSource="{Binding hotkeyListUsed}" >
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Height="35" Margin="5,0,0,0" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>

                    </StackPanel>
                </ScrollViewer>
                <Button Name="btnHotkeysLöschen" Grid.Column="2" VerticalAlignment="Center" Height="25" Width="25" ToolTip="Alle Hotkeys löschen" Margin="5,0" 
                        Command="{Binding OnAlleHotkeysEntfenrnen}" >
                    <Image Source="/Images/Icons/General/entf_all.png" Style="{StaticResource ImageEnabled}" />
                </Button>

            </Grid>
        </GroupBox>

        <Button Grid.Column="2" Height="42" ToolTip="Audio Speed-Buttons verwalten" HorizontalAlignment="Right" VerticalAlignment="Center" 
                        Click="btnAudioSpeedButtonWesenZuweisen_Click" Focusable="False" Background="{x:Null}" >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Margin" Value="0,0,60,-20"/>
                    <Style.Triggers>
                        <DataTrigger Value="True">
                            <DataTrigger.Binding>
                                <MultiBinding Converter="{StaticResource MultiBooleanORConverter1}" >
                                    <Binding Path="hotkeyListUsed.Count" Converter="{StaticResource IsEqualOrGreaterThanConverter1}" ConverterParameter='1' />
                                    <Binding Path="StdPadAufC" />
                                </MultiBinding>
                            </DataTrigger.Binding>
                            <Setter Property="Margin" Value="0,0,60,0" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
            <!--Visibility="{Binding AktKlangPlaylist, Converter={StaticResource StringNullOrEmptyToVisibilityConverter1}, UpdateSourceTrigger=PropertyChanged}"-->
            <Button.Content>
                <Grid>
                    <Image Source="/Images/Icons/gegner.png" Margin="0,3,5,0" />
                    <Image Source="/Images/Icons/helden.png" Margin="5,-2,-5,6" />
                    <Image Source="/Images/Icons/General/speaker.png" Style="{StaticResource ImageEnabled}" Margin="-10,0,-10,-10" Opacity=".5" />
                </Grid>
            </Button.Content>           
        </Button>

        <Image Grid.Column="1" Height=" 30" Margin="10,0,10,-20" HorizontalAlignment="Right" Source="/Images/Icons/General/info.png"
               Visibility="{Binding StdPadAufC, Converter={StaticResource BooleanToVisibilityConverter1}}">
            <Image.ToolTip>
                <TextBlock>
                    Es ist ein Standard-Verzeichnis auf den Hauptpfad C gefunden worden ('C:\').<LineBreak />
                    <LineBreak /> 
                    Dies verlängert evtl. die Ladezeiten!<LineBreak />
                    <LineBreak />
                    Bitte wähle ein spezifischeres Verzeichnis.<LineBreak />
                    (z.B. 'C:\DSA-Musik')
                </TextBlock>
            </Image.ToolTip>
            <Image.Style>
                <Style TargetType="Image">
                    <Setter Property="Margin" Value="10,0,10,-20"/>
                    <Style.Triggers>
                        <DataTrigger Value="True">
                            <DataTrigger.Binding>
                                <MultiBinding Converter="{StaticResource MultiBooleanORConverter1}" >
                                    <Binding Path="hotkeyListUsed.Count" Converter="{StaticResource IsEqualOrGreaterThanConverter1}" ConverterParameter='1' />
                                    <Binding Path="StdPadAufC" />
                                </MultiBinding>
                            </DataTrigger.Binding>
                            <Setter Property="Margin" Value="10,0,10,0" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Image.Style>
        </Image>
        <TabControl Margin="12,0,3,0" Name="tcAudioPlayer"  Grid.Row="1" Grid.ColumnSpan="2" Grid.RowSpan="2" SelectionChanged="tcAudioPlayer_SelectionChanged" >
            <TabItem Header="Editor" Name="tiEditor" >
                <Grid Background="{StaticResource Background1}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="188" MinWidth="188" />
                        <ColumnDefinition Width="323*" MinWidth="300" />
                        <ColumnDefinition Width="340*" MaxWidth="340" />
                        <ColumnDefinition Width="180*" MinWidth="180" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="40" />
                        <RowDefinition Height="421*" />
                    </Grid.RowDefinitions>

                    <GroupBox IsEnabled="True" Margin="0,1,0,0">
                        <StackPanel Margin="10,2,0,-2">
                            <RadioButton Content="Einzelne Playliste editieren" Height="16" GroupName="KlangEdit" Name="rbEditorEditPList"
                                IsChecked="{Binding rbEditorEditPlaylist}" />
                            <RadioButton Content="Komplettes Theme" Height="18" Name="rbEditorEditTheme" GroupName="KlangEdit" />
                        </StackPanel>
                    </GroupBox>
                    <Border Grid.Row="1" Margin="0,0,0,10" MinWidth="110">
                        <Grid Name="grdEditorList">
                            <Grid.RowDefinitions>
                                <RowDefinition>
                                    <RowDefinition.Style>
                                        <Style TargetType="RowDefinition">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=rbEditorEditTheme,Path=IsChecked}" Value="True">
                                                    <Setter Property="Height" Value="200*" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ElementName=rbEditorEditPList,Path=IsChecked}" Value="True">
                                                    <Setter Property="Height" Value="*" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </RowDefinition.Style>
                                </RowDefinition>

                                <RowDefinition>
                                    <RowDefinition.Style>
                                        <Style TargetType="RowDefinition">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=exKlangPList,Path=IsExpanded}" Value="True">
                                                    <Setter Property="Height" Value="330*" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ElementName=exKlangPList,Path=IsExpanded}" Value="False">
                                                    <Setter Property="Height" Value="Auto" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </RowDefinition.Style>
                                </RowDefinition>
                            </Grid.RowDefinitions>

                            <Expander Name="exEditorTheme" HorizontalAlignment="Stretch" IsExpanded="True" ForceCursor="False" Margin="0,-1,7,10" VerticalAlignment="Stretch" VerticalContentAlignment="Top" 
                                      Visibility="{Binding Path=IsChecked, ElementName=rbEditorEditTheme, Converter={StaticResource BooleanToVisibilityConverter1}}" >
                                <Expander.Header>
                                    <TextBlock Text="Themes" Style="{DynamicResource TextTitel}" />
                                </Expander.Header>
                                <Border Style="{DynamicResource ControlContentBorder}" ToolTip="Theme zum Editieren auswählen" VerticalAlignment="Stretch">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="32" />
                                            <RowDefinition Height="26" />
                                            <RowDefinition Height="297*" />
                                        </Grid.RowDefinitions>
                                        <Border>
                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                                <Button Padding="0" Name="btnKlangNeuTheme" ToolTip="Neues Theme" Height="28" Width="22" 
                                                        Command="{Binding OnNeuesTheme}" >
                                                    <Image Source="/Images/Icons/General/add.png" Style="{StaticResource ImageEnabled}" />
                                                </Button>
                                                <Button Padding="0" Name="btnKlangThemeImport" ToolTip="Theme importieren" Height="28" Width="22" Margin="1,0,0,0" 
                                                         Command="{Binding OnBtnThemeImport}" >
                                                    <Image Source="/Images/Icons/General/import.png" Style="{StaticResource ImageEnabled}" />
                                                </Button>
                                                <Button Padding="0" Name="btnThemeExportALL" ToolTip="Alle Themes exportieren" Height="28" Width="22" Margin="1,0,0,0" 
                                                        Command="{Binding OnThemeExportAll}">
                                                    <Grid>
                                                        <Image Source="/Images/Icons/General/export.png" Style="{StaticResource ImageEnabled}" Margin="-2,-2,2,2" />
                                                        <Image Source="/Images/Icons/General/export.png" Style="{StaticResource ImageEnabled}" Margin="3,3,-3,-3" />
                                                    </Grid>
                                                </Button>
                                            </StackPanel>
                                        </Border>

                                        <Border HorizontalAlignment="Stretch" Grid.Row="1" Style="{DynamicResource ControlContentBorder}" VerticalAlignment="Stretch" ToolTip="Theme Filter" Name="brdKlangThemeFilter">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="26" />
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="20" />
                                                </Grid.ColumnDefinitions>
                                                <Image Source="/Images/Icons/General/filter.png" Stretch="Fill"/>
                                                <TextBox Margin="2,1" Name="tbEditorThemeFilter" Grid.Column="1" 
                                                    Text="{Binding Path=SuchTextEditorTheme, UpdateSourceTrigger=PropertyChanged}" 
                                                    vmAudioPlayer:FocusExtension.IsFocused="{Binding ShowHotkeyPanel, Mode=TwoWay}" />
                                                <Button Grid.Column="2" ToolTip="Filter löschen"
                                                        Command="{Binding OnSuchTextEditorThemeLöschen}">
                                                    <Image Source="/Images/Icons/Wuerfel/w6_blank.png" Stretch="Fill" HorizontalAlignment="Stretch" Width="15" Height="25" />
                                                </Button>
                                            </Grid>
                                        </Border>

                                        <Border Grid.Row="2" HorizontalAlignment="Stretch" Margin="0,0,0,2" Style="{DynamicResource ControlContentBorder}" VerticalAlignment="Stretch">
                                            <ListBox Background="Transparent" Name="lbEditorTheme"     
                                                    ItemsSource="{Binding FilteredEditorThemeListBoxItemListe, UpdateSourceTrigger=PropertyChanged}"
                                                    ItemTemplate="{StaticResource lbEditorThemeListboxIcon}" 
                                                    SelectedItem="{Binding SelectedEditorThemeItem}"   
                                                    SelectionChanged="lb_SelectionChanged" />
                                        </Border>
                                    </Grid>
                                </Border>
                            </Expander>

                            <GridSplitter Name="grdsplitEditorList" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" ResizeDirection="Rows" Height="5" 
                                Visibility="{Binding Path=IsChecked, ElementName=rbEditorEditTheme, Converter={StaticResource BooleanToVisibilityConverter1}}" />

                            <Expander Name="exKlangPList" HorizontalAlignment="Stretch" IsExpanded="True" ForceCursor="False" Grid.Row="1" Margin="0,-1,7,0" >
                                <Expander.Header>
                                    <TextBlock Text="Playlisten" Style="{DynamicResource TextTitel}" />
                                </Expander.Header>
                                <Border Style="{DynamicResource ControlContentBorder}" >
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="32" />
                                            <RowDefinition Height="26" />
                                            <RowDefinition Height="500*" />
                                        </Grid.RowDefinitions>

                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="92" />
                                        </Grid.ColumnDefinitions>

                                        <StackPanel Margin="5,0,0,2">
                                            <CheckBox Name="rbEditorKlang" IsChecked="{Binding LbEditorMitGeräusche}" Content="Geräusche" VerticalAlignment="Top" Padding="2,0,0,0" ToolTip="Geräusch-Playlisten anzeigen" />
                                            <CheckBox Name="rbEditorMusik" IsChecked="{Binding LbEditorMitMusik}" Content="Musik" VerticalAlignment="Top" Padding="2,0,0,0" ToolTip="Musik-Playlisten anzeigen" />
                                        </StackPanel>

                                        <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                                            <ToggleButton Name="tbtnPlaylistAZ" Height="28" Width="22" Grid.Column="1" Focusable="False" 
                                                IsChecked="{Binding PlaylistAZ}" Background="{x:Null}" >
                                                <Image Margin="-2" >
                                                    <Image.Style>
                                                        <Style TargetType="Image">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding PlaylistAZ}" Value="True">
                                                                    <Setter Property="Source" Value="/Images/Icons/General/sort.png" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding PlaylistAZ}" Value="False">
                                                                    <Setter Property="Source" Value="/Images/Icons/General/sort1.png" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Image.Style>
                                                </Image>
                                                <ToggleButton.Style>
                                                    <Style TargetType="ToggleButton">
                                                        <Setter Property="ToolTip" Value="Sortierung: nach Reihenfolge" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding PlaylistAZ}" Value="True">
                                                                <Setter Property="ToolTip" Value="Sortierung: Alphabethisch" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ToggleButton.Style>
                                            </ToggleButton>
                                            <Button Padding="0" Name="btnNeuePlaylist" ToolTip="Neue Playliste"  Height="28" Width="22" Grid.Column="1" 
                                                Command="{Binding OnNeuePlaylist}">
                                                <Image Source="/Images/Icons/General/add.png" Style="{StaticResource ImageEnabled}" />
                                            </Button>
                                            <Button Padding="0" Name="btnPlaylistImport" ToolTip="Playist importieren" Height="28" Width="22" Margin="1,0,0,0" 
                                                    Command="{Binding OnPlaylistImportieren}" >
                                                <Image Source="/Images/Icons/General/import.png" Style="{StaticResource ImageEnabled}" />
                                            </Button>
                                            <Button Padding="0" Name="btnPlaylistExportALL" ToolTip="Alle Playisten exportieren" Height="28" Width="22" Margin="1,0,0,0" 
                                                    Command="{Binding OnExportAllPlaylisten}">
                                                <Grid>
                                                    <Image Source="/Images/Icons/General/export.png" Style="{StaticResource ImageEnabled}" Margin="-2,-2,2,2" />
                                                    <Image Source="/Images/Icons/General/export.png" Style="{StaticResource ImageEnabled}" Margin="3,3,-3,-3" />
                                                </Grid>
                                            </Button>
                                        </StackPanel>

                                        <Border Grid.Row="1" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" Style="{DynamicResource ControlContentBorder}" VerticalAlignment="Stretch" ToolTip="Playlisten-Filter">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="26" />
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="20" />
                                                </Grid.ColumnDefinitions>
                                                <Image Source="/Images/Icons/General/filter.png" Stretch="Fill"/>
                                                <TextBox Margin="2,1" Name="tbEditorPlaylistFilter" Grid.Column="1" 
                                                    Text="{Binding Path=SuchTextEditor, UpdateSourceTrigger=PropertyChanged}"
                                                    vmAudioPlayer:FocusExtension.IsFocused="{Binding ShowHotkeyPanel, Mode=TwoWay}" />
                                                <Button Grid.Column="2" ToolTip="Filter löschen" Padding="0"
                                                        Command="{Binding OnSuchTextEditorPlaylistLöschen}">
                                                    <Image Source="/Images/Icons/Wuerfel/w6_blank.png" Stretch="Fill" HorizontalAlignment="Stretch" Width="15" Height="25" />
                                                </Button>
                                            </Grid>
                                        </Border>

                                        <Border Grid.Row="2" Grid.ColumnSpan="2" Margin="0,0,0,2" Style="{DynamicResource ControlContentBorder}"  >
                                            <local:ItemDragAndDropListBox Background="Transparent" x:Name="lbEditor" VerticalAlignment="Stretch"  
                                                ItemsSource="{Binding FilteredEditorListBoxItemListe, UpdateSourceTrigger=PropertyChanged}"
                                                AllowDrop="True"
                                                PreviewMouseMove="lbEditorPlaylist_PreviewMouseMove"
                                                PreviewMouseLeftButtonDown="lbiEditorPlaylist_PreviewMouseLeftButtonDown"
                                                Drop="lbEditor_Drop"     
                                                SelectedItem="{Binding SelectedEditorItem, UpdateSourceTrigger=PropertyChanged}" 
                                                SelectionChanged="lb_SelectionChanged"  >
                                                <ListBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <local:lbEditorItem/>
                                                    </DataTemplate>
                                                </ListBox.ItemTemplate>

                                                <ListBox.Style>
                                                    <Style TargetType="ListBox">
                                                        <Setter Property="ToolTip" Value="{x:Null}" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ElementName=rbEditorEditTheme,Path=IsChecked, FallbackValue=False}"  Value="True">
                                                                <Setter Property="ToolTip" Value="Per Drag&amp;Drop die Playlisten in das Theme einbinden" />
                                                            </DataTrigger>

                                                            <DataTrigger Value="True">
                                                                <DataTrigger.Binding>
                                                                    <MultiBinding Converter="{StaticResource MultiBooleanAndConverter1}">
                                                                        <Binding ElementName="rbEditorEditTheme,Path=IsChecked, FallbackValue=False}" Converter="{StaticResource InvertedBoolenConverter1}" />
                                                                        <Binding Path="PlaylistAZ" Converter="{StaticResource InvertedBoolenConverter1}" />
                                                                    </MultiBinding>
                                                                </DataTrigger.Binding>
                                                                <Setter Property="ToolTip" Value="Per Drag&amp;Drop die Position innerhalb der Liste verändern" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ListBox.Style>
                                            </local:ItemDragAndDropListBox>
                                        </Border>
                                    </Grid>
                                </Border>
                            </Expander>
                        </Grid>
                    </Border>
                    <GridSplitter Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Stretch" Width="5" />

                    <Border Name="brdKlang" Height="40" HorizontalAlignment="Stretch" Grid.Column="1" VerticalAlignment="Top" Style="{DynamicResource ControlContentBorder}"
                            Visibility="{Binding EditorListeVisible, Converter={StaticResource BooleanToVisibilityConverter1}}">
                        <Grid Name="grdEditorPlaylistInfo">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100" />
                                <ColumnDefinition Width="190*" MinWidth="190" />
                                <ColumnDefinition Width="25" />
                            </Grid.ColumnDefinitions>

                            <Label Name="lblEditorListName" Content="Playlisten-Name" VerticalContentAlignment="Center" />
                            <TextBox HorizontalAlignment="Stretch" Name="tboxEditorName" Background="{x:Null}" ForceCursor="True" FontWeight="Bold" ToolTip="Name der Playliste" Height="25" Grid.Column="1" 
                                     Text="{Binding AktKlangPlaylist.Name, UpdateSourceTrigger=PropertyChanged}" 
                                     KeyDown="TextBox_KeyDown"
                                     vmAudioPlayer:FocusExtension.IsFocused="{Binding ShowHotkeyPanel, Mode=TwoWay}" />

                            <Image Name="imgPlaylistLängeCheck" Width="22" Grid.Column="2" Source="/Images/Icons/General/refresh.png" 
                                   ToolTip="Playlistelänge wird berechnet..."
                                   Visibility="{Binding BerechneSpieldauer, Converter={StaticResource BooleanToVisibilityConverter1}}" />
                        </Grid>
                    </Border>

                    <Border Height="40" HorizontalAlignment="Stretch" Grid.Column="1" VerticalAlignment="Top" Style="{DynamicResource ControlContentBorder}" >
                        <Border.Visibility>
                            <MultiBinding Converter="{StaticResource MultiBooleanToVisibilityConverter1}" >
                                <Binding ElementName="rbEditorEditTheme" Path="IsChecked" />
                                <Binding Path="SelectedEditorThemeItem" Converter="{StaticResource IsNullOrEmptyToBoolConverter1}" />
                            </MultiBinding>
                        </Border.Visibility>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="85" />
                                <ColumnDefinition Width="200*" MinWidth="200" />
                                <ColumnDefinition Width="20" />
                            </Grid.ColumnDefinitions>

                            <Label Content="Theme-Name" VerticalContentAlignment="Center" />
                            <TextBox HorizontalAlignment="Stretch" FontWeight="Bold" ToolTip="Name des Themes" Height="25" Grid.Column="1" Background="{x:Null}" ForceCursor="True" 
                                    Text="{Binding AktKlangTheme.Name}" 
                                     KeyDown="TextBox_KeyDown"
                                    vmAudioPlayer:FocusExtension.IsFocused="{Binding ShowHotkeyPanel, Mode=TwoWay}" />
                            <Image Width="22" Grid.Column="2" Source="/Images/Icons/General/refresh.png" Visibility="Hidden" />

                        </Grid>
                    </Border>

                    <Border Grid.Column="2" Style="{DynamicResource ControlContentBorder}" HorizontalAlignment="Left" Margin="5,0,-10,0" >
                        <Border.Visibility>
                            <MultiBinding Converter="{StaticResource MultiBooleanToVisibilityConverter1}" >
                                <Binding ElementName="rbEditorEditPList" Path="IsChecked" />
                                <Binding ElementName="rbIstTopKlangPlaylist1" Path="IsChecked" />
                            </MultiBinding>
                        </Border.Visibility>
                        <Grid Name="grdEditorRow" VerticalAlignment="Center" Margin="0,2">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="25" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="22" />
                                <ColumnDefinition Width="22"/>
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Image Source="/DSA%20MeisterGeister;component/Images/Icons/kalender.png" Width="25"  />
                            <ToggleButton Name="tbtnPlaylistWartezeit" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Column="1" Width="18" Height="18" ToolTip="Verzögerungszeit vor dem Abspielen der Playliste" 
                                IsChecked="{Binding AktKlangPlaylist.WarteZeitAktiv}" Background="{x:Null}" >
                                <Image Source="/Images/Icons/General/OK.png" VerticalAlignment="Center"
                                       Visibility="{Binding Path=IsChecked, ElementName=tbtnPlaylistWartezeit, Converter={StaticResource BooleanToVisibilityConverter1}}" />
                            </ToggleButton>

                            <StackPanel Grid.Column="2" Visibility="{Binding Path=IsChecked, ElementName=tbtnPlaylistWartezeit, Converter={StaticResource BooleanToVisibilityConverter1}}" >
                                <Grid Margin="0,0,5,0" >
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="18*"/>
                                        <RowDefinition Height="7*"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="92" />
                                        <ColumnDefinition Width="25" />
                                        <ColumnDefinition Width="80" />
                                        <ColumnDefinition Width="80" />
                                    </Grid.ColumnDefinitions>

                                    <Slider Name="sldPlaylistWartezeit" Maximum="900000" IsSnapToTickEnabled="True" TickPlacement="BottomRight" Grid.RowSpan="2" 
                                        Foreground="DarkSlateGray" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch" Padding="1" Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="6,3,4,0" 
                                        Value="{Binding AktKlangPlaylistWarteZeit, UpdateSourceTrigger=PropertyChanged}" 
                                        MouseWheel="sldPlaylistWartezeit_MouseWheel"
                                        Ticks="0, 100, 200, 400, 600, 800, 1000, 1200, 1400, 1600, 1800, 2000, 3000, 4000, 5000, 7500, 8000, 9000, 10000, 15000, 20000, 25000, 30000, 40000, 50000, 60000, 90000, 120000, 180000, 240000, 300000, 450000, 600000, 900000" >
                                        <Slider.ToolTip>
                                            <TextBlock Text="{Binding AktKlangPlaylistWarteZeitTooltip}" />
                                        </Slider.ToolTip>
                                    </Slider>

                                    <CheckBox Name="chkPlaylistWartezeitMove" Grid.Column="1" Tag="0" IsTabStop="False" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,6,1,6" ToolTip="Wartezeit der Playliste automatisch variieren" Grid.RowSpan="2" 
                                        IsChecked="{Binding AktKlangPlaylist.WarteZeitChange}" />

                                    <ViewGeneral:IntBox IncWheel="10" DecWheel="10" ShowButtons="True" Grid.Row="1" Grid.Column="2" HorizontalContentAlignment="Stretch" Margin="2,0,0,0" 
                                        Value="{Binding AktKlangPlaylistWarteZeitMin, UpdateSourceTrigger=PropertyChanged}" IncValue="{Binding PlaylistWarteZeitMinIncValue}" DecValue="{Binding PlaylistWarteZeitMinDecValue}" MinValue="0" MaxValue="900000" 
                                        vmAudioPlayer:FocusExtension.IsFocused="{Binding ShowHotkeyPanel, Mode=TwoWay}" >
                                        <ViewGeneral:IntBox.ToolTip>
                                            <TextBlock Text="{Binding TextPlaylistWarteZeitMin}" />
                                        </ViewGeneral:IntBox.ToolTip>
                                    </ViewGeneral:IntBox>

                                    <ViewGeneral:IntBox IncWheel="10" DecWheel="10" ShowButtons="True" Grid.Row="1" Grid.Column="3" HorizontalContentAlignment="Stretch" Margin="2,0,0,0" 
                                        Value="{Binding AktKlangPlaylistWarteZeitMax}" IncValue="{Binding PlaylistWarteZeitMaxIncValue}" DecValue="{Binding PlaylistWarteZeitMaxDecValue}" MinValue="0" MaxValue="900000" 
                                        vmAudioPlayer:FocusExtension.IsFocused="{Binding ShowHotkeyPanel, Mode=TwoWay}" >
                                        <ViewGeneral:IntBox.ToolTip>
                                            <TextBlock Text="{Binding TextPlaylistWarteZeitMax}" />
                                        </ViewGeneral:IntBox.ToolTip>
                                    </ViewGeneral:IntBox>
                                </Grid>
                            </StackPanel>
                        </Grid>
                    </Border>

                    <Border Name="brgEditorThemeKategorieBackground" Grid.Column="2" HorizontalAlignment="Stretch" Margin="0,0,60,0" Style="{DynamicResource ControlContentBorder}" >
                        <Border.Visibility>
                            <MultiBinding Converter="{StaticResource MultiBooleanToVisibilityConverter1}" >
                                <Binding ElementName="rbEditorEditTheme" Path="IsChecked" />
                                <Binding Path="SelectedEditorThemeItem" Converter="{StaticResource IsNullOrEmptyToBoolConverter1}" />
                            </MultiBinding>
                        </Border.Visibility>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="60" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Label Content="Kategorie" VerticalAlignment="Center" />
                            <Border Name="brdThemeKategorie" Grid.Column="1" Height="25" Margin="10,0" CornerRadius="5" ToolTip="Kategorie" >
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="1,0.5" Opacity="0.6" StartPoint="0,0.5">
                                        <GradientStop Color="Beige" Offset="0" />
                                        <GradientStop Color="#FFFFFFC7" Offset="1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <TextBox Name="tboxThemeKategorie" Cursor="Pen" Padding="2,0" FontSize="12" FontStyle="Italic" TextWrapping="WrapWithOverflow" Background="{x:Null}" HorizontalAlignment="Stretch" VerticalContentAlignment="Center" 
                                        ToolTip="Kategorie des Themes" 
                                        Text="{Binding AktKlangTheme.Kategorie}" 
                                        vmAudioPlayer:FocusExtension.IsFocused="{Binding ShowHotkeyPanel, Mode=TwoWay}" />
                            </Border>
                        </Grid>
                    </Border>


                    <Border Style="{DynamicResource ControlContentBorder}" Margin="3,0,6,-12" HorizontalAlignment="Right" Grid.Column="3" >
                        <StackPanel Orientation="Horizontal"  >
                            <GroupBox Header="Import/Export" Margin="5,-2,2,2" >
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="2,2,2,1">
                                    <Button Padding="0" Name="btnAudioDatenImport" ToolTip="Komplette Audio-Daten importieren (Themes und Playlisten)"  Height="25" Width="25" Margin="5,0,0,0" VerticalAlignment="Top"
                                        Command="{Binding OnBtnImportAll}" >
                                        <Grid Height="25" Width="22">
                                            <Image Source="/Images/Icons/General/import.png" Style="{StaticResource ImageEnabled}" Margin="-2,-2,2,2" />
                                            <Image Source="/Images/Icons/General/import.png" Style="{StaticResource ImageEnabled}" Margin="3,3,-3,-3" />
                                        </Grid>
                                    </Button>
                                    <Button Padding="0" Name="btnAudioDatenExport" ToolTip="Komplette Audio-Daten exportieren (Themes und Playlisten)" Height="25" Width="25" Margin="5,0,0,0" Grid.Column="1" VerticalAlignment="Top"
                                            Command="{Binding OnPlaylistenExportAll}" >
                                        <Grid Height="25" Width="22">
                                            <Image Source="/Images/Icons/General/export.png" Style="{StaticResource ImageEnabled}" Margin="-2,-2,2,2" />
                                            <Image Source="/Images/Icons/General/export.png" Style="{StaticResource ImageEnabled}" Margin="3,3,-3,-3" />
                                        </Grid>
                                    </Button>
                                </StackPanel>
                            </GroupBox>
                            <Button Padding="1" VerticalAlignment="Center" Height="25" ToolTip="Alle Audio-Daten aktualisieren" Margin="5,7,5,0"
                                    Command="{Binding OnBtnUpdateAll}" >
                                <Grid>
                                    <Image Source="/Images/Icons/General/refresh.png" Style="{StaticResource ImageEnabled}" />
                                    <Image Source="/Images/Icons/General/audio.png" Style="{StaticResource ImageEnabled}" Opacity="0.8"  />
                                </Grid>
                            </Button>
                            <Button Padding="1" Name="btnAudioDatenDelete" VerticalAlignment="Center" Height="25" ToolTip="Alle Audio-Daten löschen" Margin="5,7,5,0"
                                    Command="{Binding OnBtnDeleteAll}" >
                                <Image Source="/Images/Icons/General/entf_all.png" Style="{StaticResource ImageEnabled}" />
                            </Button>
                        </StackPanel>
                    </Border>

                    <Grid Name="grdEditorMain" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="3">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="410*" />
                        </Grid.RowDefinitions>
                        <Border Margin="0,10,0,0" Drop="brdEditorTheme_Drop" >

                            <StackPanel Orientation="Vertical" >
                                <StackPanel.Visibility>
                                    <MultiBinding Converter="{StaticResource MultiBooleanToVisibilityConverter1}" >
                                        <Binding ElementName="rbEditorEditTheme" Path="IsChecked" />
                                        <Binding Path="SelectedEditorThemeItem" Converter="{StaticResource IsNullOrEmptyToBoolConverter1}" />
                                    </MultiBinding>
                                </StackPanel.Visibility>
                                <Expander Name="expEditorThemesMusik" IsExpanded="True" ForceCursor="False" HorizontalAlignment="Left" HorizontalContentAlignment="Left" >
                                    <Expander.Header>
                                        <TextBlock Text="Musik Playliste        " Style="{DynamicResource TextTitel}" />
                                    </Expander.Header>
                                    <Border Name="brdEditorThemesMusik" Style="{DynamicResource ControlContentBorder}" VerticalAlignment="Top">
                                        <ScrollViewer Margin="0,0,0,6" VerticalScrollBarVisibility="Auto">
                                            <ItemsControl ItemsSource="{Binding boxThemeThemeHintergrundList}" Margin="5">
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <WrapPanel Name="wpnlEditorThemeMusik" ItemHeight="47" ItemWidth="200" MinHeight="47" MinWidth="200" />
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>
                                            </ItemsControl>
                                        </ScrollViewer>
                                    </Border>
                                </Expander>

                                <Expander Name="expEditorThemesGeräusch" IsExpanded="True" ForceCursor="False" HorizontalAlignment="Left" HorizontalContentAlignment="Left" >
                                    <Expander.Header>
                                        <TextBlock Text="Geräusche Playliste(n)      " Style="{DynamicResource TextTitel}" />
                                    </Expander.Header>
                                    <Border Name="brdEditorThemesGeräusch" Style="{DynamicResource ControlContentBorder}" VerticalAlignment="Top">
                                        <ScrollViewer Margin="0,0,0,6" VerticalScrollBarVisibility="Auto">
                                            <ItemsControl ItemsSource="{Binding boxThemeThemeGeräuscheList}" Margin="5">
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <WrapPanel Name="wpnlEditorThemeGeräusch" ItemHeight="47" ItemWidth="200" MinHeight="47" MinWidth="200" />
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>
                                            </ItemsControl>
                                        </ScrollViewer>
                                    </Border>
                                </Expander>

                                <Expander Name="expEditorTopThemeTheme" IsExpanded="True" ForceCursor="False" HorizontalAlignment="Left" HorizontalContentAlignment="Left" >
                                    <Expander.Header>
                                        <TextBlock Text="Untergeordnete Themes    " Style="{DynamicResource TextTitel}" />
                                    </Expander.Header>
                                    <Border Style="{DynamicResource ControlContentBorder}" VerticalAlignment="Top" ToolTip="Von untergeordeten Themes werden nur die noch nicht ausgewählten Geräusch-Playlisten wiedergegeben" >
                                        <StackPanel Orientation="Horizontal">
                                            <Grid Name="grdEditorThemeWPnlUTheme" Height="45">
                                                <Button Name="btnTopThemeAddTheme" Grid.Column="3" Margin="5" ToolTip="Untergeordnetes Theme hinzufügen" Width="30" HorizontalAlignment="Left" >
                                                    <Grid Width="35" Height="35">
                                                        <Image Source="/DSA%20MeisterGeister;component/Images/Icons/General/copy.png" />
                                                        <Image Source="/DSA%20MeisterGeister;component/Images/Icons/General/add.png" Width="20" Height="20" Margin="-20,-3,0,0" />
                                                    </Grid>
                                                </Button>
                                                <ComboBox Margin="5,0,0,0"
                                                    ItemsSource="{Binding EditorThemeÜbrigThemeListe}"
                                                    ItemTemplate="{StaticResource cmbxItemEditorThemeIcon}" 
                                                    SelectedItem="{Binding lbEditorThemeListboxIconSelected}">
                                                </ComboBox>
                                            </Grid>
                                            <ScrollViewer Margin="0,0,0,6" VerticalScrollBarVisibility="Auto">
                                                <ItemsControl ItemsSource="{Binding boxThemeThemeList}" Margin="5">
                                                    <ItemsControl.ItemsPanel>
                                                        <ItemsPanelTemplate>
                                                            <WrapPanel Name="wpnlEditorTopThemesThemes" ItemHeight="50" ItemWidth="180" AllowDrop="True" />
                                                        </ItemsPanelTemplate>
                                                    </ItemsControl.ItemsPanel>
                                                </ItemsControl>
                                            </ScrollViewer>
                                        </StackPanel>
                                    </Border>
                                </Expander>
                            </StackPanel>
                        </Border>

                        <Border Name="brdEditorListe" Margin="3,8,6,9" Grid.Row="2" Style="{DynamicResource ControlContentBorder}"
                                Visibility="{Binding EditorListeVisible, Converter={StaticResource BooleanToVisibilityConverter1}}">
                            <Grid Name="grdEditorListe" >
                                <Grid Name="grdEditor1" >
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="77" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <Grid Name="grdEditorTop1" >
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="30" />
                                            <RowDefinition Height="23" />
                                            <RowDefinition Height="23" />
                                            <RowDefinition Height="354*" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="1" />
                                            <ColumnDefinition Width="17" />
                                            <ColumnDefinition Width="45"/>
                                            <ColumnDefinition Width="330"/>
                                            <ColumnDefinition Width="55" />
                                            <ColumnDefinition Width="23" />
                                            <ColumnDefinition Width="92" />
                                            <ColumnDefinition Width="56" />
                                            <ColumnDefinition Width="80" />
                                            <ColumnDefinition Width="80" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>

                                        <Border Name="brdTopKlangKategorie1" Height="25" Margin="54,4,0,0" Width="195" Grid.Column="3" CornerRadius="5" HorizontalAlignment="Left" ToolTip="Kategorie" VerticalAlignment="Top">
                                            <Border.Background>
                                                <LinearGradientBrush EndPoint="1,0.5" Opacity="0.6" StartPoint="0,0.5">
                                                    <GradientStop Color="Beige" Offset="0" />
                                                    <GradientStop Color="#FFFFFFC7" Offset="1" />
                                                </LinearGradientBrush>
                                            </Border.Background>
                                            <TextBox Name="tboxTopKlangKategorie1" Padding="2,0" Cursor="Pen" FontSize="12" FontStyle="Italic" TextWrapping="WrapWithOverflow" Background="{x:Null}" ToolTip="Kategorie der Playliste" VerticalContentAlignment="Center" 
                                                Text="{Binding AktKlangPlaylist.Kategorie, UpdateSourceTrigger=PropertyChanged}"
                                                vmAudioPlayer:FocusExtension.IsFocused="{Binding ShowHotkeyPanel, Mode=TwoWay}" />
                                        </Border>

                                        <ToggleButton Name="btnEditShuffle" Grid.Column="3" Margin="0,4,0,2" ClickMode="Press" HorizontalAlignment="Right" IsChecked="{Binding AktKlangPlaylist.Shuffle}" Background="{x:Null}" 
                                                      ToolTip="Shuffle-Mode" Focusable="False" IsTabStop="False" Visibility="{Binding Path=IsChecked, ElementName=rbIstTopMusikPlaylist1, Converter={StaticResource BooleanToVisibilityConverter1}}" >
                                            <Image>
                                                <Image.Style>
                                                    <Style TargetType="Image">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ElementName=btnEditShuffle,Path=IsChecked}" Value="True">
                                                                <Setter Property="Source" Value="pack://application:,,,/DSA MeisterGeister;component/Images/Icons/General/shuffle.png" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding ElementName=btnEditShuffle,Path=IsChecked}" Value="False">
                                                                <Setter Property="Source" Value="pack://application:,,,/DSA MeisterGeister;component/Images/Icons/General/no_shuffle.png" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                        </ToggleButton>

                                        <ToggleButton Name="btnEditRepeat" Grid.Column="4" Margin="3,4,0,2" ClickMode="Press" HorizontalAlignment="Left" IsChecked="{Binding AktKlangPlaylist.Repeat}" 
                                                      Focusable="False" IsTabStop="False" Width="30"
                                                      IsThreeState="True" Background="{x:Null}" Grid.ColumnSpan="2" 
                                                      Visibility="{Binding Path=IsChecked, ElementName=rbIstTopMusikPlaylist1, Converter={StaticResource BooleanToVisibilityConverter1}}" >
                                            <ToggleButton.Style >
                                                <Style TargetType="ToggleButton">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ElementName=btnEditRepeat,Path=IsChecked}" Value="{x:Null}" >
                                                            <Setter Property="ToolTip" Value="Einzelstück wiederholen" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding ElementName=btnEditRepeat,Path=IsChecked}" Value="True">
                                                            <Setter Property="ToolTip" Value="Playliste wiederholen" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding ElementName=btnEditRepeat,Path=IsChecked}" Value="False">
                                                            <Setter Property="ToolTip" Value="Keine Wiederholung" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ToggleButton.Style>
                                            <Image>
                                                <Image.Style>
                                                    <Style TargetType="Image">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ElementName=btnEditRepeat,Path=IsChecked}" Value="{x:Null}" >
                                                                <Setter Property="Source" Value="pack://application:,,,/DSA MeisterGeister;component/Images/Icons/General/repeat1.png" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding ElementName=btnEditRepeat,Path=IsChecked}" Value="True">
                                                                <Setter Property="Source" Value="pack://application:,,,/DSA MeisterGeister;component/Images/Icons/General/repeat.png" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding ElementName=btnEditRepeat,Path=IsChecked}" Value="False">
                                                                <Setter Property="Source" Value="pack://application:,,,/DSA MeisterGeister;component/Images/Icons/General/repeat0.png" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                        </ToggleButton>

                                        <GroupBox Name="gboxTopSongsParallel1" Header="Songs parallel" Grid.Column="3" Grid.RowSpan="2" Height="50" HorizontalAlignment="Right" Margin="0,0,10,0" VerticalAlignment="Top" Width="100" Grid.ColumnSpan="2" Visibility="{Binding Path=IsChecked, ElementName=rbIstTopKlangPlaylist1, Converter={StaticResource BooleanToVisibilityConverter1}}" >
                                            <ViewGeneral:IntBox Height="23" Margin="5,5,0,0" Width="75" ShowButtons="True" VerticalAlignment="Center"
                                                    Value="{Binding AktKlangPlaylist.MaxSongsParallel}" MinValue="0"                                                     
                                                    MaxValue="{Binding AktKlangPlaylist.Audio_Playlist_Titel.Count}" 
                                                    vmAudioPlayer:FocusExtension.IsFocused="{Binding ShowHotkeyPanel, Mode=TwoWay}" />
                                        </GroupBox>

                                        <CheckBox Name="rbEditorFading" IsChecked="{Binding AktKlangPlaylist.Fading}" Grid.Column="3" Grid.Row="2" Margin="0,0,5,0" HorizontalAlignment="Right" Content="Fading" ToolTip="Fading der Playliste" VerticalAlignment="Center" 
                                                  Visibility="{Binding Path=IsChecked, ElementName=rbIstTopKlangPlaylist1, Converter={StaticResource BooleanToVisibilityConverter1}}" />

                                        <GroupBox Visibility="Collapsed" Name="gboxTopMusikSort1" Header="Musik sortieren" Grid.Column="3" Grid.RowSpan="2" Height="50" HorizontalAlignment="Right" Margin="0,0,10,0" VerticalAlignment="Top" Width="100" Grid.ColumnSpan="2">
                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                                <ToggleButton Name="btnTopMusikAbisZ1" Width="25" Height="25" IsTabStop="False" Margin="1" Background="{x:Null}" >
                                                    <Image Source="/Images/Icons/General/sort.png" />
                                                </ToggleButton>
                                                <ToggleButton Name="btnTopMusik1bis91" Width="25" Height="25" IsTabStop="False" Margin="1" Background="{x:Null}" >
                                                    <Image Source="/Images/Icons/General/sort1.png" />
                                                </ToggleButton>
                                            </StackPanel>
                                        </GroupBox>

                                        <StackPanel Name="FavoritenBtnEditor" Orientation="Horizontal" Grid.Column="5" Grid.ColumnSpan="3" Margin="0,3,0,-1"
                                                    Visibility="{Binding AktKlangPlaylist.Hintergrundmusik, Converter={StaticResource BooleanToVisibilityConverter1}}" >
                                            
                                            <ToggleButton Grid.Column="1" Width="74" Background="{x:Null}" HorizontalAlignment="Left" Focusable="False" ToolTip="Zur Favoriten-Leiste hinzugügen" 
                                                IsChecked="{Binding AktKlangPlaylist.Favorite, UpdateSourceTrigger=PropertyChanged}"
                                                Command="{Binding OnFavPlaylistClick}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}" 
                                                Tag ="{Binding AktKlangPlaylist, UpdateSourceTrigger=PropertyChanged}" > 
                                                <ToggleButton.Content>
                                                    <StackPanel Orientation="Horizontal">
                                                        <StackPanel Margin="1,0,-3,0" Width="13" Height="18">
                                                            <Image Source="/Images/Icons/General/zeile.png" Height="10" Margin="-4,0,7,0" Style="{StaticResource ImageEnabled}" Stretch="Fill" >
                                                                <Image.LayoutTransform>
                                                                    <RotateTransform Angle="-90" />
                                                                </Image.LayoutTransform>
                                                            </Image>
                                                            <Image Source="/Images/Icons/General/zeile.png" Height="10" Margin="-4,-1,7,0" Style="{StaticResource ImageEnabled}" Stretch="Fill" >
                                                                <Image.LayoutTransform>
                                                                    <RotateTransform Angle="-90" />
                                                                </Image.LayoutTransform>
                                                            </Image>
                                                        </StackPanel>
                                                        <TextBlock Text="Fav-Leiste" VerticalAlignment="Center" />
                                                    </StackPanel>
                                                </ToggleButton.Content>
                                            </ToggleButton>
                                        </StackPanel>

                                        <StackPanel Name="spnlTopHotkey1" Orientation="Horizontal" Grid.Column="5" Grid.ColumnSpan="4" Margin="0,1,35,1"
                                            Visibility="{Binding AktKlangPlaylist.Hintergrundmusik, Converter={StaticResource BooleanInverseToVisibilityConverter1}, FallbackValue=Hidden}" >

                                            <Label Content="Hotkey" />
                                            <Button Width="30" Margin="0,2" FontStyle="Italic" Name="btnTopHotkeySet1" 
                                                    Visibility="{Binding IsAuswahlHotkey, Converter={StaticResource BooleanInverseToVisibilityConverter1}}"
                                                    Command="{Binding OnHotkeyBtnDefine}"
                                                    Content="{Binding AktKlangPlaylist.Key, TargetNullValue='nicht definiert'}" />
                                            <ComboBox Name="cmboxTopHotkey1" Width="30"
                                                      Visibility="{ Binding IsAuswahlHotkey, Converter={StaticResource BooleanToVisibilityConverter1} }" 
                                                      IsDropDownOpen="{Binding IsAuswahlHotkey}"
                                                                                                          
                                                      DropDownClosed="cmboxTopHotkey_DropDownClosed"                                                       
                                                      ItemsSource="{Binding HotkeysAvailable}" 
                                                      SelectedItem="{Binding AktKlangPlaylist.Key}"/>

                                            <Button Name="btnHotkeyEntfernen1" ToolTip="Hotkey entfernen" Margin="0,5"                                                    
                                                    Command="{Binding OnHotkeyEntfernen}" 
                                                    Visibility="{Binding AktKlangPlaylist.Key, Converter={StaticResource StringNullOrEmptyToVisibilityConverter1}, UpdateSourceTrigger=PropertyChanged}" >
                                                <Image Source="/Images/Icons/General/entf_01.png" Style="{StaticResource ImageEnabled}" />
                                            </Button>


                                            <!--<StackPanel Orientation="Horizontal" Margin="2,0,0,0" 
                                                Visibility="{Binding AktKlangPlaylist.Key, Converter={StaticResource StringNullOrEmptyToVisibilityConverter1}, UpdateSourceTrigger=PropertyChanged}" >
                                                <Grid>
                                                    <Image Source="/Images/Icons/gegner.png" Margin="0,3,5,0" />
                                                    <Image Source="/Images/Icons/helden.png" Margin="5,-2,-5,6" />
                                                </Grid>
                                                <ComboBox Text="leer"
                                                      IsDropDownOpen="{Binding IsAuswahlHotkey}"
                                                                                                          
                                                      DropDownClosed="cmboxTopHotkey_DropDownClosed"                                                       
                                                      ItemsSource="{Binding WesenListe}" 
                                                      SelectedItem="{Binding HotkeyFürWesen}"/>
                                                
                                                <Button ToolTip="Hotkey entfernen" Margin="0,5"                                                    
                                                    Command="{Binding OnHotkeyEntfernen}" 
                                                    Visibility="{Binding AktKlangPlaylist.Key, Converter={StaticResource StringNullOrEmptyToVisibilityConverter1}, UpdateSourceTrigger=PropertyChanged}" >
                                                    <Image Source="/Images/Icons/General/entf_01.png" Style="{StaticResource ImageEnabled}" />
                                                </Button>
                                            </StackPanel>-->
                                        </StackPanel>

                                        <GroupBox Name="gboxTopTyp1" Header="Playlisten-Typ" Grid.Column="1" Grid.ColumnSpan="3" Grid.RowSpan="3" Height="58" HorizontalAlignment="Left" Margin="5,0,0,0" VerticalAlignment="Top" Width="100" >
                                            <StackPanel>
                                                <RadioButton Name="rbIstTopMusikPlaylist1" Content="Musik" GroupName="TypListe" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="80" Grid.Column="4" Padding="4,0,0,0" Margin="1,1,1,0" ToolTip="Auswahl als Musik-Playliste" 
                                                    Command="{Binding OnRbtnPlaylistAlsHintergrundmusik}"
                                                    IsChecked="{Binding AktKlangPlaylist.Hintergrundmusik}" />
                                                <RadioButton Name="rbIstTopKlangPlaylist1" Content="Geräusche" GroupName="TypListe" VerticalAlignment="Top" Grid.Column="4" Width="80" HorizontalAlignment="Left" Margin="1,4,1,1" ToolTip="Auswahl als Geräusche-Playliste" 
                                                    Command="{Binding OnRbtnPlaylistAlsHintergrundmusik}"
                                                    IsChecked="{ Binding AktKlangPlaylist.Hintergrundmusik, Converter={StaticResource InverseBooleanConverter1}, UpdateSourceTrigger=PropertyChanged}" >
                                                </RadioButton>
                                            </StackPanel>
                                        </GroupBox>

                                        <Border Grid.Row="1" Grid.RowSpan="2" Grid.Column="3" Style="{DynamicResource ControlContentBorder}" Margin="55,2,0,0" Width="160" Height="26" Name="brdTopFilter1" ToolTip="Zeilen Filter" HorizontalAlignment="Left" VerticalAlignment="Top">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="26" />
                                                    <ColumnDefinition Width="110" />
                                                    <ColumnDefinition Width="20" />
                                                    <ColumnDefinition Width="2*" />
                                                </Grid.ColumnDefinitions>
                                                <Image Source="/Images/Icons/General/filter.png" Stretch="Fill"/>
                                                <TextBox Margin="2,1" Name="tbEditorTopFilter1" Grid.Column="1" 
                                                    Text="{Binding Path=SuchTextEditorAudioZeilen, UpdateSourceTrigger=PropertyChanged}" 
                                                    vmAudioPlayer:FocusExtension.IsFocused="{Binding ShowHotkeyPanel, Mode=TwoWay}" />
                                                <Button Grid.Column="2" Padding="0"  Name="btnKlangTopFilter1" ToolTip="Filter löschen"
                                                        Command="{Binding OnSuchTextEditorAudioZeilenLöschen}" >
                                                    <Image Source="/Images/Icons/Wuerfel/w6_blank.png" Stretch="Fill" HorizontalAlignment="Left" Width="15" Height="24" />
                                                </Button>
                                            </Grid>
                                        </Border>

                                        <ToggleButton Name="tbtnKlangPause1" Grid.Column="3" Margin="222,2,0,0" Grid.Row="1" Background="{x:Null}"
                                                      Width="30" Height="30" HorizontalAlignment="Left" Grid.RowSpan="2" ToolTip="Playliste abspielen/pausieren" VerticalAlignment="Top" 
                                                      Focusable="False"
                                                      Checked="tbtnKlangPauseX_Checked" 
                                                      Unchecked="tbtnKlangPauseX_Unchecked" >
                                            <Image Width="20" Height="20" Source="/DSA%20MeisterGeister;component/Images/Icons/General/play.png" />
                                        </ToggleButton>
                                        <ToggleButton Grid.Column="2" Grid.Row="2" Height="16" Width="17" Focusable="False" VerticalAlignment="Bottom" Margin="5,0,5,1"
                                                IsChecked="{Binding TitellistAZ}" Background="{x:Null}" >
                                            <Image Margin="-2,-2,-2,-3" >
                                                <Image.Style>
                                                    <Style TargetType="Image">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding TitellistAZ}" Value="True">
                                                                <Setter Property="Source" Value="/Images/Icons/General/sort.png" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding TitellistAZ}" Value="False">
                                                                <Setter Property="Source" Value="/Images/Icons/General/sort1.png" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                            <ToggleButton.Style>
                                                <Style TargetType="ToggleButton">
                                                    <Setter Property="ToolTip" Value="Sortierung: nach Reihenfolge" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding TitellistAZ}" Value="True">
                                                            <Setter Property="ToolTip" Value="Sortierung: Alphabethisch" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ToggleButton.Style>
                                            <!--<Image Source="/Images/Icons/General/sort.png" Margin="-1,-1,-1,-2" Style="{StaticResource ImageEnabled}" />-->
                                        </ToggleButton>
                                        <CheckBox Name="chkbxTopAktiv1" Grid.Column="3" Grid.Row="2" Height="16" HorizontalAlignment="Left" 
                                                  VerticalAlignment="Bottom" ToolTip="Alle Titel an-/abwählen" Tag="0" IsTabStop="False" Content="Alle Titel an/aus" 
                                                  Command="{Binding OncbAllTitelChecked}" IsChecked="{Binding AllTitelAktiv, UpdateSourceTrigger=PropertyChanged}" />

                                        <Label Name="lblTopDauer1" Content="Dauer" Grid.Column="4" Margin="10,3,0,4" Padding="0" VerticalAlignment="Center" Grid.Row="2" />

                                        <StackPanel Name="spnlTopGeräuschIcon1" Grid.Column="5" Grid.ColumnSpan="5" Grid.Row="1" Grid.RowSpan="2" VerticalAlignment="Bottom" 
                                                Visibility="{Binding Path=IsChecked, ElementName=rbIstTopKlangPlaylist1, Converter={StaticResource BooleanToVisibilityConverter1}}" >
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="23" />
                                                    <RowDefinition Height="23" />
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="23" />
                                                    <ColumnDefinition Width="92" />
                                                    <ColumnDefinition Width="56" />
                                                    <ColumnDefinition Width="80" />
                                                    <ColumnDefinition Width="80" />
                                                </Grid.ColumnDefinitions>

                                                <Label Content="min" Grid.Column="3" HorizontalAlignment="Center" Margin="25,0" />
                                                <Label Content="max" Grid.Column="4" HorizontalAlignment="Center" Margin="24,0" />
                                                <Label Content="min" Grid.Column="3" Grid.Row="1"  HorizontalAlignment="Center" />
                                                <Label Content="max" Grid.Column="4" Grid.Row="1"  HorizontalAlignment="Center" />

                                                <Image Source="/DSA%20MeisterGeister;component/Images/Icons/kalender.png" Grid.Row="1" ToolTip="Pausenzeit aller aktiven Songs" />
                                                <Image Source="/DSA%20MeisterGeister;component/Images/Icons/audio2.png" ToolTip="Lautstärke aller aktiven Songs" />

                                                <Button Padding="0" Content="&lt;&lt;" Grid.Column="1" Height="21" Margin="0,-1,0,3" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="21" ToolTip="Lautstärke aller gefilterten Geräusche auf 0% setzen" IsTabStop="False" 
                                                        Command="{Binding OnAllVol0, UpdateSourceTrigger=PropertyChanged}" />
                                                <Button Padding="0" Content="&lt;" Grid.Column="1" Height="21" HorizontalAlignment="Left" Margin="23,0,0,1" VerticalAlignment="Bottom" Width="21" ToolTip="Lautstärke aller gefilterten Geräusche um 10% verringern" IsTabStop="False" 
                                                        Command="{Binding OnAllVolDown, UpdateSourceTrigger=PropertyChanged}" />
                                                <Button Padding="0" Content="&gt;" Grid.Column="1"  Height="21" HorizontalAlignment="Right" Margin="0,0,22,1" VerticalAlignment="Bottom" Width="21" ToolTip="Lautstärke aller gefilterten Geräusche um 10% erhöhen" IsTabStop="False"  
                                                        Command="{Binding OnAllVolUp, UpdateSourceTrigger=PropertyChanged}" />
                                                <Button Padding="0" Content="&gt;&gt;" Grid.Column="1" Height="21" Margin="0,0,0,1" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="21" ToolTip="Lautstärke aller gefilterten Geräusche auf 100% setzen" IsTabStop="False" 
                                                        Command="{Binding OnAllVol100, UpdateSourceTrigger=PropertyChanged}" />

                                                <CheckBox Grid.Column="2" ToolTip="Lautstärke aller aktiven Klänge automatisch variieren" IsTabStop="False" HorizontalAlignment="Right" VerticalAlignment="Center" Content="Auto" FlowDirection="RightToLeft" Height="Auto" Margin="0,4" 
                                                        IsChecked="{Binding IsVolumeChangeChecked, UpdateSourceTrigger=PropertyChanged}"
                                                        Command="{Binding OnAllVolumeChange}" />

                                                <Button Padding="0" Height="21" Margin="7,0,0,1" VerticalAlignment="Bottom" Grid.Column="3" HorizontalAlignment="Left" Width="21" ToolTip="Minimale Lautstärke aller gefilterten variierbaren Geräusche verringern" IsTabStop="False" 
                                                        Command="{Binding OnAllVolMinDown, UpdateSourceTrigger=PropertyChanged}" >
                                                    <Image Source="/Images/Icons/General/entf_02.png" />
                                                </Button>
                                                <Button Padding="0" Height="20" HorizontalAlignment="Right" Margin="0,0,7,1" VerticalAlignment="Bottom" Width="20" Grid.Column="3" ToolTip="Minimale Lautstärke aller gefilterten variierbaren Geräusche erhöhen" IsTabStop="False" 
                                                        Command="{Binding OnAllVolMinUp, UpdateSourceTrigger=PropertyChanged}" >
                                                    <Image Source="/Images/Icons/General/add.png" />
                                                </Button>
                                                <Button Padding="0" Grid.Column="4" Height="20" Margin="7,0,0,1" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="20" ToolTip="Maximale Lautstärke aller gefilterten variierbaren Geräusche verringern" IsTabStop="False"
                                                        Command="{Binding OnAllVolMaxDown, UpdateSourceTrigger=PropertyChanged}" >
                                                    <Image Source="/Images/Icons/General/entf_02.png" />
                                                </Button>
                                                <Button Padding="0" Grid.Column="4" Height="20" HorizontalAlignment="Right" Margin="0,0,7,1" VerticalAlignment="Bottom" Width="20" ToolTip="Maximale Lautstärke aller gefilterten variierbaren Geräusche erhöhen" IsTabStop="False"
                                                        Command="{Binding OnAllVolMaxUp, UpdateSourceTrigger=PropertyChanged}" >
                                                    <Image Source="/Images/Icons/General/add.png" />
                                                </Button>

                                                <Border VerticalAlignment="Bottom" Grid.ColumnSpan="7" BorderBrush="Gray" Margin="-5,-1,-5,-1" Height="1" BorderThickness="1" Name="brdTrennstrich1" />

                                                <Button Padding="0" Content="&lt;&lt;" Grid.Column="1" Grid.Row="1" Height="21" Margin="0,0,0,1" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="21" ToolTip="Pausenzeit aller gefilterten Geräusche auf Minimum setzen" IsTabStop="False" 
                                                        Command="{Binding OnAllPause0, UpdateSourceTrigger=PropertyChanged}" />
                                                <Button Padding="0" Content="&lt;" Grid.Column="1" Grid.Row="1" Height="21" HorizontalAlignment="Left" Margin="23,0,0,1" VerticalAlignment="Bottom" Width="21" ToolTip="Pausenzeit aller gefilterten Geräusche verringern" IsTabStop="False" 
                                                        Command="{Binding OnAllPauseDown, UpdateSourceTrigger=PropertyChanged}" />
                                                <Button Padding="0" Content="&gt;&gt;" Grid.Column="1" Grid.Row="1" Height="21" Margin="0,0,0,1" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="21" ToolTip="Pausenzeit aller gefilterten Geräusche auf Maximum setzen" IsTabStop="False" 
                                                        Command="{Binding OnAllPause100, UpdateSourceTrigger=PropertyChanged}" />
                                                <Button Padding="0" Content="&gt;" Grid.Column="1" Grid.Row="1" Height="21" HorizontalAlignment="Right" Margin="0,0,22,1" VerticalAlignment="Bottom" Width="22" ToolTip="Pausenzeit aller gefilterten Geräusche erhöhen" IsTabStop="False" 
                                                        Command="{Binding OnAllPauseUp, UpdateSourceTrigger=PropertyChanged}" />

                                                <CheckBox VerticalAlignment="Center" Grid.Column="2" Grid.Row="1" HorizontalAlignment="Right" ToolTip="Pausenzeit aller aktiven Klänge automatisch variieren" IsTabStop="False" Content="Auto" FlowDirection="RightToLeft" 
                                                          IsChecked="{Binding IsPausenZeitChangeChecked, UpdateSourceTrigger=PropertyChanged}"
                                                          Command="{Binding OnAllPausenZeitChange}"/>

                                                <Button Padding="0" Height="20" Margin="7,0,0,1" VerticalAlignment="Bottom" Grid.Column="3" Grid.Row="1" HorizontalAlignment="left" Width="20" ToolTip="Minimale Pausenzeit aller variierbaren gefilterten Geräusche um eine Stelle verringern" IsTabStop="False" 
                                                        Command="{Binding OnPausenZeitMinMinus, UpdateSourceTrigger=PropertyChanged}" >
                                                    <Image Source="/Images/Icons/General/entf_02.png" />
                                                </Button>
                                                <Button Padding="0" Height="20" HorizontalAlignment="Right" Margin="0,0,7,1" VerticalAlignment="Bottom" Width="20" Grid.Column="3" Grid.Row="1" ToolTip="Minimale Pausenzeit aller variierbaren gefilterten Geräusche um eine Stelle erhöhen" IsTabStop="False" 
                                                        Command="{Binding OnPausenZeitMinPlus, UpdateSourceTrigger=PropertyChanged}" >
                                                    <Image Source="/Images/Icons/General/add.png" />
                                                </Button>
                                                <Button Padding="0" Grid.Column="4" Grid.Row="1" Height="20" Margin="7,0,0,1" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="20" ToolTip="Maximale Pausenzeit aller variierbaren gefilterten Geräusche eine Stelle verringern" IsTabStop="False" 
                                                        Command="{Binding OnPausenZeitMaxMinus, UpdateSourceTrigger=PropertyChanged}" >
                                                    <Image Source="/Images/Icons/General/entf_02.png" />
                                                </Button>
                                                <Button Padding="0" Grid.Column="4" Grid.Row="1" Height="20" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="20" Margin="0,0,7,1" ToolTip="Maximale Pausenzeit aller variierbaren gefilterten Geräusche eine Stelle erhöhen" IsTabStop="False" 
                                                        Command="{Binding OnPausenZeitMaxPlus, UpdateSourceTrigger=PropertyChanged}" >
                                                    <Image Source="/Images/Icons/General/add.png" />
                                                </Button>
                                            </Grid>
                                        </StackPanel>

                                        <ToggleButton Width="30" Height="30" Grid.Column="8" HorizontalAlignment="Right" Focusable="False" ClickMode="Press" 
                                                IsChecked="{Binding EditorGroßeAnsicht, Converter={StaticResource InverseBooleanConverter1}}" Background="{x:Null}" >
                                            <StackPanel>
                                                <Image Source="/Images/Icons/General/zeile.png" Height="20" Width="24" Stretch="Fill" Margin="-2,2,0,3" 
                                                       Visibility="{Binding EditorGroßeAnsicht, Converter={StaticResource BooleanToVisibilityConverter1}}"/>
                                                <Image Source="/Images/Icons/General/zeile.png" Height="10" Width="24" Stretch="Fill" Margin="-2,0,0,-1" />
                                                <Image Source="/Images/Icons/General/zeile.png" Height="10" Width="24" Stretch="Fill" Margin="-2,0,0,-1" />
                                            </StackPanel>
                                        </ToggleButton>

                                        <Button Padding="1" Height="30" HorizontalAlignment="Right" Name="btnTopKlangOpen1"  Width="30" 
                                                ToolTip="Hinzufügen von Musikdateien in die ausgewählte Liste" Grid.Column="9" 
                                                VerticalAlignment="Center" Margin="0,0,5,0" TabIndex="1" 
                                                Command="{Binding OnTopKlangOpen}" >
                                            <Image Source="/DSA%20MeisterGeister;component/Images/Icons/General/audioadd.png" />
                                        </Button>

                                        <Button Name="btnKlangUpdateFiles1" Width="30" Height="30" Grid.Column="9" HorizontalAlignment="Left" 
                                                ToolTipService.ShowDuration="10000" 
                                                ToolTip="{Binding ChkAnzDateienResult, FallbackValue='Update der Titel im Verzeichnis'}"
                                                Command="{Binding OnbtnKlangUpdateFiles}" >
                                            <Button.Style>
                                                <Style TargetType="Button">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ChkAnzDateienResult}" Value="{x:Null}">
                                                            <Setter Property="Visibility" Value="Hidden" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding ChkAnzDateienVerfügbar}" Value="True">
                                                            <Setter Property="IsEnabled" Value="True" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding ChkAnzDateienVerfügbar}" Value="False">
                                                            <Setter Property="IsEnabled" Value="False" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                            <Grid>
                                                <Image Source="/DSA%20MeisterGeister;component/Images/Icons/General/oeffnen.png" Width="35" Height="35" Margin="0,-3,0,0" />
                                                <Image Source="/DSA%20MeisterGeister;component/Images/Icons/General/refresh.png" Width="20" />
                                            </Grid>
                                        </Button>
                                        <Border Grid.Row="3" VerticalAlignment="Bottom" Grid.ColumnSpan="11" BorderBrush="DarkSlateGray" Margin="0,0,0,337" Height="1" BorderThickness="1" />
                                    </Grid>

                                    <ListBox Background="Transparent" Name="lbEditorListe" Grid.Row="1" AllowDrop="True"  Drop="lbEditor_Drop" 
                                            ToolTip="Musikdateien über Drag&amp;Drop einfügen &#10;MusikZeilen mit gedrückter Strg-Taste kopieren" 
                                            ItemsSource="{Binding FilteredLbEditorAudioZeilenListe}"
                                            SelectedItem="{Binding LbEditorAudioZeilenSelected}"
                                            SelectionChanged="lb_SelectionChanged">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <Border Margin="2,-1">
                                                    <Grid>
                                                        <local:AudioZeile Tag="{Binding}" 
                                                            MouseMove="AudioZeile_MouseMove"
                                                            GiveFeedback="AudioZeile_GiveFeedback"
                                                            PreviewMouseLeftButtonDown="AudioZeile_PreviewMouseLeftButtonDown" />
                                                    </Grid>
                                                </Border>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                </Grid>
            </TabItem>

            <TabItem Header="Musik - Player" Name="tiMusik" >
                <Grid Background="{StaticResource Background1}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="60" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Border Height="55" Name="border1" VerticalAlignment="Top" Style="{DynamicResource ControlContentBorder}">
                        <Grid>
                            <Grid.Style>
                                <Style TargetType="Grid">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding BGPlayerAktPlaylist}" Value="{x:Null}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <Border BorderBrush="Silver" BorderThickness="1" Height="45" Name="border3" Width="402" CornerRadius="20" />

                            <ToggleButton Name="btnBGShuffle" Height="24" Margin="-320,0,0,0" Width="24" ClickMode="Press" Background="{x:Null}" 
                                          IsChecked="{Binding BGPlayerAktPlaylist.Shuffle}" ToolTip="Shuffle-Mode" Focusable="False" IsTabStop="False" >
                                <Image>
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=btnBGShuffle,Path=IsChecked}" Value="True">
                                                    <Setter Property="Source" Value="pack://application:,,,/DSA MeisterGeister;component/Images/Icons/General/shuffle.png" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ElementName=btnBGShuffle,Path=IsChecked}" Value="False">
                                                    <Setter Property="Source" Value="pack://application:,,,/DSA MeisterGeister;component/Images/Icons/General/no_shuffle.png" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </ToggleButton>


                            <ToggleButton Name="btnBGRepeat" Height="24" Margin="-260,0,0,0" Width="30" ClickMode="Press" Background="{x:Null}" 
                                IsChecked="{Binding BGPlayerAktPlaylist.Repeat}" Focusable="False" IsTabStop="False" IsThreeState="True" >
                                <ToggleButton.Style>
                                    <Style TargetType="ToggleButton">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=btnBGRepeat,Path=IsChecked}" Value="{x:Null}" >
                                                <Setter Property="ToolTip" Value="Einzelstück wiederholen" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ElementName=btnBGRepeat,Path=IsChecked}" Value="True">
                                                <Setter Property="ToolTip" Value="Playliste wiederholen" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ElementName=btnBGRepeat,Path=IsChecked}" Value="False">
                                                <Setter Property="ToolTip" Value="Keine Wiederholung" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ToggleButton.Style>
                                <Image>
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=btnBGRepeat,Path=IsChecked}" Value="{x:Null}" >
                                                    <Setter Property="Source" Value="pack://application:,,,/DSA MeisterGeister;component/Images/Icons/General/repeat1.png" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ElementName=btnBGRepeat,Path=IsChecked}" Value="True">
                                                    <Setter Property="Source" Value="pack://application:,,,/DSA MeisterGeister;component/Images/Icons/General/repeat.png" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ElementName=btnBGRepeat,Path=IsChecked}" Value="False">
                                                    <Setter Property="Source" Value="pack://application:,,,/DSA MeisterGeister;component/Images/Icons/General/repeat0.png" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </ToggleButton>

                            <Border Width="2" Height="26" Margin="-205,0,0,0" />
                            <Button Width="30" Height="30" Name="btnBGStoppen" Margin="-150,0,0,0" Style="{StaticResource GlasButton}" Background="Black" ToolTip="Stopp"                                     
                                    Command="{Binding OnbtnBGStoppen}" >
                                <Button.IsEnabled>
                                    <MultiBinding Converter="{StaticResource MultiBooleanAndConverter1}" >
                                        <Binding Path="BGPlayerAktPlaylistTitel" Converter="{StaticResource IsNullOrEmptyToBoolConverter1}" />
                                        <Binding Path="HintergrundMusikListe.Count" Converter="{StaticResource IsEqualOrGreaterThanConverter1}" ConverterParameter="1" />
                                    </MultiBinding>
                                </Button.IsEnabled>
                                <Image Name="imgbtnBGStoppen" Source="/DSA%20MeisterGeister;component/Images/Icons/General/stop.png" Style="{StaticResource ImageEnabled}" Margin="5,6,4,4" />
                            </Button>

                            <Button Name="btnBGPrev" Width="30" Height="30" Background="Black" Margin="-80,0,0,0" Style="{StaticResource GlasButton}" ToolTip="Zurück" 
                                    Command="{Binding OnbtnBGPrev}"
                                    IsEnabled="{Binding BGPlayerGespieltCount, Converter={StaticResource IsEqualOrGreaterThanConverter1}, ConverterParameter='1'}" >
                                <Image Name="imgbtnBGPrev" Margin="2,4,2,2" Source="/DSA%20MeisterGeister;component/Images/Icons/General/play_prev.png" Style="{StaticResource ImageEnabled}" />
                            </Button>

                            <Button Name="btnBGAbspielen" ClickMode="Press" Tag="0" Grid.Column="2" Width="40" Height="40" 
                                    Style="{StaticResource GlasButton}" Background="Black"  ToolTip="Abspielen/Pause" 
                                    Command="{Binding OnbtnBGApspielen}"                                    
                                    IsEnabled="{Binding HintergrundMusikListe.Count, Converter={StaticResource IsEqualOrGreaterThanConverter1}, ConverterParameter='1'}" >
                                <Image Name="imgbtnBGAbspielen" Margin="5"  Width="30" Height="30">
                                    <Image.Style>
                                        <Style TargetType="Image" BasedOn="{StaticResource ImageEnabled}"  >
                                            <Style.Setters>
                                                <Setter Property="Source" Value="/DSA%20MeisterGeister;component/Images/Icons/General/play.png" />
                                            </Style.Setters>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding BGmPlayerIsPaused, UpdateSourceTrigger=PropertyChanged}" Value="False" >
                                                    <Setter Property="Source" Value="pack://application:,,,/DSA MeisterGeister;component/Images/Icons/General/pause.png" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </Button>

                            <Button Name="btnBGNext" Grid.Column="2" Width="30" Height="30" Background="Black"  Margin="80,0,0,0" ToolTip="Vor"  Style="{StaticResource GlasButton}" 
                                    Command="{Binding OnbtnBGNext}"                                    
                                    IsEnabled="{Binding HintergrundMusikListe.Count, Converter={StaticResource IsEqualOrGreaterThanConverter1}, ConverterParameter='1'}" >
                                <Image Name="imgbtnBGNext" Margin="2,4,2,2" Source="/DSA%20MeisterGeister;component/Images/Icons/General/play_next.png" Style="{StaticResource ImageEnabled}" />
                            </Button>

                            <Button Width="26" Height="26" Name="btnBGSpeaker" Command="{Binding OnBGSpeakerMuting}" Margin="170,0,0,0" Tag="-1" ToolTip="Ton aus/an" >
                                <Image Width="20" Height="20">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Style.Setters>
                                                <Setter Property="Source" Value="pack://application:,,,/DSA MeisterGeister;component/Images/Icons/General/speaker.png" />
                                            </Style.Setters>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding BGPlayerIsMuted}" Value="True">
                                                    <Setter Property="Source" Value="pack://application:,,,/DSA MeisterGeister;component/Images/Icons/General/speaker-mute.png" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </Button>

                            <Slider Height="22" Margin="290,0,00,0" Maximum="100" Name="slBGVolume" UseLayoutRounding="True" Width="80" SmallChange="1" LargeChange="10" 
                                    Value="{Binding BGPlayerVolume}" MouseWheel="slVolume_MouseWheel" >
                                <Slider.ToolTip>
                                    <TextBlock Text="{Binding BGPlayerVolume, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0}% }" />
                                </Slider.ToolTip>
                            </Slider>
                        </Grid>
                    </Border>

                    <Grid Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{StaticResource Background1}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="226" />
                            <ColumnDefinition Width="433*" MinWidth="235" />
                            <ColumnDefinition Width="320" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="26" />
                            <RowDefinition Height="388*" />
                        </Grid.RowDefinitions>
                        <Border  Margin="2,1,8,0" HorizontalAlignment="Stretch" Style="{DynamicResource ControlContentBorder}" VerticalAlignment="Stretch" ToolTip="Musik Filter">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="24" />
                                    <ColumnDefinition Width="24" />
                                    <ColumnDefinition Width="26" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="20" />
                                </Grid.ColumnDefinitions>
                                <ToggleButton ToolTip="Playlistensortierung" Height="23" Width="22" Focusable="False" Background="{x:Null}" 
                                    IsChecked="{Binding MusikAZ}">
                                    <Image Margin="-1" >
                                        <Image.Style>
                                            <Style TargetType="Image">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding MusikAZ}" Value="True">
                                                        <Setter Property="Source" Value="/Images/Icons/General/sort.png" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding MusikAZ}" Value="False">
                                                        <Setter Property="Source" Value="/Images/Icons/General/sort1.png" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                    <ToggleButton.Style>
                                        <Style TargetType="ToggleButton">
                                            <Setter Property="ToolTip" Value="Sortierung: nach Reihenfolge" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding MusikAZ}" Value="True">
                                                    <Setter Property="ToolTip" Value="Sortierung: Alphabethisch" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                <ToggleButton ToolTip="Playlisten nacheinander abspielen" Height="23" Width="22" Focusable="False" Grid.Column="1" Background="{x:Null}" 
                                    IsChecked="{Binding MusikNacheinander}">
                                    <Grid>
                                        <Image Source="/Images/Icons/General/zeile.png" Margin="-4,0,0,0" Style="{StaticResource ImageEnabled}" />
                                        <Image Source="/Images/Icons/General/refresh.png" Margin="4,0,-4,0" Style="{StaticResource ImageEnabled}"
                                               Visibility="{Binding MusikNacheinander, Converter={StaticResource BooleanToVisibilityConverter1}}"/>
                                    </Grid>
                                </ToggleButton>
                                <Image Source="/Images/Icons/General/filter.png" Stretch="Fill" Grid.Column="2" />
                                <TextBox Margin="2,1" Grid.Column="3" 
                                        Text="{Binding Path=SuchTextMusik, UpdateSourceTrigger=PropertyChanged}"
                                        vmAudioPlayer:FocusExtension.IsFocused="{Binding ShowHotkeyPanel, Mode=TwoWay}"  />
                                <Button Padding="0" Grid.Column="4" ToolTip="Filter löschen"
                                        Command="{Binding OnSuchTextMusikLöschen}" >
                                    <Image Source="/Images/Icons/Wuerfel/w6_blank.png" Stretch="Fill" HorizontalAlignment="Stretch" Width="15" Height="25" />
                                </Button>
                            </Grid>
                        </Border>
                        <Border Grid.Row="1" HorizontalAlignment="Stretch" Margin="2,0,0,10" Style="{DynamicResource ControlContentBorder}" Grid.RowSpan="2">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="1,0.5" Opacity="0.3" StartPoint="0,0.5">
                                    <GradientStop Color="WhiteSmoke" Offset="0" />
                                    <GradientStop Color="#FFFFFFC7" Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <ListBox Padding="4" Name="lbMusik"  Background="Transparent" FontSize="14" VerticalAlignment="Stretch" 
                                ForceCursor="False" Tag="-1" VerticalContentAlignment="Stretch" Margin="0,0,7,0" SelectionMode="Single"
                                ItemsSource="{Binding FilteredMusikPlaylistItemListe, UpdateSourceTrigger=PropertyChanged}" 
                                SelectedItem="{Binding SelectedMusikPlaylistItem, UpdateSourceTrigger=PropertyChanged}" 
                                ItemContainerStyle="{DynamicResource ListBoxItemStretch}" >
                            </ListBox>
                        </Border>

                        <GridSplitter Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Stretch" Width="5" />

                        <Border Grid.Column="1"  Margin="10,0,30,0" HorizontalAlignment="Stretch" Style="{DynamicResource ControlContentBorder}" VerticalAlignment="Stretch" ToolTip="Musiktitel Filter">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="34" />
                                    <ColumnDefinition Width="74" />
                                    <ColumnDefinition Width="126*"/>
                                    <ColumnDefinition Width="26" />
                                    <ColumnDefinition Width="106*" MaxWidth="200" MinWidth="30" />
                                    <ColumnDefinition Width="20" />
                                </Grid.ColumnDefinitions>
                                <ToggleButton Name="tbtnMusikTitelAZ" Height="23" Width="22" Focusable="False" HorizontalAlignment="Left" Margin="5,0,0,0" Background="{x:Null}" 
                                    IsChecked="{Binding MusikTitelAZ}" >
                                    <Image Margin="-1" >
                                        <Image.Style>
                                            <Style TargetType="Image">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding MusikTitelAZ}" Value="True">
                                                        <Setter Property="Source" Value="/Images/Icons/General/sort.png" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding MusikTitelAZ}" Value="False">
                                                        <Setter Property="Source" Value="/Images/Icons/General/sort1.png" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                    <ToggleButton.Style>
                                        <Style TargetType="ToggleButton">
                                            <Setter Property="ToolTip" Value="Sortierung: nach Reihenfolge" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding MusikTitelAZ}" Value="True">
                                                    <Setter Property="ToolTip" Value="Sortierung: Alphabethisch" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>

                                <ToggleButton Grid.Column="1" Width="74" Background="{x:Null}" HorizontalAlignment="Left" Focusable="False" ToolTip="Zur Favoriten-Leiste hinzugügen"
                                    Tag="{Binding BGPlayerAktPlaylist, UpdateSourceTrigger=PropertyChanged}"
                                    IsChecked="{Binding BGPlayerAktPlaylist.Favorite, UpdateSourceTrigger=PropertyChanged}"
                                    Command="{Binding OnFavPlaylistClick}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}" > 
                                    <ToggleButton.Content>
                                        <StackPanel Orientation="Horizontal">
                                            <StackPanel Margin="1,0,-3,0" Width="13" Height="18" >
                                                <Image Source="/Images/Icons/General/zeile.png" Height="10" Margin="-4,0,7,0" Style="{StaticResource ImageEnabled}" Stretch="Fill" >
                                                <Image.LayoutTransform>
                                                    <RotateTransform Angle="-90" />
                                                </Image.LayoutTransform>
                                            </Image>
                                                <Image Source="/Images/Icons/General/zeile.png" Height="10" Margin="-4,-1,7,0" Style="{StaticResource ImageEnabled}" Stretch="Fill" >
                                                <Image.LayoutTransform>
                                                    <RotateTransform Angle="-90" />
                                                </Image.LayoutTransform>
                                            </Image>
                                            </StackPanel>
                                            <TextBlock Text="Fav-Leiste" VerticalAlignment="Center" />
                                        </StackPanel>
                                    </ToggleButton.Content>
                                </ToggleButton>

                                <Label Grid.Column="2" Content="{Binding wiederholungenLeft, UpdateSourceTrigger=PropertyChanged, FallbackValue={x:Null}}"  ContentStringFormat="Wiederholungen: {0}" Padding="3"
                                       Visibility="{Binding wiederholungenLeft, Converter={StaticResource IsEqualOrGreaterThanVisibleConverter1}, ConverterParameter=2 }" />

                                <Image Source="/Images/Icons/General/filter.png" Stretch="Fill" Grid.Column="3" />
                                <TextBox Margin="2,1" Name="tbBGTitelFilter" Grid.Column="4" 
                                        Text="{Binding Path=SuchTextMusikTitel, UpdateSourceTrigger=PropertyChanged}"
                                        vmAudioPlayer:FocusExtension.IsFocused="{Binding ShowHotkeyPanel, Mode=TwoWay}"  />
                                <Button Grid.Column="5" ToolTip="Filter löschen" Padding="0"
                                        Command="{Binding OnSuchTextMusikTitelLöschen}" >
                                    <Image Source="/Images/Icons/Wuerfel/w6_blank.png" Stretch="Fill" HorizontalAlignment="Stretch" Width="15" Height="25" />
                                </Button>
                            </Grid>
                        </Border>

                        <Expander Margin="8,0,30,10" Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" IsExpanded="True" MinWidth="200" ForceCursor="False">
                            <Expander.Header>
                                <TextBlock Text="Titel" Style="{DynamicResource TextTitel}" />
                            </Expander.Header>
                            <Border Style="{DynamicResource ControlContentBorder}">
                                <ListBox Name="lbMusikTitelList"
                                         Background="Transparent" VerticalAlignment="Stretch" 
                                         ItemsSource="{Binding FilteredHintergrundMusikListe}" 
                                         SelectedItem="{Binding SelectedMusikTitelItem, UpdateSourceTrigger=PropertyChanged}" 
                                         ToolTip="Anklicken um den Titel abzuspielen" Focusable="True"
                                         SelectionChanged="MusikTitelList_SelectionChanged">

                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <ListBoxItem Tag="{Binding}" />
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </Border>
                        </Expander>

                        <GridSplitter Grid.Column="2" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Center" Width="5" Height="240" Margin="0,46,2,72" />
                        <Border Grid.Column="2" Height="100" Width="200" Margin="10" />
                        <Border Grid.Column="2" Grid.Row="1" Height="270" Width="310" Style="{DynamicResource ControlContentBorder}" VerticalAlignment="Top" Margin="6,50,0,0" HorizontalAlignment="Left">
                            <Grid Visibility="{Binding BGPlayerAktPlaylistTitel, UpdateSourceTrigger=PropertyChanged, TargetNullValue=Collapsed}" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="60*" MinWidth="60"/>
                                    <ColumnDefinition Width="56*" />
                                    <ColumnDefinition Width="152*" />
                                    <ColumnDefinition Width="50" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition Height="25*" />
                                    <RowDefinition Height="25*"/>
                                    <RowDefinition Height="25*" />
                                    <RowDefinition Height="25*" />
                                    <RowDefinition Height="26*" />
                                    <RowDefinition Height="25*" />
                                    <RowDefinition Height="30" />
                                    <RowDefinition Height="30" />
                                    <RowDefinition Height="50" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <Border Grid.ColumnSpan="3" Grid.Row="1" Style="{DynamicResource ControlContentBorder}" Margin="1" >
                                    <Label FontSize="14" Padding="0" HorizontalAlignment="Center" 
                                           Content="{Binding BGPlayerAktPlaylist.Name, UpdateSourceTrigger=PropertyChanged}"/>
                                </Border>
                                <Label Grid.Column="4" Grid.Row="1" FontSize="10" Padding="0" HorizontalAlignment="Center"
                                       Visibility="{Binding BGPlayerAktPlaylistTitel.Wiederholungen, Converter={StaticResource IsEqualOrGreaterThanVisibleConverter1}, ConverterParameter=2}" >
                                    <Label.Content>
                                        <TextBlock TextWrapping="Wrap">
                                            <TextBlock.Text>
                                                <MultiBinding StringFormat="Wdh. ({0}x/{1}x)">
                                                    <Binding Path="wiederholungenLeft" />
                                                    <Binding Path="BGPlayerAktPlaylistTitel.Wiederholungen" />
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                    </Label.Content>
                                </Label>
                                <Label Content="{Binding Path=Info_BGTitel}" Grid.Row="2" Grid.Column="2" Grid.ColumnSpan="2" FontWeight="Bold" />
                                <Label Content="{Binding Path=Info_BGArtist}" Grid.Row="3" Grid.Column="2" Grid.ColumnSpan="2" />
                                <Label Content="{Binding Path=Info_BGAlbum}" Grid.Row="4" Grid.Column="2" Grid.ColumnSpan="2" />
                                <Label Content="{Binding Path=Info_BGJahr}" Grid.Row="5" Grid.Column="2" Grid.ColumnSpan="2" />
                                <Label Content="{Binding Path=Info_BGGenre}" Grid.Row="6" Grid.Column="2" Grid.ColumnSpan="2" />

                                <Label Grid.Row="2" Content="Titel:" Margin="3,0,0,0" Padding="5,5,0,0" />
                                <Label Grid.Row="3" Content="Interpret:" Margin="3,0,0,0" Grid.ColumnSpan="2" />
                                <Label Grid.Row="4" Content="Album:" Margin="3,0,0,0" Grid.ColumnSpan="2" />
                                <Label Grid.Row="5" Content="Jahr:" Margin="3,0,0,0" Grid.ColumnSpan="2" />
                                <Label Grid.Row="6" Content="Genre:" Margin="3,0,0,0" Grid.ColumnSpan="2" />

                                <Label Grid.Row="7" VerticalAlignment="Top" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right"
                                       Content="{Binding BGPosition, Converter={StaticResource DoubleToTimespanHHMMSSConverter1}}"  />
                                <Label Grid.Row="7" VerticalAlignment="Top" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" Grid.Column="3" 
                                       Content="{Binding BGPlayerAktPlaylistTitelLänge, Converter={StaticResource DoubleToTimespanHHMMSSConverter1}, StringFormat={}{0:mm\\:ss}}" />
                                <ProgressBar Grid.Row="7" Height="25" VerticalAlignment="Top" Margin="7,0,0,0"
                                             UseLayoutRounding="False" Grid.ColumnSpan="2" Grid.Column="1" 
                                             Value="{Binding BGPosition, UpdateSourceTrigger=PropertyChanged}" 
                                             Maximum="{Binding BGPlayerAktPlaylistTitelLänge, UpdateSourceTrigger=PropertyChanged}"
                                             MouseLeftButtonDown="pbarBGSong_MouseLeftButtonDown" 
                                             ToolTip="Klicken um von der Liedstelle abzuspielen" Cursor="Hand" />

                                <CheckBox Grid.Row="8" Content="Nur ein Teil des Songs" Grid.Column="1" Grid.ColumnSpan="2" VerticalAlignment="Top" 
                                          IsChecked="{Binding BGPlayerAktPlaylistTitelTeilAbspielen}" Focusable="False" />


                                <Grid Name="grdTeilSongSlider" Grid.Row="7" Grid.Column="1" Grid.ColumnSpan="2" VerticalAlignment="Top" Margin="7,2,0,0" 
                                      Visibility="{Binding BGPlayerAktPlaylistTitelTeilAbspielen, Converter={StaticResource BooleanToVisibilityConverter1} }" >
                                    <Border BorderThickness="1" BorderBrush="Black" VerticalAlignment="Center" Height="2" Name="brdLine" Opacity="0.5" >
                                        <Border.Margin>
                                            <MultiBinding Converter="{StaticResource SliderRangeMarginConverter1}">
                                                <MultiBinding.Bindings>
                                                    <Binding ElementName="grdTeilSongSlider" Path="ActualWidth" />
                                                    <Binding ElementName="sldRangeMin" Path="Maximum" />
                                                    <Binding ElementName="sldRangeMin" Path="Value" />
                                                    <Binding ElementName="sldRangeMax" Path="Value" />
                                                </MultiBinding.Bindings>
                                            </MultiBinding>
                                        </Border.Margin>
                                    </Border>
                                    <Slider Name="sldRangeMin" Template="{StaticResource simpleSliderMin}" 
                                        Minimum="0"
                                        Maximum="{Binding BGPlayerAktPlaylistTitelLänge, UpdateSourceTrigger=PropertyChanged}"      
                                        Value="{Binding BGPlayerAktPlaylistTitelTeilStart, UpdateSourceTrigger=PropertyChanged}"
                                        MouseMove="Slider_MouseMove"
                                        MouseLeave="Slider_MouseLeave">
                                        <Slider.ToolTip>
                                            <ToolTip>
                                                <TextBlock Text="{Binding BGPlayerAktPlaylistTitelTeilStart, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource DoubleToTimespanHHMMSSConverter1}}" />
                                            </ToolTip>
                                        </Slider.ToolTip>
                                    </Slider>

                                    <Slider Name="sldRangeMax" Template="{StaticResource simpleSliderMax}" 
                                        Minimum="0"
                                        Maximum="{Binding BGPlayerAktPlaylistTitelLänge, UpdateSourceTrigger=PropertyChanged}"      
                                        Value="{Binding BGPlayerAktPlaylistTitelTeilEnde, UpdateSourceTrigger=PropertyChanged}" 
                                        MouseMove="Slider_MouseMove"
                                        MouseLeave="Slider_MouseLeave">
                                        <Slider.ToolTip>
                                            <ToolTip>
                                                <TextBlock Text="{Binding BGPlayerAktPlaylistTitelTeilEnde, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource DoubleToTimespanHHMMSSConverter1}}" />
                                            </ToolTip>
                                        </Slider.ToolTip>
                                    </Slider>
                                </Grid>

                                <GroupBox Grid.Row="9" Grid.Column="1" Grid.ColumnSpan="2" Header="Gewichtung">
                                    <StackPanel Orientation="Horizontal" FlowDirection="LeftToRight" Margin="30,0,0,0">
                                        <Button Command="{Binding OnMusikStern1}" >
                                            <Button.ToolTip>
                                                <ToolTip>
                                                    <TextBlock Text="Klicken um zu Bewerten. Dies verändert die Wahrscheinlichkeit im Shuffle-Modus." />
                                                </ToolTip>
                                            </Button.ToolTip>
                                            <Button.Template>
                                                <ControlTemplate TargetType="Button">
                                                    <Image Grid.Column="1">
                                                        <Image.Style>
                                                            <Style TargetType="Image">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding MusikStern1}" Value="True" >
                                                                        <Setter Property="Source" Value="pack://application:,,,/DSA MeisterGeister;component/Images/Icons/General/neu.png" />
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding MusikStern1}" Value="False">
                                                                        <Setter Property="Source" Value="pack://application:,,,/DSA MeisterGeister;component/Images/Icons/General/neu_grau.png" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Image.Style>
                                                    </Image>
                                                </ControlTemplate>
                                            </Button.Template>
                                        </Button>
                                        <Button Command="{Binding OnMusikStern2}" >
                                            <Button.ToolTip>
                                                <ToolTip>
                                                    <TextBlock Text="Klicken um zu Bewerten. Dies verändert die Wahrscheinlichkeit im Shuffle-Modus." />
                                                </ToolTip>
                                            </Button.ToolTip>
                                            <Button.Template>
                                                <ControlTemplate TargetType="Button">
                                                    <Image Grid.Column="1" >
                                                        <Image.Style>
                                                            <Style TargetType="Image">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding MusikStern2}" Value="True" >
                                                                        <Setter Property="Source" Value="pack://application:,,,/DSA MeisterGeister;component/Images/Icons/General/neu.png" />
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding MusikStern2}" Value="False">
                                                                        <Setter Property="Source" Value="pack://application:,,,/DSA MeisterGeister;component/Images/Icons/General/neu_grau.png" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Image.Style>
                                                    </Image>
                                                </ControlTemplate>
                                            </Button.Template>
                                        </Button>
                                        <Button Command="{Binding OnMusikStern3}" >
                                            <Button.ToolTip>
                                                <ToolTip>
                                                    <TextBlock Text="Klicken um zu Bewerten. Dies verändert die Wahrscheinlichkeit im Shuffle-Modus." />
                                                </ToolTip>
                                            </Button.ToolTip>
                                            <Button.Template>
                                                <ControlTemplate TargetType="Button">
                                                    <Image Grid.Column="1" >
                                                        <Image.Style>
                                                            <Style TargetType="Image">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding MusikStern3}" Value="True" >
                                                                        <Setter Property="Source" Value="pack://application:,,,/DSA MeisterGeister;component/Images/Icons/General/neu.png" />
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding MusikStern3}" Value="False">
                                                                        <Setter Property="Source" Value="pack://application:,,,/DSA MeisterGeister;component/Images/Icons/General/neu_grau.png" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Image.Style>
                                                    </Image>
                                                </ControlTemplate>
                                            </Button.Template>
                                        </Button>
                                        <Button Command="{Binding OnMusikStern4}" >
                                            <Button.ToolTip>
                                                <ToolTip>
                                                    <TextBlock Text="Klicken um zu Bewerten. Dies verändert die Wahrscheinlichkeit im Shuffle-Modus." />
                                                </ToolTip>
                                            </Button.ToolTip>
                                            <Button.Template>
                                                <ControlTemplate TargetType="Button">
                                                    <Image Grid.Column="1" >
                                                        <Image.Style>
                                                            <Style TargetType="Image">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding MusikStern4}" Value="True" >
                                                                        <Setter Property="Source" Value="pack://application:,,,/DSA MeisterGeister;component/Images/Icons/General/neu.png" />
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding MusikStern4}" Value="False">
                                                                        <Setter Property="Source" Value="pack://application:,,,/DSA MeisterGeister;component/Images/Icons/General/neu_grau.png" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Image.Style>
                                                    </Image>
                                                </ControlTemplate>
                                            </Button.Template>
                                        </Button>
                                        <Button Command="{Binding OnMusikStern5}" >
                                            <Button.ToolTip>
                                                <ToolTip>
                                                    <TextBlock Text="Klicken um zu Bewerten. Dies verändert die Wahrscheinlichkeit im Shuffle-Modus." />
                                                </ToolTip>
                                            </Button.ToolTip>
                                            <Button.Template>
                                                <ControlTemplate TargetType="Button">
                                                    <Image Grid.Column="1" >
                                                        <Image.Style>
                                                            <Style TargetType="Image">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding MusikStern5}" Value="True" >
                                                                        <Setter Property="Source" Value="pack://application:,,,/DSA MeisterGeister;component/Images/Icons/General/neu.png" />
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding MusikStern5}" Value="False">
                                                                        <Setter Property="Source" Value="pack://application:,,,/DSA MeisterGeister;component/Images/Icons/General/neu_grau.png" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Image.Style>
                                                    </Image>
                                                </ControlTemplate>
                                            </Button.Template>
                                        </Button>
                                    </StackPanel>
                                </GroupBox>
                            </Grid>
                        </Border>
                    </Grid>
                </Grid>
            </TabItem>

            <TabItem Header="Erweiterter - Player" Name="tiErwPlayer" >
                <Grid Background="{StaticResource Background1}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="1*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="35" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="46" />
                        <RowDefinition>
                            <RowDefinition.Style>
                                <Style TargetType="RowDefinition">
                                    <Style.Triggers>
                                        <DataTrigger>
                                            <DataTrigger.Binding>
                                                <MultiBinding Converter="{StaticResource MultiBooleanAndConverter1}">
                                                    <Binding ElementName="exPListPlaylists.IsExpanded" Path="True" Converter="{StaticResource InverseBooleanConverter1}" />
                                                    <Binding ElementName="exPListMusik.IsExpanded" Path="True" Converter="{StaticResource InverseBooleanConverter1}"  />
                                                </MultiBinding>
                                            </DataTrigger.Binding>
                                            <Setter Property="Height" Value="Auto" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=rbEditorEditPList,Path=IsChecked}" Value="True">
                                            <Setter Property="Height" Value="40*" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </RowDefinition.Style>
                        </RowDefinition>
                    </Grid.RowDefinitions>

                    <Border Style="{DynamicResource ControlContentBorder}" Margin="10,0" Grid.ColumnSpan="2">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>
                            <Border Style="{DynamicResource ControlContentBorder}" Width="70" HorizontalAlignment="Left" Margin="5,2" >
                                <StackPanel Orientation="Horizontal">
                                    <Button Width="24" Height="24" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="0" Margin="5,1,1,0" Focusable="False" 
                                            ToolTip="Speichern der aktuellen Playlisten-Konstellation als neues Theme"
                                            Command="{Binding OnNewThemeVonErwPlayer}">
                                        <Image Source="/Images/Icons/General/speichern.png" Stretch="Fill"  />
                                    </Button>

                                    <Button Width="24" Height="24" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="0" Margin="5,1,1,0" Focusable="False" 
                                            ToolTip="Löschen des aktuellen Themes"
                                            Command="{Binding OnLöschenThemeVonErwPlayer}" >
                                        <Button.Style>
                                            <Style TargetType="Button">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding AktErwPlayerTheme, UpdateSourceTrigger=PropertyChanged}" Value="{x:Null}">
                                                        <Setter Property="IsEnabled" Value="False"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>

                                        </Button.Style>
                                        <Grid>
                                            <Image Source="/Images/Icons/General/copy.png" />
                                            <Image Source="/Images/Icons/General/entf_01.png" Height="20" />
                                        </Grid>
                                    </Button>
                                </StackPanel>
                            </Border>
                            <Border HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,-100,0" Style="{DynamicResource ControlContentBorder}" ToolTip="Übergeordneter Filter auf Namen und/oder Kategorien aller Bereiche" >
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="26" />
                                        <ColumnDefinition Width="*" MinWidth="150" />
                                        <ColumnDefinition Width="20" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="28"/>
                                    </Grid.RowDefinitions>
                                    <Image Source="/Images/Icons/General/filter.png" Stretch="Fill"/>
                                    <Button Padding="0" Grid.Column="2" ToolTip="Filter löschen"
                                            Command="{Binding OnSuchTextErwPlayerThemesLöschen}" >
                                        <Image Source="/Images/Icons/Wuerfel/w6_blank.png" Stretch="Fill" HorizontalAlignment="Stretch" Width="15" Height="25" />
                                    </Button>
                                    <TextBox Name="tbThemesFilterAll" Margin="2,1" Grid.Column="1"  
                                        Text="{Binding Path=SuchTextErwPlayerTheme, UpdateSourceTrigger=PropertyChanged}"
                                        vmAudioPlayer:FocusExtension.IsFocused="{Binding ShowHotkeyPanel, Mode=TwoWay}"  />
                                </Grid>
                            </Border>

                            <StackPanel Orientation="Horizontal" Grid.Column="1" Width="140" HorizontalAlignment="Right" >
                                <Border HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,2,0" Width="60" Height="27" Style="{DynamicResource ControlContentBorder}" >
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="/Images/Icons/General/copy.png" Width="24" Height="24" />
                                        <ToggleButton Width="24" Height="24" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="5,1,1,0" Focusable="False" ClickMode="Press" 
                                                      IsChecked="{Binding ThemeGroßeAnsicht, Converter={StaticResource InverseBooleanConverter1}}" Background="{x:Null}" >
                                            <StackPanel>
                                                <Image Source="/Images/Icons/General/kachel.png" 
                                                       Visibility="{Binding ThemeGroßeAnsicht, Converter={StaticResource BooleanToVisibilityConverter1}}"/>
                                                <Image Source="/Images/Icons/General/zeile.png" Height="10" Width="24" Stretch="Fill" Margin="-2,0,0,-1" />
                                                <Image Source="/Images/Icons/General/zeile.png" Height="10" Width="24" Stretch="Fill" Margin="-2,0,0,0" />
                                            </StackPanel>
                                        </ToggleButton>
                                    </StackPanel>
                                </Border>
                                <Border HorizontalAlignment="Right" VerticalAlignment="Center"  Grid.Column="1" Margin="15,0,2,0" Width="57" Height="27" Style="{DynamicResource ControlContentBorder}" >
                                    <StackPanel Orientation="Horizontal">
                                        <Grid Height="25" Width="22">
                                            <Image Source="/Images/Icons/General/speaker.png" Style="{StaticResource ImageEnabled}" Margin="0,2,0,-2"  />
                                            <Image Source="/Images/Icons/General/audio.png" Style="{StaticResource ImageEnabled}" Margin="3,0,-3,0" />
                                        </Grid>
                                        <ToggleButton Width="24" Height="24" HorizontalAlignment="Right" Background="{x:Null}" 
                                                      VerticalAlignment="Center" Margin="5,1,1,0" Focusable="False" ClickMode="Press"
                                                      IsChecked="{Binding PListGroßeAnsicht, Converter={StaticResource InverseBooleanConverter1}}" >
                                            <StackPanel>
                                                <Image Source="/Images/Icons/General/kachel.png"
                                                    Visibility="{Binding PListGroßeAnsicht, Converter={StaticResource BooleanToVisibilityConverter1}}" />
                                                <Image Source="/Images/Icons/General/zeile.png" Height="10" Width="24" Stretch="Fill" Margin="-2,0,0,-1" />
                                                <Image Source="/Images/Icons/General/zeile.png" Height="10" Width="24" Stretch="Fill" Margin="-2,0,0,0" />
                                            </StackPanel>
                                        </ToggleButton>
                                    </StackPanel>
                                </Border>
                            </StackPanel>
                        </Grid>
                    </Border>

                    <Border Grid.Row="1" Grid.ColumnSpan="2">
                        <StackPanel>
                            <Expander Name="exErwPlayerTheme" IsExpanded="True" Margin="30,5,30,10" MinWidth="200" MaxHeight="500" ForceCursor="False" >
                                <Expander.Header>
                                    <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" >
                                        <Image Source="/Images/Icons/General/copy.png" />
                                        <TextBlock Text="Themes" Style="{DynamicResource TextTitel}" />
                                    </StackPanel>
                                </Expander.Header>
                                <Border Style="{DynamicResource ControlContentBorder}" VerticalAlignment="Top" ToolTip="Liste aller erstellten Themes (Zusammenstellungen von Musik und Geräusche-Playlisten)">
                                    <ScrollViewer VerticalScrollBarVisibility="Visible" Margin="0,0,0,6" >
                                        <ItemsControl ItemsSource="{Binding FilteredErwPlayerThemeListe, UpdateSourceTrigger=PropertyChanged}" >
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <WrapPanel Name="wpnlPListThemes" ItemWidth="130" MinHeight="60" >
                                                        <WrapPanel.Style>
                                                            <Style TargetType="WrapPanel">
                                                                <Setter Property="ItemHeight" Value="50" />
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding ThemeGroßeAnsicht}" Value="False" >
                                                                        <Setter Property="ItemHeight" Value="25" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </WrapPanel.Style>
                                                    </WrapPanel>
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                        </ItemsControl>
                                    </ScrollViewer>
                                </Border>
                            </Expander>
                        </StackPanel>
                    </Border>

                    <GridSplitter Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" ResizeDirection="Rows" Height="5" Grid.ColumnSpan="2" />

                    <GridSplitter Grid.Row="2" Grid.RowSpan="2" HorizontalAlignment="Right" VerticalAlignment="Stretch" Width="5" Margin="0,0,-2,0" />

                    <Border Grid.Row="2" Style="{DynamicResource ControlContentBorder}" Margin="10,2">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="325" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="187*" MinWidth="100" MaxWidth="280" />
                            </Grid.ColumnDefinitions>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="2,0,0,0" VerticalAlignment="Top">
                                <ToggleButton Name="tbtnErwPlayerMusikAZ" Margin="3,0,0,0" Height="28" Width="25" Focusable="False" Background="{x:Null}" 
                                        IsChecked="{Binding MusikAZ}">
                                    <Image Margin="-2,0" >
                                        <Image.Style>
                                            <Style TargetType="Image">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding MusikAZ}" Value="True">
                                                        <Setter Property="Source" Value="/Images/Icons/General/sort.png" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding MusikAZ}" Value="False">
                                                        <Setter Property="Source" Value="/Images/Icons/General/sort1.png" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                    <ToggleButton.Style>
                                        <Style TargetType="ToggleButton">
                                            <Setter Property="ToolTip" Value="Sortierung: nach Reihenfolge" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding MusikAZ}" Value="True">
                                                    <Setter Property="ToolTip" Value="Sortierung: Alphabethisch" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                <ToggleButton Name="tbtnErwPlayerMusikNacheinander" Margin="3,0,0,0" ToolTip="Playlisten nacheinander abspielen" Height="28" Width="25" Focusable="False" Grid.Column="1" 
                                    IsChecked="{Binding MusikNacheinander}" Background="{x:Null}" >
                                    <Grid>
                                        <Image Source="/Images/Icons/General/zeile.png" Margin="-4,0,0,0" Style="{StaticResource ImageEnabled}" />
                                        <Image Source="/Images/Icons/General/refresh.png" Margin="4,0,-4,0" Style="{StaticResource ImageEnabled}" 
                                               Visibility="{Binding MusikNacheinander, Converter={StaticResource BooleanToVisibilityConverter1}}" />
                                    </Grid>
                                </ToggleButton>
                                <Button Width="30" Height="30" Margin="8,0,5,0" 
                                        Style="{StaticResource GlasButton}" Background="Black" ToolTip="Stopp"                                     
                                    Command="{Binding OnbtnBGStoppen}" >
                                    <Button.IsEnabled>
                                        <MultiBinding Converter="{StaticResource MultiBooleanAndConverter1}" >
                                            <Binding Path="BGPlayerAktPlaylistTitel" />
                                            <Binding Path="HintergrundMusikListe.Count" Converter="{StaticResource IsEqualOrGreaterThanConverter1}" ConverterParameter="1" />
                                        </MultiBinding>
                                    </Button.IsEnabled>
                                    <Image Source="{Binding Source, ElementName=imgbtnBGStoppen}" Style="{StaticResource ImageEnabled}" Margin="5,6,4,4" />
                                </Button>

                                <Button Width="30" Height="30" Background="Black" Style="{StaticResource GlasButton}" Margin="0,0,5,0" ToolTip="Zurück" 
                                        Command="{Binding OnbtnBGPrev}"
                                        IsEnabled="{Binding BGPlayerGespieltCount, Converter={StaticResource IsEqualOrGreaterThanConverter1}, ConverterParameter='1'}" >
                                    <Image Margin="2,4,2,2" Source="/DSA%20MeisterGeister;component/Images/Icons/General/play_prev.png" Style="{StaticResource ImageEnabled}" />
                                </Button>

                                <Button ClickMode="Press" Tag="0"  Width="40" Height="40" Margin="0,0,5,0" Style="{StaticResource GlasButton}" Background="Black" ToolTip="Abspielen/Pause" 
                                    Command="{Binding OnbtnBGApspielen}"                                    
                                    IsEnabled="{Binding HintergrundMusikListe.Count, Converter={StaticResource IsEqualOrGreaterThanConverter1}, ConverterParameter='1'}" >
                                    <Image Margin="5"  Width="30" Height="30">
                                        <Image.Style>
                                            <Style TargetType="Image" BasedOn="{StaticResource ImageEnabled}"  >
                                                <Style.Setters>
                                                    <Setter Property="Source" Value="/DSA%20MeisterGeister;component/Images/Icons/General/play.png" />
                                                </Style.Setters>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding BGmPlayerIsPaused}" Value="False" >
                                                        <Setter Property="Source" Value="pack://application:,,,/DSA MeisterGeister;component/Images/Icons/General/pause.png" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                </Button>


                                <Button Width="30" Height="30" Background="Black" Style="{StaticResource GlasButton}" Margin="0,0,5,0" ToolTip="Vor" 
                                    Command="{Binding OnbtnBGNext}" 
                                    IsEnabled="{Binding HintergrundMusikListe.Count, Converter={StaticResource IsEqualOrGreaterThanConverter1}, ConverterParameter='1'}" >
                                    <Image Source="{Binding Source, ElementName=imgbtnBGNext}" Margin="2,4,2,2" Style="{StaticResource ImageEnabled}" />
                                </Button>


                                <Button Width="26" Height="26" Command="{Binding OnBGSpeakerMuting}" ToolTip="Ton aus/an" >
                                    <Image Width="20" Height="20">
                                        <Image.Style>
                                            <Style TargetType="Image">
                                                <Style.Setters>
                                                    <Setter Property="Source" Value="pack://application:,,,/DSA MeisterGeister;component/Images/Icons/General/speaker.png" />
                                                </Style.Setters>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding BGPlayerIsMuted}" Value="True">
                                                        <Setter Property="Source" Value="pack://application:,,,/DSA MeisterGeister;component/Images/Icons/General/speaker-mute.png" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                </Button>

                                <Slider Height="22" Maximum="100" UseLayoutRounding="True" Width="60" SmallChange="1" LargeChange="10"  Margin="10,0,0,0" 
                                        Value="{Binding BGPlayerVolume}" 
                                        MouseWheel="slVolume_MouseWheel" >
                                    <Slider.ToolTip>
                                        <TextBlock Text="{Binding BGPlayerVolume, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0}% }" />
                                    </Slider.ToolTip>
                                </Slider>


                            </StackPanel>
                            <Border Grid.Column="2" HorizontalAlignment="Stretch" Height="28" Style="{DynamicResource ControlContentBorder}" VerticalAlignment="Center" ToolTip="Filter aller Musik-Playlisten auf Namen und/oder Kategorie" Margin="6,0,10,0">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="26" />
                                        <ColumnDefinition Width="*" MinWidth="50" />
                                        <ColumnDefinition Width="20" />
                                    </Grid.ColumnDefinitions>

                                    <Image Source="/Images/Icons/General/filter.png" Stretch="Fill" />
                                    <TextBox Name="tbPListMusikName" Margin="2,1" Grid.Column="1"  
                                        Text="{Binding Path=SuchTextMusik, UpdateSourceTrigger=PropertyChanged}"
                                        vmAudioPlayer:FocusExtension.IsFocused="{Binding ShowHotkeyPanel, Mode=TwoWay}"  />
                                    <Button Padding="0" Grid.Column="2" ToolTip="Filter löschen"
                                            Command="{Binding OnSuchTextErwPlayerMusikLöschen}" >
                                        <Image Source="/Images/Icons/Wuerfel/w6_blank.png" Stretch="Fill" HorizontalAlignment="Stretch" Width="15" Height="25" />
                                    </Button>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>

                    <Border Grid.Row="2" Grid.Column="1" Style="{DynamicResource ControlContentBorder}" Margin="10,2">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="285*" MinWidth="200" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="187*" MinWidth="100" MaxWidth="280" />
                            </Grid.ColumnDefinitions>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left"  Margin="3,0,0,0" VerticalAlignment="Center">
                                <Button Name="btnThemeGeräuscheAus" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="2" Width="20" Height="20" Margin="15,0,10,0" ToolTip="Alle Geräusche ausschalten" 
                                        Command="{Binding OnThemeGeräuscheAus}" >
                                    <Grid>
                                        <Image Source="/Images/Icons/General/OK.png" />
                                        <Image Source="/Images/Icons/General/gestrichen.png" />
                                    </Grid>
                                </Button>
                                <Button Name="btnThemeGeräuscheFilterAktiv" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="2" Width="20" Height="20" Margin="0,0,10,0" ToolTip="Nur aktive Playlisten zeigen" 
                                        Command="{Binding OnThemeGeräuscheFilterAktiv}" >
                                    <Grid>
                                        <Image Source="/Images/Icons/General/OK.png" VerticalAlignment="Center" />
                                        <Image Source="/Images/Icons/General/Filter.png" VerticalAlignment="Center" Margin="4,-2,-8,-2" />
                                    </Grid>
                                </Button>
                                <Button Grid.Column="2" ToolTip="Aktiv-Filter löschen" Width="20" Height="20"  Name="btnPListAktFilter" Margin="-5,0,10,0" 
                                        Visibility="{Binding ThemeGeräuscheFilterAktiv, Converter={StaticResource BooleanToVisibilityConverter1}}"
                                        Command="{Binding OnThemeGeräuscheFilterNichtAktiv}">
                                    <Grid>
                                        <Image Source="/Images/Icons/General/OK.png" VerticalAlignment="Center" />
                                        <Image Source="/Images/Icons/General/Filter.png" VerticalAlignment="Center" Margin="4,-2,-8,-2" />
                                        <Image Source="/Images/Icons/General/gestrichen.png" />
                                    </Grid>
                                </Button>
                                <TextBlock Padding="4,2,4,0" />
                                <ToggleButton Name="tbtnErwPlayerGeräuscheAZ" Margin="3,0" Height="28" Width="25" Focusable="False" Background="{x:Null}" 
                                        IsChecked="{Binding GeräuscheAZ}">
                                    <Image Margin="-2,0" >
                                        <Image.Style>
                                            <Style TargetType="Image">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding GeräuscheAZ}" Value="True">
                                                        <Setter Property="Source" Value="/Images/Icons/General/sort.png" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding GeräuscheAZ}" Value="False">
                                                        <Setter Property="Source" Value="/Images/Icons/General/sort1.png" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                    <ToggleButton.Style>
                                        <Style TargetType="ToggleButton">
                                            <Setter Property="ToolTip" Value="Sortierung: nach Reihenfolge" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding GeräuscheAZ}" Value="True">
                                                    <Setter Property="ToolTip" Value="Sortierung: Alphabethisch" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>

                                <Button Name="btnPListPListAbspielen" ClickMode="Press" Tag="false" Width="40" Height="40" Margin="0,0,5,0" Style="{StaticResource GlasButton}" Background="Black"                                         
                                        Command="{Binding OnBtnErwPlayerPListAbspielen}"
                                        IsEnabled="{Binding ErwPlayerGeräuscheAktiv}" >
                                    <Image Name="btnimgPListPListAbspielen" Width="30" Height="30" Margin="5" >
                                        <Image.Style>
                                            <Style TargetType="Image" BasedOn="{StaticResource ImageEnabled}"  >
                                                <Style.Setters>
                                                    <Setter Property="Source" Value="/DSA%20MeisterGeister;component/Images/Icons/General/play_grau.png" />
                                                </Style.Setters>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ErwPlayerGeräuscheLaufen}" Value="False" >
                                                        <Setter Property="Source" Value="pack://application:,,,/DSA MeisterGeister;component/Images/Icons/General/play.png" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ErwPlayerGeräuscheLaufen}" Value="True" >
                                                        <Setter Property="Source" Value="pack://application:,,,/DSA MeisterGeister;component/Images/Icons/General/pause.png" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                </Button>

                                <Button Width="26" Height="26" Command="{Binding OnGeräuscheSpeakerMuting}" ToolTip="Ton aus/an" >
                                    <Image Width="20" Height="20">
                                        <Image.Style>
                                            <Style TargetType="Image">
                                                <Style.Setters>
                                                    <Setter Property="Source" Value="pack://application:,,,/DSA MeisterGeister;component/Images/Icons/General/speaker.png" />
                                                </Style.Setters>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding GeräuscheIsMuted}" Value="True">
                                                        <Setter Property="Source" Value="pack://application:,,,/DSA MeisterGeister;component/Images/Icons/General/speaker-mute.png" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                </Button>

                                <Slider Height="22" Maximum="200" UseLayoutRounding="False" Width="60" SmallChange="1" LargeChange="10" Name="slPlaylistVolume" Margin="10,0,0,0" Interval="1" 
                                    MouseWheel="slVolume_MouseWheel" 
                                    Value="{Binding FadingGeräuscheVolProzent }" >
                                    <Slider.ToolTip>
                                        <TextBlock Text="{Binding FadingGeräuscheVolProzent, StringFormat={}{0:N0}% der Playlisten-Lautstärke}" />
                                    </Slider.ToolTip>

                                    <Slider.Background>
                                        <LinearGradientBrush EndPoint="1,0.5" Opacity="0.2" StartPoint="0,-1">
                                            <GradientStop Color="#FF00FF52" Offset="0.5" />
                                            <GradientStop Color="Red" Offset="0.6" />
                                        </LinearGradientBrush>
                                    </Slider.Background>
                                </Slider>

                            </StackPanel>
                            <Border Grid.Column="2" Style="{DynamicResource ControlContentBorder}" Height="28" VerticalAlignment="Center" ToolTip="Filter aller Geräusche-Playlisten auf Namen und/oder Kategorie" Margin="3,0,20,0">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="26" />
                                        <ColumnDefinition Width="*" MinWidth="50" />
                                        <ColumnDefinition Width="20" />
                                    </Grid.ColumnDefinitions>
                                    <Image Source="/Images/Icons/General/filter.png" Stretch="Fill"/>
                                    <TextBox Name="tbPListGeräuscheName" Margin="2,1" Grid.Column="1" 
                                        Text="{Binding Path=SuchTextErwPlayerGeräusche, UpdateSourceTrigger=PropertyChanged}"
                                        vmAudioPlayer:FocusExtension.IsFocused="{Binding ShowHotkeyPanel, Mode=TwoWay}"  />
                                    <Button Padding="0" Grid.Column="2" ToolTip="Filter löschen"
                                            Command="{Binding OnSuchTextErwPlayerGeräuscheLöschen}" >
                                        <Image Source="/Images/Icons/Wuerfel/w6_blank.png" Stretch="Fill" HorizontalAlignment="Stretch" Width="15" Height="25" />
                                    </Button>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>

                    <Border Grid.Row="3" Grid.Column="0" >
                        <Expander Name="exPListMusik" Margin="30,5,30,10" IsExpanded="True" MinWidth="200" ForceCursor="False" >
                            <Expander.Header>
                                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" >
                                    <Image Source="/Images/Icons/General/audio.png" />
                                    <TextBlock Text="Musik-Playlisten" Style="{DynamicResource TextTitel}" />
                                </StackPanel>
                            </Expander.Header>
                            <Border Style="{DynamicResource ControlContentBorder}" VerticalAlignment="Top">
                                <ListBox Name="lbErwPlayerMusik"  Background="Transparent" VerticalAlignment="Stretch"
                                    ToolTip="Liste der Musik-Playlisten. Zum Abspielen auswählen oder das entsprechende Theme aktivieren" 
                                    ItemsSource="{Binding FilteredErwPlayerMusikListItemListe, UpdateSourceTrigger=PropertyChanged}" 
                                    SelectedItem="{Binding SelectedMusikPlaylistItem}"
                                    SelectionChanged="lbErwPlayerMusik_SelectionChanged"
                                    ItemContainerStyle="{DynamicResource ListBoxItemStretch}" >
                                </ListBox>
                            </Border>
                        </Expander>
                    </Border>
                    
                    <Border Grid.Row="3" Grid.Column="1" >
                        <Expander Name="exPListPlaylists" Margin="30,5,30,10" IsExpanded="True" MinWidth="200" ForceCursor="False" >
                            <Expander.Header>
                                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" >
                                    <Image Source="/Images/Icons/General/speaker.png" Margin="0,2,0,-2" />
                                    <TextBlock Text="Geräusche-Playlisten" Style="{DynamicResource TextTitel}" />
                                </StackPanel>
                            </Expander.Header>
                            <Border Style="{DynamicResource ControlContentBorder}" VerticalAlignment="Top">
                                <ListBox Name="lbPListGeräusche" Background="Transparent" VerticalAlignment="Stretch"
                                         ToolTip="Liste aller Geräusche-Playlisten. Zum Anspielen einen Haken setzen oder das entsprechende Theme auswählen" 
                                         ItemsSource="{Binding FilteredErwPlayerGeräuscheListItemListe, UpdateSourceTrigger=PropertyChanged}" 
                                         SelectedItem="{Binding SelectedGeräuschItem}"
                                         SelectionChanged="lb_SelectionChanged" 
                                         ItemContainerStyle="{DynamicResource ListBoxItemStretch}" >
                                </ListBox>
                            </Border>
                        </Expander>
                    </Border>

                </Grid>
            </TabItem>
        </TabControl>        
    </Grid>
</UserControl>