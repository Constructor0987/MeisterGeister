<ListBoxItem x:Class="MeisterGeister.View.AudioPlayer.MusikZeile"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vmAudioPlayer="clr-namespace:MeisterGeister.ViewModel.AudioPlayer"
             xmlns:vmZeile="clr-namespace:MeisterGeister.ViewModel.AudioPlayer"
             xmlns:local="clr-namespace:MeisterGeister.View.AudioPlayer"
             xmlns:vm="clr-namespace:MeisterGeister.ViewModel.AudioPlayer"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             mc:Ignorable="d" 
             d:DesignHeight="55" d:DesignWidth="209" ToolTip="{Binding mZeileTooltip}">
    <ListBoxItem.Resources>
        <vmAudioPlayer:InvertedBoolenConverter x:Key="InvertedBoolenConverter" />
        <vmAudioPlayer:BooleanInverseToVisibilityConverter x:Key="BooleanInverseToVisibilityConverter1"/>
        <vmAudioPlayer:MultiBooleanAndConverter x:Key="MultiBooleanAndConverter1" />
        <vmAudioPlayer:MultiBooleanToVisibilityConverter x:Key="MultiBooleanToVisibilityConverter1" />
        <vmAudioPlayer:DoubleToTimespanHHMMSSConverter x:Key="DoubleToTimespanHHMMSSConverter1" />
    </ListBoxItem.Resources>

    <StackPanel Name="spnlMusikZeile" >
        <StackPanel.Style>
            <Style TargetType="StackPanel">
                <Setter Property="Background" Value="{x:Null}" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding TeilAbspielbar}" Value="True">
                        <Setter Property="Background" Value="#64FFFF50" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </StackPanel.Style>
        <Grid ToolTip="{Binding Output}" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition >
                    <ColumnDefinition.Style>
                        <Style TargetType="ColumnDefinition">
                            <Setter Property="Width" Value="100" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding NormalSize}" Value="True">
                                    <Setter Property="Width" Value="70" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ColumnDefinition.Style>
                </ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition>
                    <RowDefinition.Style>
                        <Style TargetType="RowDefinition">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding NormalSize, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                    <Setter Property="Height" Value="*" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding NormalSize, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                    <Setter Property="Height" Value="0" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </RowDefinition.Style>
                </RowDefinition>
            </Grid.RowDefinitions>

            <StackPanel Orientation="Horizontal" Grid.RowSpan="2">
                <ToggleButton Name="tbtnCheck" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="2" Width="20" Height="20" Focusable="False" 
                              ToolTip="Geräuscheplayliste abspielen/stoppen"
                              Visibility="{Binding aPlaylist.Hintergrundmusik, Converter={StaticResource BooleanInverseToVisibilityConverter1}}" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Checked">
                            <i:InvokeCommandAction Command="{Binding Path=OntbtnCheckChecked}"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="Unchecked">
                            <i:InvokeCommandAction Command="{Binding Path=OntbtnCheckUnChecked}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                    <Image Source="/Images/Icons/General/OK.png" Name="btnImgOK" VerticalAlignment="Center" 
                           Visibility="{Binding Path=IsChecked, ElementName=tbtnCheck, Converter={StaticResource BooleanToVisibilityConverter1} }" />                
                </ToggleButton>
                <TextBlock Text="{Binding aPlaylist.Name, NotifyOnTargetUpdated=True}" 
                    TargetUpdated="OnTitelNameUpdated" Name="tblkTitel" Padding="4,2,4,0" /> 
            </StackPanel>
            <ProgressBar HorizontalAlignment="Right" Name="pbarSong" Width="100" Value="0" ToolTip="Klicken um von der Liedstelle abzuspielen" Cursor="Hand" Margin="2,1" Visibility="Collapsed" />
            
            <TextBlock Name="tblkLänge" Grid.Column="1" Padding="4,2,4,0" HorizontalAlignment="Right" 
                       Text="{Binding aPlaylist.Länge, Converter={StaticResource DoubleToTimespanHHMMSSConverter1}, FallbackValue=--:--:--}"
                       Visibility="{Binding ShowLänge, Converter={StaticResource BooleanToVisibilityConverter1}}">     
                <!--StringFormat={}{0:hh}:{0:mm}:{0:ss}, -->
            </TextBlock>

            <StackPanel Orientation="Horizontal" Grid.Column="1" Margin="0,0,5,0" HorizontalAlignment="Right" >
                <StackPanel.Visibility>
                    <MultiBinding Converter="{StaticResource MultiBooleanToVisibilityConverter1}" >
                        <Binding Path="NormalSize" Converter="{StaticResource InvertedBoolenConverter}" />
                        <Binding Path="aPlaylist.Hintergrundmusik" Converter="{StaticResource InvertedBoolenConverter}" />
                    </MultiBinding>
                </StackPanel.Visibility>

                <CheckBox Content="" VerticalAlignment="Center" FontSize="10" FontStyle="Italic" ToolTip="Manueller Volumen-Regler aktivieren" HorizontalAlignment="Left"
                    IsChecked="{Binding PlaylistDoForce, UpdateSourceTrigger=PropertyChanged}" />
                <Grid Width="70">
                    <Rectangle Fill="#FF49E6EE" Height="4" Margin="5,6,0,0" VerticalAlignment="Center" HorizontalAlignment="Left"
                        Width="{Binding ReadPercentage}">
                        </Rectangle>
                    <Rectangle Fill="#FF2FFF2F" Height="4" Margin="5,-6,0,0" VerticalAlignment="Center" HorizontalAlignment="Left"
                        Width="{Binding FadingPercentage}">
                    </Rectangle>

                    <Slider LargeChange="10" SmallChange="1" Maximum="100" VerticalAlignment="Center"                         
                        Value="{Binding PlaylistForceVolume, UpdateSourceTrigger=PropertyChanged}"
                        Visibility="{ Binding PlaylistDoForce, Converter={StaticResource BooleanToVisibilityConverter1}, UpdateSourceTrigger=PropertyChanged}" >
                        <Slider.ToolTip>
                            <ToolTip>
                                <TextBlock Text="{Binding PlaylistForceVolume, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0}% des Gesamtvolumens}" />
                            </ToolTip>
                        </Slider.ToolTip>
                    </Slider>
                </Grid>
            </StackPanel>

            <TextBlock Name="tbProzent" Margin="20,0,0,0" Foreground="#FF7C7B7B" />
            
            <!--ToolTip="Fading-Prozent der eingestellten Lautstärke" -->
            <Grid Name="grdForceVol" Grid.Row="1" Grid.ColumnSpan="2" Margin="10,1,0,0" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition>
                        <ColumnDefinition.Style>
                            <Style TargetType="ColumnDefinition">
                                <Setter Property="Width" Value="90" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding aPlaylist.Hintergrundmusik}" Value="True">
                                        <Setter Property="Width" Value="20" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ColumnDefinition.Style>
                    </ColumnDefinition>

                    <ColumnDefinition>
                        <ColumnDefinition.Style>
                            <Style TargetType="ColumnDefinition">
                                <Setter Property="Width" Value="70" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding aPlaylist.Hintergrundmusik}" Value="True">
                                        <Setter Property="Width" Value="0" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ColumnDefinition.Style>
                    </ColumnDefinition>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <CheckBox Name="chkbxForceVol" Content="Lautstärke" VerticalAlignment="Center" FontSize="10" FontStyle="Italic" ToolTip="Manueller Volumen-Regler aktivieren" HorizontalAlignment="Center" 
                    IsChecked="{Binding PlaylistDoForce, UpdateSourceTrigger=PropertyChanged}" >
                    <CheckBox.Style>
                        <Style TargetType="CheckBox">
                            <Setter Property="Visibility" Value="Visible" />
                            <Setter Property="Margin" Value="15,1,0,0" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding NormalSize}" Value="True">
                                    <Setter Property="Margin" Value="0,1,0,0" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding aPlaylist.Hintergrundmusik}" Value="True">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>                            
                        </Style>
                    </CheckBox.Style>
                </CheckBox>


                <Rectangle Name="recProzent" Fill="#FF49E6EE" Grid.Column="1" Height="4" Margin="5,6,0,0" VerticalAlignment="Center" HorizontalAlignment="Left"
                    Width="{Binding ReadPercentage}">
                    <Rectangle.Visibility>
                        <MultiBinding Converter="{StaticResource MultiBooleanToVisibilityConverter1}" >
                            <Binding Path="NormalSize" />
                            <Binding Path="aPlaylist.Hintergrundmusik" Converter="{StaticResource InvertedBoolenConverter}" />
                        </MultiBinding>
                    </Rectangle.Visibility>
                </Rectangle>
                <Rectangle Name="fadingProzent" Fill="#FF2FFF2F" Grid.Column="1" Height="4" Margin="5,-6,0,0" VerticalAlignment="Center" HorizontalAlignment="Left"
                    Width="{Binding FadingPercentage}">
                    <Rectangle.Visibility>
                        <MultiBinding Converter="{StaticResource MultiBooleanToVisibilityConverter1}" >
                            <Binding Path="NormalSize" />
                            <Binding Path="aPlaylist.Hintergrundmusik" Converter="{StaticResource InvertedBoolenConverter}" />
                        </MultiBinding>
                    </Rectangle.Visibility>
                </Rectangle>

                <Slider Name="sldForceVolume" Grid.Column="1" LargeChange="10" SmallChange="1" Maximum="100" VerticalAlignment="Center"
                        Value="{Binding PlaylistForceVolume}"
                        Visibility="{ Binding PlaylistDoForce, Converter={StaticResource BooleanToVisibilityConverter1}, UpdateSourceTrigger=PropertyChanged}">
                    <Slider.ToolTip>
                        <ToolTip>
                            <TextBlock Text="{Binding PlaylistForceVolume, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0}% des Gesamtvolumens}" />
                        </ToolTip>
                    </Slider.ToolTip>
                </Slider>
                <Border Name="brdKategorie" Grid.Column="2" Margin="10,1,0,0" Height="Auto" CornerRadius="5" ToolTip="Kategorie"
                        Visibility="{Binding NormalSize, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter1}}">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="1,0.5" Opacity="0.6" StartPoint="0,0.5">
                            <GradientStop Color="Beige" Offset="0" />
                            <GradientStop Color="#FFFFFFC7" Offset="1" />
                        </LinearGradientBrush>
                    </Border.Background>
                    <TextBox Name="tboxKategorie" IsReadOnly="True" Padding="4,0,4,4" FontSize="11" FontStyle="Italic" TextWrapping="WrapWithOverflow" 
                             Text="{Binding aPlaylist.Kategorie}"                             
                             Visibility="{Binding NormalSize, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter1}}"
                             Background="{x:Null}" ToolTip="Kategorie der Playlist" />
                </Border>
            </Grid>            
        </Grid>
    </StackPanel>
</ListBoxItem>
