<Window Name="EinstellungWnd"
    x:Class="MeisterGeister.View.Settings.EinstellungenWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ViewGeneral="clr-namespace:MeisterGeister.View.General"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:mg="clr-namespace:MeisterGeister"
    xmlns:vm="clr-namespace:MeisterGeister.ViewModel.Settings" xmlns:color="clr-namespace:MeisterGeister.View.Settings"
        Title="Einstellungen"
    Width="850"
    Height="500"
    d:DataContext="{d:DesignData /SampleData/EinstellungenSampleData.xaml}"
    d:DesignHeight="800"
    Background="{StaticResource Background1}"
    Closed="Window_Closed"
    Icon="/Images/Icons/mechanik.png"
    Loaded="Window_Loaded"
    TextOptions.TextFormattingMode="Display"
    WindowStartupLocation="CenterOwner"
    mc:Ignorable="d">
    <Window.Resources>
        <ViewGeneral:EnumMatchToBooleanConverter x:Key="EnumMatchToBooleanConverter" />
        <ViewGeneral:IsEqualOrGreaterThanVisibleConverter x:Key="IsEqualOrGreaterThanVisibleConverter1" />
        <ViewGeneral:IsEqualOrGreaterThanConverter x:Key="IsEqualOrGreaterThanConverter1" />
        <ViewGeneral:ColorToSolidColorBrushConverter x:Key="ColorToSolidColorBrushConverter1" />
        <DataTemplate x:Key="ThemeTemplate">
            <Border
                Margin="5"
                Padding="4"
                CornerRadius="5">
                <Border.Background>
                    <LinearGradientBrush Opacity="0.3" StartPoint="0,0.5" EndPoint="1,0.5">
                        <GradientStop Offset="0" Color="WhiteSmoke" />
                        <GradientStop Offset="1" Color="#FFFFFFC7" />
                    </LinearGradientBrush>
                </Border.Background>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="196" />
                        <ColumnDefinition Width="46" />
                        <ColumnDefinition Width="275" />
                        <ColumnDefinition Width="61*" />
                        <ColumnDefinition Width="2*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="18" />
                        <RowDefinition Height="122" />
                        <RowDefinition Height="30" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="25" />
                        <RowDefinition Height="0*" />
                        <RowDefinition Height="0*" />
                    </Grid.RowDefinitions>

                    <Grid
                        Grid.Row="1"
                        Grid.RowSpan="1"
                        Grid.ColumnSpan="3"
                        Margin="0,33,0,1"
                        VerticalAlignment="Center" Height="88">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="105" />
                            <ColumnDefinition Width="25" />
                            <ColumnDefinition Width="120" />
                            <ColumnDefinition Width="55" />
                            <ColumnDefinition Width="0*" />
                        </Grid.ColumnDefinitions>

                        <Label
                            Grid.Row="2"
                            Grid.ColumnSpan="4"
                            Content="Theme Name" />
                        <TextBox
                            Grid.Row="2"
                            Grid.Column="2"
                            Grid.ColumnSpan="2"
                            Margin="0,2"
                            Text="{Binding Path=Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                        <ComboBox
                            Grid.Row="3"
                            Grid.Column="2"
                            Grid.ColumnSpan="2"
                            Width="180"
                            Height="25"
                            Margin="170,0,284,0"
                            VerticalAlignment="Top"
                            DisplayMemberPath="Name"
                            ItemsSource="{Binding Path=DataContext.lstHUELights, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                            SelectedValue="{Binding AddLightToTheme}" />
                        <ListBox
                            Grid.Row="3"
                            Grid.ColumnSpan="4"
                            MaxHeight="200"
                            Margin="5,30,5,0"
                            VerticalAlignment="Top"
                            Background="Transparent"
                            DisplayMemberPath="Name"
                            ItemsSource="{Binding lstLights, UpdateSourceTrigger=PropertyChanged}"
                            ScrollViewer.VerticalScrollBarVisibility="Auto" />

                        <CheckBox
                            Grid.Row="4"
                            Grid.Column="3"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Bottom"
                            Content="Wiederholen"
                            IsChecked="{Binding Path=doLoop, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <Button
                            Grid.Row="4"
                            Width="30"
                            Height="25"
                            HorizontalAlignment="Left"
                            Command="{Binding DataContext.onbtnAddHUEProcess, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                            CommandParameter="{Binding}"
                            Content="+" />
                        <DataGrid
                            Grid.Row="5"
                            Grid.ColumnSpan="4"
                            ItemsSource="{Binding Path=lstLightProcess, UpdateSourceTrigger=PropertyChanged}"
                            SelectedItem="{Binding Path=LightProcessSelected}"
                            VerticalScrollBarVisibility="Auto">
                            <DataGrid.Columns>
                                <DataGridTextColumn
                                    Width="55"
                                    Binding="{Binding Path=Phase}"
                                    Header="Phase"
                                    IsReadOnly="True" />
                                <DataGridTextColumn
                                    Width="100"
                                    Binding="{Binding Path=Dauer, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Header="Dauer [ms]" />
                                <DataGridTemplateColumn>
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button
                                                Height="22"
                                                Command="{Binding DataContext.onBtnSelectHUEColor, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                                CommandParameter="{Binding}">
                                                <Button.Content>
                                                    <StackPanel
                                                        Width="75"
                                                        Margin="-2"
                                                        Orientation="Horizontal">
                                                        <Rectangle
                                                            Width="22"
                                                            Height="22"
                                                            Fill="{Binding Path=Color, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, Converter={StaticResource ColorToSolidColorBrushConverter1}}" />
                                                        <Label Padding="0" Content="Auswahl" />
                                                    </StackPanel>
                                                </Button.Content>
                                            </Button>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn
                                    Width="100"
                                    Binding="{Binding Path=Color, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Header="Farbe" />
                                <DataGridTemplateColumn Header="Helligkeit">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <Slider
                                                    Width="80"
                                                    Maximum="255"
                                                    Minimum="1"
                                                    Value="{Binding Path=Brightness, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                <Label
                                                    Width="25"
                                                    Padding="0"
                                                    Content="{Binding Path=Brightness, UpdateSourceTrigger=PropertyChanged}" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </Grid>
            </Border>
        </DataTemplate>

        <DataTemplate x:Key="RegelnListTemplate">
            <StackPanel Margin="4" Orientation="Horizontal">
                <CheckBox Margin="2" IsChecked="{Binding Path=Anwenden}" />
                <TextBlock
                    Margin="4,0,0,0"
                    FontWeight="Bold"
                    Text="{Binding Path=Typ}" />
                <TextBlock Text=": " />
                <TextBlock Text="{Binding Path=Beschreibung}" TextWrapping="Wrap" />
            </StackPanel>
        </DataTemplate>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle
                            Margin="2"
                            SnapsToDevicePixels="true"
                            Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                            StrokeDashArray="1 2"
                            StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="RadioButton.Static.Background" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="RadioButton.Static.Border" Color="#FF707070" />
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle
                            Margin="14,0,0,0"
                            SnapsToDevicePixels="true"
                            Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                            StrokeDashArray="1 2"
                            StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="#FFF3F9FF" />
        <SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="#FF5593FF" />
        <SolidColorBrush x:Key="RadioButton.MouseOver.Glyph" Color="#FF212121" />
        <SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="#FFE6E6E6" />
        <SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="#FFBCBCBC" />
        <SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="#FF707070" />
        <SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="#FFD9ECFF" />
        <SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="#FF3C77DD" />
        <SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="#FF212121" />
        <SolidColorBrush x:Key="RadioButton.Static.Glyph" Color="#FF212121" />
        <Style x:Key="RadioButtonStyle_IsEnabled" TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid
                            x:Name="templateRoot"
                            Background="Transparent"
                            SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Border
                                x:Name="radioButtonBorder"
                                Margin="1,1,2,1"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="100">
                                <Grid x:Name="markGrid" Margin="2">
                                    <Ellipse
                                        x:Name="optionMark"
                                        MinWidth="6"
                                        MinHeight="6"
                                        Fill="{StaticResource RadioButton.Static.Glyph}"
                                        Opacity="0" />
                                </Grid>
                            </Border>
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Grid.Column="1"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="Gray" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="Silver" />
                            </Trigger>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
                                <Setter Property="Padding" Value="4,-1,0,0" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="radioButtonBorder" Property="Background" Value="{StaticResource RadioButton.MouseOver.Background}" />
                                <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource RadioButton.MouseOver.Border}" />
                                <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource RadioButton.MouseOver.Glyph}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="radioButtonBorder" Property="Background" Value="{StaticResource RadioButton.Disabled.Background}" />
                                <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource RadioButton.Disabled.Border}" />
                                <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource RadioButton.Disabled.Glyph}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="radioButtonBorder" Property="Background" Value="{StaticResource RadioButton.Pressed.Background}" />
                                <Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{StaticResource RadioButton.Pressed.Border}" />
                                <Setter TargetName="optionMark" Property="Fill" Value="{StaticResource RadioButton.Pressed.Glyph}" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="optionMark" Property="Opacity" Value="1" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter TargetName="optionMark" Property="Opacity" Value="0.56" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid>
            <TabControl Background="{x:Null}">
                <TabItem x:Name="tbiAllgemein">
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <Image
                                Height="18"
                                HorizontalAlignment="Right"
                                Source="/DSA MeisterGeister;component/Images/Icons/General/info.png" />
                            <TextBlock
                                Margin="2,0,0,0"
                                VerticalAlignment="Center"
                                Style="{DynamicResource TextTitel}"
                                Text="Allgemein" />
                        </StackPanel>
                    </TabItem.Header>
                    <Border Style="{DynamicResource ControlContentBorder}">
                        <StackPanel>
                            <DockPanel>
                                <StackPanel
                                    VerticalAlignment="Center"
                                    DockPanel.Dock="Left"
                                    Orientation="Horizontal">
                                    <TextBlock
                                        Margin="5"
                                        VerticalAlignment="Center"
                                        FontWeight="Bold"
                                        Text="Regeledition:" />
                                    <TextBlock
                                        Margin="5"
                                        VerticalAlignment="Center"
                                        Text="{Binding Regeledition}" />
                                    <Button
                                        Margin="5"
                                        Command="{Binding OnSetRegeledition}"
                                        Content="Regeledition ändern..." />
                                </StackPanel>
                                <StackPanel
                                    Margin="4"
                                    HorizontalAlignment="Right"
                                    DockPanel.Dock="Right"
                                    Orientation="Horizontal">
                                    <Button
                                        Width="24"
                                        Height="24"
                                        Margin="10,0,0,0"
                                        Click="ButtonPlayJingle_Click">
                                        <Image
                                            Width="22"
                                            Source="/Images/Icons/General/audio.png"
                                            Stretch="Uniform"
                                            ToolTip="Jingle abspielen" />
                                    </Button>
                                    <TextBlock Margin="15,0,5,0" VerticalAlignment="Center"><Hyperlink
                                            x:Name="_hyperlinkWeb"
                                            NavigateUri="http://www.meistergeister.org/2011/10/08/meistergeister-bekommt-einen-jingle/"
                                            RequestNavigate="Hyperlink_RequestNavigate">
                                            <Run Text="Mehr Infos zum Jingle." />
                                        </Hyperlink></TextBlock>
                                </StackPanel>
                            </DockPanel>
                            <ListBox
                                Background="Transparent"
                                BorderThickness="0"
                                ItemsSource="{Binding AllgemeinListe}">
                                <ListBox.Resources>
                                    <DataTemplate DataType="{x:Type vm:EinstellungItemBoolean}">
                                        <StackPanel Margin="4" Orientation="Horizontal">
                                            <CheckBox
                                                Margin="2"
                                                Checked="CheckBoxEinstellungItem_CheckedChanged"
                                                IsChecked="{Binding Wert}"
                                                Tag="{Binding Name}"
                                                Unchecked="CheckBoxEinstellungItem_CheckedChanged" />
                                            <TextBlock Margin="4,0,0,0" Text="{Binding Beschreibung}" />
                                        </StackPanel>
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type vm:EinstellungItemInteger}">
                                        <StackPanel Margin="4" Orientation="Horizontal">
                                            <ViewGeneral:IntBox Value="{Binding Wert}" />
                                            <TextBlock Text="{Binding Beschreibung}" />
                                        </StackPanel>
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type vm:EinstellungItemDouble}">
                                        <StackPanel Margin="4" Orientation="Horizontal">
                                            <ViewGeneral:DoubleBox Value="{Binding Wert}" />
                                            <TextBlock Text="{Binding Beschreibung}" />
                                        </StackPanel>
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type vm:EinstellungItemString}">
                                        <StackPanel Margin="4" Orientation="Vertical">
                                            <TextBlock Text="{Binding Beschreibung}" />
                                            <TextBox
                                                MinWidth="300"
                                                Margin="20,0,0,0"
                                                Text="{Binding Wert}" />
                                        </StackPanel>
                                    </DataTemplate>
                                </ListBox.Resources>
                            </ListBox>
                        </StackPanel>
                    </Border>
                </TabItem>
                <TabItem x:Name="tbiSetting">
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <Image
                                Height="18"
                                HorizontalAlignment="Right"
                                Source="/DSA MeisterGeister;component/Images/Icons/mechanik.png" />
                            <TextBlock
                                Margin="2,0,0,0"
                                VerticalAlignment="Center"
                                Style="{DynamicResource TextTitel}"
                                Text="Settings" />
                        </StackPanel>
                    </TabItem.Header>
                    <Border Style="{DynamicResource ControlContentBorder}">
                        <StackPanel>
                            <TextBlock
                                Margin="4"
                                FontStyle="Italic"
                                Text="Eventuell ist ein Neustart nötig, damit die Optionen wirksam werden." />
                            <ListBox
                                x:Name="_listBoxSettings"
                                Background="Transparent"
                                BorderThickness="0"
                                ItemsSource="{Binding SettingListe}">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Margin="4" Orientation="Horizontal">
                                            <CheckBox Margin="2" IsChecked="{Binding Aktiv}" />
                                            <TextBlock Margin="4,0,0,0" Text="{Binding Name}" />
                                        </StackPanel>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>

                            <StackPanel Margin="4,10">
                                <TextBlock
                                    Margin="4"
                                    FontWeight="Bold"
                                    Text="Optionale HAUSREGEL"
                                    TextWrapping="WrapWithOverflow" />
                                <CheckBox Margin="5" Content="Pflanzenwissen (Held kennt nur bestimmte Pflanzen)" IsChecked="{Binding IsPflanzenwissen}" />
                            </StackPanel>
                        </StackPanel>
                    </Border>
                </TabItem>
                <TabItem x:Name="tbiInventar">
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <Image
                                Height="18"
                                HorizontalAlignment="Right"
                                Source="/DSA MeisterGeister;component/Images/Icons/ueberanstrengung.png" />
                            <TextBlock
                                Margin="2,0,0,0"
                                VerticalAlignment="Center"
                                Style="{DynamicResource TextTitel}"
                                Text="Inventar" />
                        </StackPanel>
                    </TabItem.Header>
                    <Border Style="{DynamicResource ControlContentBorder}">
                        <ListBox Background="{x:Null}">
                            <StackPanel Grid.Row="0" Margin="4">
                                <TextBlock
                                    Margin="4"
                                    FontWeight="Bold"
                                    Text="Wie wird die Rüstung eines Helden ermittelt?"
                                    TextWrapping="WrapWithOverflow" />
                                <StackPanel>
                                    <RadioButton
                                        Margin="2"
                                        Content="Automatische Zonenrüstung (Werte werden vom Programm für Zonen ermittelt)"
                                        GroupName="RuestungSetting"
                                        IsChecked="{Binding BerechnungRuestung, Mode=TwoWay, Converter={StaticResource EnumMatchToBooleanConverter}, ConverterParameter=AutomatischZonen}" />
                                    <RadioButton
                                        Margin="2"
                                        Content="Automatische Gesamtrüstung (Werte werden vom Programm für Gesamt-RS ermittelt)"
                                        GroupName="RuestungSetting"
                                        IsChecked="{Binding BerechnungRuestung, Mode=TwoWay, Converter={StaticResource EnumMatchToBooleanConverter}, ConverterParameter=AutomatischEinfach}" />
                                    <RadioButton
                                        Margin="2"
                                        Content="Eingegebene Zonenrüstung (Rüstung besteht aus einzelnen RS-Werten je Zone)"
                                        GroupName="RuestungSetting"
                                        IsChecked="{Binding BerechnungRuestung, Mode=TwoWay, Converter={StaticResource EnumMatchToBooleanConverter}, ConverterParameter=Zonen}" />
                                    <RadioButton
                                        Margin="2"
                                        Content="Eingegebene Gesamtrüstung ohne Zonen, (Ein Wert RS-Gesamt wird für den Helden eingegeben)"
                                        GroupName="RuestungSetting"
                                        IsChecked="{Binding BerechnungRuestung, Mode=TwoWay, Converter={StaticResource EnumMatchToBooleanConverter}, ConverterParameter=Einfach}" />
                                </StackPanel>
                            </StackPanel>
                            BE
                            <StackPanel Grid.Row="1" Margin="4">
                                <TextBlock
                                    Margin="4"
                                    FontWeight="Bold"
                                    Text="Wie wird die Behinderung(BE) eines Helden ermittelt?"
                                    TextWrapping="WrapWithOverflow" />
                                <StackPanel>
                                    <RadioButton
                                        Margin="2"
                                        Content="Automatisch (Werte werden vom Programm ermittelt)"
                                        GroupName="BehinderungSetting"
                                        IsChecked="{Binding BerechnungBehinderung, Mode=TwoWay, Converter={StaticResource EnumMatchToBooleanConverter}, ConverterParameter=Automatisch}" />
                                    <RadioButton
                                        Margin="2"
                                        Content="Eingabe (Der Wert BE wird eingegeben)"
                                        GroupName="BehinderungSetting"
                                        IsChecked="{Binding BerechnungBehinderung, Mode=TwoWay, Converter={StaticResource EnumMatchToBooleanConverter}, ConverterParameter=Eingabe}" />
                                </StackPanel>
                            </StackPanel>
                            Überlastung
                            <StackPanel Grid.Row="2" Margin="4">
                                <StackPanel Orientation="Horizontal">
                                    <CheckBox Margin="0,5,0,0" IsChecked="{Binding MitUeberlastung, Mode=TwoWay}" />
                                    <TextBlock
                                        Margin="4"
                                        FontWeight="Bold"
                                        Text="Spielt die Gruppe mit Überlastung?"
                                        TextWrapping="WrapWithOverflow" />
                                </StackPanel>
                                <Border>
                                    <StackPanel>
                                        <RadioButton
                                            Margin="2"
                                            Content="Automatisch (Werte werden vom Programm ermittelt)"
                                            GroupName="UeberlastungSetting"
                                            IsChecked="{Binding BerechnungUeberlastung, Mode=TwoWay, Converter={StaticResource EnumMatchToBooleanConverter}, ConverterParameter=Automatisch}"
                                            IsEnabled="{Binding MitUeberlastung}"
                                            Style="{DynamicResource RadioButtonStyle_IsEnabled}" />
                                        <RadioButton
                                            Margin="2"
                                            Content="Eingabe (Der Wert wird eingegeben)"
                                            GroupName="UeberlastungSetting"
                                            IsChecked="{Binding BerechnungUeberlastung, Mode=TwoWay, Converter={StaticResource EnumMatchToBooleanConverter}, ConverterParameter=Eingabe}"
                                            IsEnabled="{Binding MitUeberlastung}"
                                            Style="{DynamicResource RadioButtonStyle_IsEnabled}" />
                                    </StackPanel>
                                </Border>
                            </StackPanel>
                        </ListBox>
                    </Border>
                </TabItem>
                <TabItem x:Name="tbiKampf">
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <Image
                                Height="18"
                                HorizontalAlignment="Right"
                                Source="/DSA MeisterGeister;component/Images/Icons/nahkampf_01.png" />
                            <TextBlock
                                Margin="2,0,0,0"
                                VerticalAlignment="Center"
                                Style="{DynamicResource TextTitel}"
                                Text="Kampf" />
                        </StackPanel>
                    </TabItem.Header>
                    <Border Style="{DynamicResource ControlContentBorder}">
                        <ListBox Background="Transparent" ItemsSource="{Binding KampfListe}">
                            <ListBox.Resources>
                                <DataTemplate DataType="{x:Type vm:EinstellungItemBoolean}">
                                    <StackPanel Margin="4" Orientation="Horizontal">
                                        <CheckBox
                                            Margin="2"
                                            Checked="CheckBoxEinstellungItem_CheckedChanged"
                                            IsChecked="{Binding Wert}"
                                            Tag="{Binding Name}"
                                            Unchecked="CheckBoxEinstellungItem_CheckedChanged" />
                                        <TextBlock Margin="4,0,0,0" Text="{Binding Beschreibung}" />
                                    </StackPanel>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type vm:EinstellungItemInteger}">
                                    <StackPanel Margin="4" Orientation="Horizontal">
                                        <ViewGeneral:IntBox Value="{Binding Wert}" />
                                        <TextBlock Text="{Binding Beschreibung}" />
                                    </StackPanel>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type vm:EinstellungItemDouble}">
                                    <StackPanel Margin="4" Orientation="Horizontal">
                                        <ViewGeneral:DoubleBox Value="{Binding Wert}" />
                                        <TextBlock Text="{Binding Beschreibung}" />
                                    </StackPanel>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type vm:EinstellungItemString}">
                                    <StackPanel Margin="4" Orientation="Vertical">
                                        <TextBlock Text="{Binding Beschreibung}" />
                                        <TextBox
                                            MinWidth="300"
                                            Margin="20,0,0,0"
                                            Text="{Binding Wert}" />
                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.Resources>
                        </ListBox>
                    </Border>
                </TabItem>
                <TabItem x:Name="tbiAudioplayer">
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <Image
                                Height="18"
                                HorizontalAlignment="Right"
                                Source="/DSA MeisterGeister;component/Images/Icons/General/audio.png" />
                            <TextBlock
                                Margin="2,0,0,0"
                                VerticalAlignment="Center"
                                Style="{DynamicResource TextTitel}"
                                Text="AudioPlayer" />
                        </StackPanel>
                    </TabItem.Header>
                    <Border Style="{DynamicResource ControlContentBorder}">
                        <ListBox Background="{x:Null}">
                            <ListBox.Resources>
                                <DataTemplate DataType="{x:Type vm:EinstellungItemBoolean}">
                                    <StackPanel Margin="4" Orientation="Horizontal">
                                        <CheckBox
                                            Margin="2"
                                            Checked="CheckBoxEinstellungItem_CheckedChanged"
                                            IsChecked="{Binding Wert}"
                                            Tag="{Binding Name}"
                                            Unchecked="CheckBoxEinstellungItem_CheckedChanged" />
                                        <TextBlock Margin="4,0,0,0" Text="{Binding Beschreibung}" />
                                    </StackPanel>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type vm:EinstellungItemInteger}">
                                    <StackPanel Margin="4" Orientation="Horizontal">
                                        <ViewGeneral:IntBox Value="{Binding Wert}" />
                                        <TextBlock Text="{Binding Beschreibung}" />
                                    </StackPanel>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type vm:EinstellungItemDouble}">
                                    <StackPanel Margin="4" Orientation="Horizontal">
                                        <ViewGeneral:DoubleBox Value="{Binding Wert}" />
                                        <TextBlock Text="{Binding Beschreibung}" />
                                    </StackPanel>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type vm:EinstellungItemString}">
                                    <StackPanel Margin="4" Orientation="Vertical">
                                        <TextBlock Text="{Binding Beschreibung}" />
                                        <TextBox
                                            MinWidth="300"
                                            Margin="20,0,0,0"
                                            Text="{Binding Wert}" />
                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.Resources>
                            <StackPanel Margin="4" Orientation="Horizontal">
                                <CheckBox
                                    x:Name="_checkboxGleichSpielen"
                                    Margin="2"
                                    IsChecked="{Binding IsAudioDirektAbspielen, Mode=TwoWay}" />
                                <TextBlock
                                    Width="398"
                                    Margin="4,0,0,0"
                                    Text="Audio-Player: Beim Auswählen direkt abspielen"
                                    TextWrapping="WrapWithOverflow" />
                            </StackPanel>

                            <StackPanel Margin="4,10" Orientation="Horizontal">
                                <CheckBox
                                    x:Name="_checkboxSpieldauerBerechnen"
                                    Margin="2"
                                    IsChecked="{Binding IsAudioSpieldauerBerechnen, Mode=TwoWay}" />
                                <TextBlock
                                    Width="398"
                                    Margin="4,0,0,0"
                                    Text="Spieldauer der Titel und der Playlisten berechnen"
                                    TextWrapping="WrapWithOverflow" />
                            </StackPanel>

                            <StackPanel Margin="4,10" Orientation="Horizontal">
                                <CheckBox
                                    x:Name="_checkboxInAnderemPfadSuchen"
                                    Margin="2"
                                    IsChecked="{Binding IsInAnderemPfadSuchen, Mode=TwoWay}" />
                                <TextBlock
                                    Width="398"
                                    Margin="4,0,0,0"
                                    Text="Suchen nicht gefundener Dateien in allen Standard-Pfaden"
                                    TextWrapping="WrapWithOverflow" />
                            </StackPanel>

                            <StackPanel Margin="4,10" Orientation="Horizontal">
                                <CheckBox
                                    x:Name="_checkboxShowPlaylistFavorite"
                                    Margin="2"
                                    IsChecked="{Binding IsShowPlaylistFavorite, Mode=TwoWay}" />
                                <TextBlock
                                    Width="398"
                                    Margin="4,0,0,0"
                                    Text="Favoriten-Playlisten in separatem Fenster zeigen"
                                    TextWrapping="WrapWithOverflow" />
                            </StackPanel>

                            <StackPanel
                                Margin="20,0,0,0"
                                HorizontalAlignment="Left"
                                Orientation="Horizontal">
                                <Label
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Content="Audio-Player Crossfading" />
                                <Slider
                                    x:Name="_sldFading"
                                    Width="100"
                                    Height="23"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    IsSnapToTickEnabled="True"
                                    LargeChange="100"
                                    Maximum="1500"
                                    Minimum="0"
                                    SmallChange="100"
                                    TickFrequency="100"
                                    TickPlacement="BottomRight"
                                    ToolTip="6 Sekunden Fading"
                                    ValueChanged="_sldFading_ValueChanged"
                                    Value="600" />
                            </StackPanel>

                            <StackPanel
                                x:Name="spStdPfad"
                                Margin="20,0,0,0"
                                HorizontalAlignment="Left"
                                Orientation="Horizontal">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" MinHeight="60" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="130" />
                                        <ColumnDefinition Width="280" />
                                        <ColumnDefinition Width="200*" />
                                        <ColumnDefinition Width="30" />
                                    </Grid.ColumnDefinitions>

                                    <Label Content="Standard-Verzeichnis" />
                                    <ListBox
                                        Name="lbStandardPfade"
                                        Grid.Column="1"
                                        Grid.ColumnSpan="2"
                                        Margin="0,1"
                                        Background="Transparent" />
                                </Grid>
                            </StackPanel>
                        </ListBox>
                    </Border>
                </TabItem>

                <TabItem x:Name="tbiHUELampen">
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <Image
                                Height="18"
                                HorizontalAlignment="Right"
                                Source="/DSA MeisterGeister;component/Images/Icons/lampen_hue.png" />
                            <TextBlock
                                Margin="2,0,0,0"
                                VerticalAlignment="Center"
                                Style="{DynamicResource TextTitel}"
                                Text="HUE Lampen" />
                        </StackPanel>
                    </TabItem.Header>
                    <TabControl>
                        <TabItem Header="Konfiguration">
                            <Border Style="{DynamicResource ControlContentBorder}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="257*" />
                                        <ColumnDefinition Width="591*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="30" />
                                        <RowDefinition Height="30" />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Button
                                        Width="120"
                                        Margin="5,2,0,2"
                                        HorizontalAlignment="Left"
                                        Command="{Binding onBtnHUEGWsuchen}"
                                        Content="Gateway suchen..." />
                                    <Label
                                        Grid.Column="1"
                                        Width="10"
                                        HorizontalAlignment="Right"
                                        Content="{Binding HUEProgress, UpdateSourceTrigger=PropertyChanged}" />

                                    <ComboBox
                                        Grid.Column="1"
                                        Width="150"
                                        HorizontalAlignment="Left"
                                        DisplayMemberPath="IpAddress"
                                        IsEditable="False"
                                        IsEnabled="{Binding lstHUEGateways.Count, Converter={StaticResource IsEqualOrGreaterThanConverter1}, ConverterParameter=1}"
                                        ItemsSource="{Binding lstHUEGateways}"
                                        SelectedItem="{Binding HUEGWSelected}" />

                                    <Button
                                        Grid.Column="1"
                                        Width="100"
                                        Margin="175,2,0,2"
                                        HorizontalAlignment="Left"
                                        Command="{Binding onBtnActivateHUEGW}"
                                        Content="Aktivieren">
                                        <Button.Style>
                                            <Style TargetType="Button">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding HUEGWSelected}" Value="{x:Null}">
                                                        <Setter Property="IsEnabled" Value="False" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>

                                    <DataGrid
                                        Grid.Row="2"
                                        Grid.ColumnSpan="2"
                                        ViewGeneral:UIElementBehavior.ScrollViewer="{Binding ElementName=scrollViewer}"
                                        ItemsSource="{Binding lstHUELights, UpdateSourceTrigger=PropertyChanged}"
                                        RowHeight="33">
                                        <DataGrid.Columns>
                                            <DataGridTextColumn
                                                Width="55"
                                                Binding="{Binding Id}"
                                                Header="ID"
                                                IsReadOnly="True" />
                                            <DataGridTextColumn
                                                Width="150"
                                                Binding="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                Header="Name"
                                                IsReadOnly="True" />
                                            <DataGridTextColumn
                                                Width="100"
                                                Binding="{Binding ManufacturerName}"
                                                Header="ManufacturerName"
                                                IsReadOnly="True" />
                                            <DataGridTextColumn
                                                Width="150"
                                                Binding="{Binding Type}"
                                                Header="Type"
                                                IsReadOnly="True" />
                                        </DataGrid.Columns>
                                    </DataGrid>


                                    <!--<Grid >
                                        <StackPanel Orientation="Vertical" Margin="10,20,10,20">
                                            <TextBlock FontSize="25" Foreground="Blue">Philips Hue Lightbulb Control Center v.0.0.1</TextBlock>
                                            <Button Content="Init HUE" Click="Button_Click" Width="80" Height="24"/>
                                            <StackPanel Orientation="Horizontal">
                                                
                                                <ToggleButton x:Name="toggle_Power" Checked="toggle_Power_Checked" Unchecked="toggle_Power_Checked" >Light 1 Power Control</ToggleButton>
                                                <StackPanel Orientation="Vertical" Margin="15,0,0,0">
                                                    <TextBlock>Light 1 Brightness</TextBlock>
                                                    <Slider x:Name="slider_Brightness" Minimum="0" Maximum="255" Width="500" HorizontalAlignment="Left" ValueChanged="Slider_Brightness_ValueChanged" />
                                                </StackPanel>
                                            </StackPanel>
                                            <TextBlock>Light 1 Color</TextBlock>
                                            <color:ColorPicker x:Name="color_Picker" Width="500" Height="300" HorizontalAlignment="Left" BorderBrush="Black" MouseUp="color_Picker_MouseUp" />

                                            --><!--DataContextChanged="color_Picker_DataContextChanged"  SelectedColorChanged="Color_Picker_SelectedColorChanged"--><!--
                                        </StackPanel>

                                    </Grid>-->
                                </Grid>
                            </Border>
                        </TabItem>
                        <TabItem Header="Themes">
                            <Border Style="{DynamicResource ControlContentBorder}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="400" />
                                        <ColumnDefinition Width="1*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="30" />
                                        <RowDefinition Height="30*" />
                                        <RowDefinition Height="30" />
                                    </Grid.RowDefinitions>
                                    <!--<ListBox ItemsSource="{Binding lstHUEThemes, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding HUEThemeSelected, UpdateSourceTrigger=PropertyChanged}" Grid.ColumnSpan="2">
                                        <ListBox.Template>
                                            <ControlTemplate TargetType="ListBox">
                                                <WrapPanel MinHeight="25" ItemWidth="30">
                                                    <Label Content="{Binding Name}" />
                                                </WrapPanel>
                                            </ControlTemplate>
                                        </ListBox.Template>
                                    </ListBox>-->
                                    <Button
                                        Grid.Row="1"
                                        Width="110"
                                        Height="28"
                                        Margin="0,1"
                                        HorizontalAlignment="Left"
                                        Command="{Binding onbtnNeuesHUETheme}"
                                        Content="Neues Theme" />

                                    <ListBox
                                        Name="_listBoxThemes"
                                        Grid.Row="2"
                                        Margin="10,0,0,10"
                                        Background="Transparent"
                                        FontSize="14"
                                        ItemContainerStyle="{DynamicResource ListBoxItemStretch}"
                                        
                                        ItemsSource="{Binding lstHUEThemes, UpdateSourceTrigger=PropertyChanged}"
                                        SelectedItem="{Binding HUEThemeSelected, UpdateSourceTrigger=PropertyChanged}" >
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <Grid>
                                                    <Grid>
                                                        <StackPanel Orientation="Horizontal" >
                                                            <ViewGeneral:MultipleColorSlider Grid.Row="1" Grid.Column="3" Width="140" Height="24" Minimum="0" 
                                                                Maximum="{Binding KomplettDauer}" 
                                                                ColorWechsel="{Binding lstLightProcess.Count, UpdateSourceTrigger=PropertyChanged}"
                                                                StartColor="{Binding lstLightProcess[0].Color}"
                                                                FirstColor="{Binding lstLightProcess[1].Color}"
                                                                SecondColor="{Binding lstLightProcess[2].Color}"
                                                                ThirdColor="{Binding lstLightProcess[3].Color}"
                                                                FourthColor="{Binding lstLightProcess[4].Color}"
                                                                LowerValue="{Binding lstLightProcess[0].Dauer, Mode=TwoWay}"
                                                                Upper1Value="{Binding lstLightProcess[1].Dauer, Mode=TwoWay}"
                                                                Upper2Value="{Binding lstLightProcess[2].Dauer, Mode=TwoWay}"
                                                                Upper3Value="{Binding lstLightProcess[3].Dauer, Mode=TwoWay}"  >
                                                                <ViewGeneral:MultipleColorSlider.Style>
                                                                    <Style TargetType="ViewGeneral:MultipleColorSlider">
                                                                        <Style.Triggers>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding doLoop}" Value="False" />
                                                                                    <Condition Binding="{Binding lstLightProcess.Count}" Value="2" />
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="EndColor" Value="{Binding lstLightProcess[1].Color}" />
                                                                            </MultiDataTrigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding doLoop}" Value="False" />
                                                                                    <Condition Binding="{Binding lstLightProcess.Count}" Value="3" />
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="EndColor" Value="{Binding lstLightProcess[2].Color}" />
                                                                            </MultiDataTrigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding doLoop}" Value="False" />
                                                                                    <Condition Binding="{Binding lstLightProcess.Count}" Value="4" />
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="EndColor" Value="{Binding lstLightProcess[3].Color}" />
                                                                            </MultiDataTrigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding doLoop}" Value="False" />
                                                                                    <Condition Binding="{Binding lstLightProcess.Count}" Value="5" />
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="EndColor" Value="{Binding lstLightProcess[4].Color}" />
                                                                            </MultiDataTrigger>
                                                                            <MultiDataTrigger>
                                                                                <MultiDataTrigger.Conditions>
                                                                                    <Condition Binding="{Binding doLoop}" Value="False" />
                                                                                    <Condition Binding="{Binding lstLightProcess.Count}" Value="6" />
                                                                                </MultiDataTrigger.Conditions>
                                                                                <Setter Property="EndColor" Value="{Binding lstLightProcess[5].Color}" />
                                                                            </MultiDataTrigger>
                                                                            <DataTrigger Binding="{Binding lstLightProcess.Count}" Value="2">
                                                                                <Setter Property="EndColor" Value="{Binding lstLightProcess[1].Color}" />
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding lstLightProcess.Count}" Value="3">
                                                                                <Setter Property="EndColor" Value="{Binding lstLightProcess[2].Color}" />
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding lstLightProcess.Count}" Value="4">
                                                                                <Setter Property="EndColor" Value="{Binding lstLightProcess[3].Color}" />
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding lstLightProcess.Count}" Value="5">
                                                                                <Setter Property="EndColor" Value="{Binding lstLightProcess[4].Color}" />
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding lstLightProcess.Count}" Value="6">
                                                                                <Setter Property="EndColor" Value="{Binding lstLightProcess[5].Color}" />
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding doLoop}" Value="True">
                                                                                <Setter Property="EndColor" Value="{Binding lstLightProcess[0].Color}" />
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </ViewGeneral:MultipleColorSlider.Style>
                                                            </ViewGeneral:MultipleColorSlider>
                                                            <TextBox MinWidth="150" Margin="5,0" Text="{Binding Path=Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                        </StackPanel>
                                                    </Grid>
                                                </Grid>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>

                                    
                                    <Grid Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="1*"/>
                                            <ColumnDefinition Width="130"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="30" />
                                            <RowDefinition Height="1*"/>
                                        </Grid.RowDefinitions>
                                        <Button Grid.Row="0" Grid.Column="1" Width="27" Height="27" HorizontalAlignment="Left" VerticalAlignment="Top"
                                        Command="{Binding DataContext.onbtnAddHUEProcess, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                        CommandParameter="{Binding}" >
                                            <Style TargetType="Button">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding lstLightProcess.Count}" Value="5">
                                                        <Setter Property="IsEnabled" Value="False" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                            <Button.Template>
                                                <ControlTemplate>
                                                    <Image Source="/DSA MeisterGeister;component/Images/Icons/General/add.png" />
                                                </ControlTemplate>
                                            </Button.Template>
                                        </Button>
                                        <Button Grid.Row="0" Grid.Column="1" Width="27" Height="27" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="30,0,0,0"
                                                Command="{Binding DataContext.onbtnRemoveHUEProcess, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                                CommandParameter="{Binding}" >
                                                    <Style TargetType="Button">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding lstLightProcess.Count }" Value="1">
                                                                <Setter Property="IsEnabled" Value="False" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                    <Button.Template>
                                                        <ControlTemplate>
                                                            <Image Source="/DSA MeisterGeister;component/Images/Icons/General/entf_02.png" />
                                                        </ControlTemplate>
                                                    </Button.Template>
                                                </Button>

                                        <StackPanel Grid.Row="1" Grid.Column="1" VerticalAlignment="Top" >
                                            <CheckBox Content="Wiederholen" IsChecked="{Binding HUEThemeSelected.doLoop}"  />
                                            <CheckBox Content="Stobe" IsChecked="{Binding HUEThemeSelected.doStrobe}"  />
                                            <ViewGeneral:IntBox MinValue="500" MaxValue="30000" 
                                                Value="{Binding HUEThemeSelected.KomplettDauer}" ShowButtons="True" IncValue="100" DecValue="100" />
                                        </StackPanel>
                                        <Grid VerticalAlignment="Top" Grid.Row="1">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="28" />
                                                <RowDefinition Height="*" />
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="157" />
                                                <ColumnDefinition Width="85*" />
                                            </Grid.ColumnDefinitions>

                                            <StackPanel Orientation="Horizontal" Grid.ColumnSpan="2">
                                                <Label Content="Theme Name" />
                                                <TextBox MinWidth="150"
                                                        Text="{Binding HUEThemeSelected.Name, UpdateSourceTrigger=PropertyChanged}" />
                                                <ComboBox Grid.Row="0" Grid.Column="3" Grid.ColumnSpan="1" Width="Auto" Height="25" Margin="20,0,0,0"
                                                VerticalAlignment="Top" DisplayMemberPath="Name"
                                                MinWidth="10"
                                                ItemsSource="{Binding lstHUELights}"
                                                SelectedValue="{Binding HUEThemeSelected.AddLightToTheme}" />
                                            </StackPanel>
                                            <DataGrid Grid.Row="1" Grid.RowSpan="2" Grid.ColumnSpan="2"
                                                ItemsSource="{Binding HUEThemeSelected.lstLightProcess, UpdateSourceTrigger=PropertyChanged}"
                                                SelectedItem="{Binding HUEThemeSelected.LightProcessSelected}"
                                                VerticalScrollBarVisibility="Auto">
                                                <DataGrid.Columns>
                                                    <DataGridTextColumn Width="55" Binding="{Binding Path=Phase}" Header="Phase" IsReadOnly="True" />
                                                    <DataGridTemplateColumn Width="140">
                                                        <DataGridTemplateColumn.CellTemplate>
                                                            <DataTemplate>
                                                                <Button Height="26" 
                                                                            Command="{Binding DataContext.onBtnSelectHUEColor, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                                                            CommandParameter="{Binding ElementName=EinstellungWnd}">
                                                                    <Button.Content>
                                                                        <Border Padding="0" Height="22" Margin="-2" CornerRadius="3" Width="50" Background="{Binding Path=Color, Converter={StaticResource ColorToSolidColorBrushConverter1}}" >
                                                                            <Label Content="Farbe" Padding="0" HorizontalAlignment="Center" />
                                                                        </Border>
                                                                    </Button.Content>
                                                                </Button>
                                                            </DataTemplate>                                                            
                                                        </DataGridTemplateColumn.CellTemplate>                                                        
                                                    </DataGridTemplateColumn>

                                                    <DataGridTextColumn
                                                        Width="55"
                                                        Binding="{Binding Path=Color}"
                                                        Header="Color"
                                                        IsReadOnly="True" />            
                                                    <DataGridTextColumn Width="100" Binding="{Binding Path=Dauer, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Dauer [ms]" />
                                                </DataGrid.Columns>
                                            </DataGrid>
                                        </Grid>
                                    </Grid>
                                            
                                    <Button
                                        Grid.Row="3"
                                        Width="100"
                                        HorizontalAlignment="Left"
                                        Command="{Binding onBtnDoTheme}"
                                        CommandParameter="{Binding HUEThemeSelected}"
                                        Content="Test Theme">
                                        <Button.Style>
                                            <Style TargetType="Button">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding HUEThemeSelected}" Value="{x:Null}">
                                                        <Setter Property="Visibility" Value="Hidden" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                </Grid>
                            </Border>
                        </TabItem>
                    </TabControl>
                </TabItem>

                <TabItem x:Name="tbiProben">
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <Image
                                Height="18"
                                HorizontalAlignment="Right"
                                Source="/DSA MeisterGeister;component/Images/Icons/Wuerfel/w20.png" />
                            <TextBlock
                                Margin="2,0,0,0"
                                VerticalAlignment="Center"
                                Style="{DynamicResource TextTitel}"
                                Text="Proben" />
                        </StackPanel>
                    </TabItem.Header>
                    <Border Style="{DynamicResource ControlContentBorder}">
                        <ListBox Background="{x:Null}" ItemsSource="{Binding ProbenListe}">
                            <ListBox.Resources>
                                <DataTemplate DataType="{x:Type vm:EinstellungItemBoolean}">
                                    <StackPanel Margin="4" Orientation="Horizontal">
                                        <CheckBox
                                            Margin="2"
                                            Checked="CheckBoxEinstellungItem_CheckedChanged"
                                            IsChecked="{Binding Wert}"
                                            Tag="{Binding Name}"
                                            Unchecked="CheckBoxEinstellungItem_CheckedChanged" />
                                        <TextBlock Margin="4,0,0,0" Text="{Binding Beschreibung}" />
                                    </StackPanel>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type vm:EinstellungItemInteger}">
                                    <StackPanel Margin="4" Orientation="Horizontal">
                                        <ViewGeneral:IntBox Value="{Binding Wert}" />
                                        <TextBlock Text="{Binding Beschreibung}" />
                                    </StackPanel>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type vm:EinstellungItemDouble}">
                                    <StackPanel Margin="4" Orientation="Horizontal">
                                        <ViewGeneral:DoubleBox Value="{Binding Wert}" />
                                        <TextBlock Text="{Binding Beschreibung}" />
                                    </StackPanel>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type vm:EinstellungItemString}">
                                    <StackPanel Margin="4" Orientation="Vertical">
                                        <TextBlock Text="{Binding Beschreibung}" />
                                        <TextBox
                                            MinWidth="300"
                                            Margin="20,0,0,0"
                                            Text="{Binding Wert}" />
                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.Resources>
                        </ListBox>
                    </Border>
                </TabItem>
                <TabItem x:Name="tbiAlmanach">
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <Image
                                Height="18"
                                HorizontalAlignment="Right"
                                Source="/DSA MeisterGeister;component/Images/Icons/hesinde.png" />
                            <TextBlock
                                Margin="2,0,0,0"
                                VerticalAlignment="Center"
                                Style="{DynamicResource TextTitel}"
                                Text="Almanach (PDF)" />
                        </StackPanel>
                    </TabItem.Header>
                    <Border Style="{DynamicResource ControlContentBorder}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <DockPanel Grid.Row="0">
                                <TextBlock
                                    Margin="4"
                                    FontStyle="Italic"
                                    Text="Hier werden die PDF-Funktionen von MeisterGeister konfiguriert." />
                                <Image
                                    Height="45"
                                    HorizontalAlignment="Right"
                                    Source="/DSA MeisterGeister;component/Images/Icons/hesinde.png" />
                            </DockPanel>
                            <StackPanel Grid.Row="1" Orientation="Horizontal">
                                <TextBlock Margin="4" Text="PDF-Reader aus Liste auswählen oder unten selbst definieren." />
                                <ComboBox
                                    Width="150"
                                    Margin="10,0"
                                    ItemsSource="{Binding PDFReaders}"
                                    SelectedItem="{Binding SelectedPDFReader}" />
                            </StackPanel>
                            <ListBox
                                Grid.Row="2"
                                Background="{x:Null}"
                                ItemsSource="{Binding AlmanachListe}">
                                <ListBox.Resources>
                                    <DataTemplate DataType="{x:Type vm:EinstellungItemBoolean}">
                                        <StackPanel Orientation="Horizontal">
                                            <CheckBox Margin="2" IsChecked="{Binding Wert}" />
                                            <TextBlock Margin="4,0,0,0" Text="{Binding Beschreibung}" />
                                        </StackPanel>
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type vm:EinstellungItemInteger}">
                                        <StackPanel Orientation="Horizontal">
                                            <ViewGeneral:IntBox Value="{Binding Wert}" />
                                            <TextBlock Text="{Binding Beschreibung}" />
                                        </StackPanel>
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type vm:EinstellungItemDouble}">
                                        <StackPanel Orientation="Horizontal">
                                            <ViewGeneral:DoubleBox Value="{Binding Wert}" />
                                            <TextBlock Text="{Binding Beschreibung}" />
                                        </StackPanel>
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type vm:EinstellungItemString}">
                                        <StackPanel Margin="4" Orientation="Vertical">
                                            <TextBlock Text="{Binding Beschreibung}" />
                                            <TextBox
                                                MinWidth="300"
                                                Margin="20,0,0,0"
                                                Text="{Binding Wert}" />
                                        </StackPanel>
                                    </DataTemplate>
                                </ListBox.Resources>
                            </ListBox>
                            <ListBox
                                Grid.Row="3"
                                Margin="0,20,0,0"
                                Background="{x:Null}"
                                ItemContainerStyle="{DynamicResource ListBoxItemStretch}"
                                ItemsSource="{Binding LiteraturListe}">
                                <ListBox.Resources>
                                    <DataTemplate DataType="{x:Type vm:LiteraturItem}">
                                        <DockPanel
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Center"
                                            LastChildFill="False">
                                            <Button
                                                Height="20"
                                                Command="{Binding OnOpenUrlPdf}"
                                                Cursor="Hand">
                                                <Button.ToolTip>
                                                    <StackPanel>
                                                        <TextBlock Text="PDF online beziehen..." />
                                                        <TextBlock Text="{Binding UrlPdf}" />
                                                    </StackPanel>
                                                </Button.ToolTip>
                                                <Button.Template>
                                                    <ControlTemplate>
                                                        <Image Source="/DSA MeisterGeister;component/Images/Icons/Extensions/pdf.png" />
                                                    </ControlTemplate>
                                                </Button.Template>
                                                <Button.Style>
                                                    <Style>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding UrlPdf}" Value="{x:Null}">
                                                                <Setter Property="Image.Visibility" Value="Hidden" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>
                                            <Button
                                                Height="18"
                                                Command="{Binding OnOpenUrlPrint}"
                                                Cursor="Hand">
                                                <Button.ToolTip>
                                                    <StackPanel>
                                                        <TextBlock Text="Print-Ausgabe online beziehen..." />
                                                        <TextBlock Text="{Binding UrlPrint}" />
                                                    </StackPanel>
                                                </Button.ToolTip>
                                                <Button.Template>
                                                    <ControlTemplate>
                                                        <Image Opacity="0.9" Source="/DSA MeisterGeister;component/Images/Logos/Ulisses_Icon.png" />
                                                    </ControlTemplate>
                                                </Button.Template>
                                                <Button.Style>
                                                    <Style>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding UrlPrint}" Value="{x:Null}">
                                                                <Setter Property="Image.Visibility" Value="Hidden" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>
                                            <Image Height="18">
                                                <Image.Style>
                                                    <Style>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding IsOriginal, Mode=OneWay}" Value="{x:Null}">
                                                                <Setter Property="Image.Visibility" Value="Hidden" />
                                                                <Setter Property="Image.Source" Value="/DSA MeisterGeister;component/Images/Icons/General/ok.png" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding IsOriginal, Mode=OneWay}" Value="false">
                                                                <Setter Property="Image.Visibility" Value="Visible" />
                                                                <Setter Property="Image.Source" Value="/DSA MeisterGeister;component/Images/Icons/General/info_rot.png" />
                                                                <Setter Property="Image.ToolTip" Value="Kein Original" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding IsOriginal, Mode=OneWay}" Value="true">
                                                                <Setter Property="Image.Visibility" Value="Visible" />
                                                                <Setter Property="Image.Source" Value="/DSA MeisterGeister;component/Images/Icons/General/ok.png" />
                                                                <Setter Property="Image.ToolTip" Value="Original" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                            <TextBlock
                                                MaxWidth="350"
                                                Margin="4,0,0,0"
                                                VerticalAlignment="Center"
                                                FontWeight="Bold"
                                                Text="{Binding Name}"
                                                TextWrapping="Wrap"
                                                ToolTip="Doppelklick öffnet das PDF">
                                                <TextBlock.InputBindings>
                                                    <MouseBinding Command="{Binding OnOpenPdf}" MouseAction="LeftDoubleClick" />
                                                </TextBlock.InputBindings>
                                            </TextBlock>
                                            <TextBlock
                                                Margin="14,0,0,0"
                                                VerticalAlignment="Center"
                                                FontStyle="Italic"
                                                Text="{Binding Abkürzung, StringFormat=(\{0\})}"
                                                ToolTip="Doppelklick öffnet das PDF">
                                                <TextBlock.InputBindings>
                                                    <MouseBinding Command="{Binding OnOpenPdf}" MouseAction="LeftDoubleClick" />
                                                </TextBlock.InputBindings>
                                            </TextBlock>
                                            <Button
                                                Width="20"
                                                Height="21"
                                                Command="{Binding OnOpenFileDialog}"
                                                Content="..."
                                                DockPanel.Dock="Right"
                                                ToolTip="PDF auswählen..." />
                                            <TextBox
                                                Width="360"
                                                Height="23"
                                                DockPanel.Dock="Right"
                                                Text="{Binding Pfad}"
                                                ToolTip="Pfad zur PDF-Datei" />
                                            <ViewGeneral:IntBox
                                                Width="25"
                                                Margin="5,0"
                                                DockPanel.Dock="Right"
                                                ToolTip="Seitenoffset"
                                                Value="{Binding Seitenoffset}" />
                                        </DockPanel>
                                    </DataTemplate>
                                </ListBox.Resources>
                            </ListBox>
                        </Grid>
                    </Border>
                </TabItem>

                <TabItem Visibility="{Binding Source={x:Static mg:Global.INTERN_Visibility}}">
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <Image
                                Height="18"
                                HorizontalAlignment="Left"
                                Source="/DSA MeisterGeister;component/Images/Icons/General/web.png" />
                            <TextBlock
                                Margin="2,0,0,0"
                                VerticalAlignment="Center"
                                Style="{DynamicResource TextTitel}"
                                Text="Netzwerk" />
                        </StackPanel>
                    </TabItem.Header>
                </TabItem>
            </TabControl>
        </Grid>
    </Grid>
</Window>
