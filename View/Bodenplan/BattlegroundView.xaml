<UserControl x:Class="MeisterGeister.View.Bodenplan.BattlegroundView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:MeisterGeister.View.Bodenplan"
             xmlns:xctk="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
             xmlns:xctkzb="clr-namespace:Xceed.Wpf.Toolkit.Zoombox;assembly=Xceed.Wpf.Toolkit"
             xmlns:model="clr-namespace:MeisterGeister.ViewModel.Bodenplan.Logic"
             xmlns:kampflogic="clr-namespace:MeisterGeister.ViewModel.Kampf.Logic"
             xmlns:ViewGeneral="clr-namespace:MeisterGeister.View.General"
             xmlns:localsolution="clr-namespace:MeisterGeister"
             xmlns:dbmodel="clr-namespace:MeisterGeister.Model"
             xmlns:wpfxc="clr-namespace:WPFExtensions.Controls;assembly=WPFExtensions"
             xmlns:wpfxb="clr-namespace:WPFExtensions.AttachedBehaviours;assembly=WPFExtensions"
             mc:Ignorable="d" 
             x:Name="view"
             d:DesignHeight="1100" d:DesignWidth="1280" KeyDown="UserControl_KeyDown" KeyUp="UserControl_KeyUp" Background="{StaticResource Background1}" Unloaded="view_Unloaded">
    <UserControl.Resources>
        <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>
    </UserControl.Resources>
    <Grid>
        <Grid.Resources>
            <ViewGeneral:ColorToSolidBrushValueConverter x:Key="ColorToBrushConverter" />
            <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
            <ViewGeneral:ImagePathConverter x:Key="ImagePathConverter" />
            <ViewGeneral:EnumItemsSource x:Key="ZeichenValues" Type="{x:Type model:ZeichenModus}"/>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Expander Grid.Row="0" IsExpanded="True">
            <Expander.Header>
                <TextBlock Text="Oben" Style="{DynamicResource TextTitel}" />
            </Expander.Header>
            <DockPanel Margin="-1,12,-1,0" Name="dockPanel1" Background="#0F000000" Height="113" VerticalAlignment="Top">
                <Grid Name="grid2" Width="1278" HorizontalAlignment="Left" Height="112" VerticalAlignment="Bottom" Margin="0,0,0,1">
                    <!--<Slider x:Name="uiScaleSlider" Value="1" Minimum="0.1" Maximum="4" Height="34" Width="200" Margin="443,36,613,43" />-->
                    <Border BorderBrush="Silver" BorderThickness="1" Height="100" HorizontalAlignment="Left" Margin="6,7,0,0" Name="border1" VerticalAlignment="Top" Width="110">
                        <Grid Margin="0,0,-1,0">
                            <xctk:CheckListBox Height="73" Margin="0,25,0,0" Name="checkListBox1" VerticalAlignment="Top" SelectedValue="{Binding VisibleZLevels}" ItemsSource="{Binding PossibleZLevels}" ToolTip="Wähle aus welche Z Level sichtbar sein sollen." />
                            <CheckBox Content="Alle Z Anzeigen" IsChecked="{Binding IgnorZLevel}" Height="16" HorizontalAlignment="Left" Margin="3,5,0,0" Name="checkBox2" VerticalAlignment="Top" Width="93" ToolTip="Ignoriert die Z Level Auswahl und zeigt alle Elemente an." />
                        </Grid>
                    </Border>
                    <CheckBox IsChecked="{Binding ShowCreatureName}" Content="Namen Anzeigen" Height="16" HorizontalAlignment="Left" Margin="133,17,0,0" Name="checkBox4" VerticalAlignment="Top" Width="108" />
                    <CheckBox IsChecked="{Binding Freizeichnen}" Content="Freizeichnen" Height="16" HorizontalAlignment="Left" Margin="683,7,0,0" x:Name="checkBox4_Copy" VerticalAlignment="Top" />
                    <CheckBox Content="RechteckRaster" Height="16" HorizontalAlignment="Left" Margin="683,27,0,0" x:Name="checkBox5_Grid" VerticalAlignment="Top" IsChecked="{Binding RechteckGrid}" />
                    <xctk:ColorPicker SelectedColor="{Binding GridColor}" VerticalAlignment="Top" Width="22" Height="22" ShowDropDownButton="False" ToolTip="Rasterfarbe" Margin="683,48,573,0"/>
                    <Border BorderBrush="Silver" BorderThickness="1" Height="100" HorizontalAlignment="Left" Margin="1048,7,0,0" x:Name="border1_Copy" VerticalAlignment="Top" Width="220">
                        <Grid Margin="0,0,9,0">
                            <Button Content="Speichern" Width="75" Margin="10,35,0,0" Height="25" VerticalAlignment="Top" Click="Button_SaveXML_Click" HorizontalAlignment="Left"/>
                            <Button Content="Laden" Width="75" Margin="10,5,0,0" Height="25" VerticalAlignment="Top" Click="Button_LoadXML_Click" HorizontalAlignment="Left"/>
                            <CheckBox IsChecked="{Binding LoadWithoutPictures}" Content="Laden ohne Bilder" Height="16" VerticalAlignment="Top" Width="118" Margin="91,11,0,0" HorizontalAlignment="Left" FontSize="10"/>
                            <CheckBox IsChecked="{Binding SaveWithoutPictures}" Content="Speichern ohne Bilder" Height="18" VerticalAlignment="Top" Margin="90,39,1,0" FontSize="10"/>
                            <Button Content="Reset" Width="75" Margin="10,0,124,5" Height="25" VerticalAlignment="Bottom" Click="Button_Reset_Click"/>
                        </Grid>
                    </Border>
                    <!-- Kontroll hidden, cause of no future development, but maybe later -->
                    <xctk:CheckListBox Visibility="Hidden" Height="100" HorizontalAlignment="Left" x:Name="checkListBox_paintedObjects" VerticalAlignment="Top" Width="110" ItemsSource="{Binding BattlegroundObjects}" DisplayMemberPath="ObjectName" SelectedValue="{Binding SelectedObjectsFromListBox}" SelectedItemsOverride="{Binding SelectedListBoxBattlegroundObjects, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="text" Margin="1136,7,0,0" />
                    <!-- Hidden kontroll end  -->
                    <Border Margin="791,7,0,5" BorderBrush="Silver" BorderThickness="1" HorizontalAlignment="Left" Width="252">
                        <Grid>
                            <Label Content="Tool zum plazieren von Helden und Gegnern"  Margin="0,0,0,69"></Label>
                            <Button Content="Stick Helden" Margin="10,72,160,0" Height="22" VerticalAlignment="Top" Click="ButtonStickHeroes_Click"/>
                            <TextBox Height="26" TextAlignment="Center" TextWrapping="Wrap" Text="{Binding CurrentlySelectedCreature}" VerticalAlignment="Top" Margin="10,34,10,0" IsEnabled="False" FontSize="16" FontWeight="Bold" FontFamily="Comic Sans MS" RenderTransformOrigin="0.5,0.5"/>
                            <Button Content="Stick Kreaturen" Margin="151,72,10,0" Height="22" VerticalAlignment="Top" Click="ButtonSticCreatues_Click"/>
                        </Grid>
                    </Border>
                    <CheckBox Content="Sichtbereiche" IsChecked="{Binding ShowSightArea}" Height="16" HorizontalAlignment="Left" x:Name="checkBoxSichtLine" VerticalAlignment="Top" Width="108" ToolTip="Ermöglicht das Ein-/Ausblenden der Sichtbereiche von Heldne und Gegnern" Margin="133,34,0,0" />
                    <Slider Height="25" VerticalAlignment="Top" Margin="133,56,1037,0" Minimum="120" Maximum="1200" Value="{Binding SightAreaLenght}"/>
                </Grid>

            </DockPanel>
        </Expander>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Expander Grid.Column="0" IsExpanded="True" ExpandDirection="Right" HorizontalAlignment="Left">
                <Expander.Content>
                    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" VerticalAlignment="Top" >
                        <StackPanel Orientation="Horizontal">
                            <Grid Name="grid1" Width="200" ClipToBounds="True" IsManipulationEnabled="False" Margin="12,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="34" />
                                    <RowDefinition Height="316" />
                                    <RowDefinition Height="87" />
                                    <RowDefinition Height="89" />
                                    <RowDefinition Height="378*" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="24*" />
                                    <ColumnDefinition Width="160" />
                                    <ColumnDefinition Width="24*" />
                                </Grid.ColumnDefinitions>
                                <local:SliderWithDisplayTextBox Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left" x:Name="sliderWithDisplayTextBox_StrokeThickness" SliderValue="{Binding StrokeThickness, Mode=TwoWay}" TickFrequencyValue="1" SliderLabelTextValue="Linien Stärke" SliderMinValue="1" SliderMaxValue="30" SliderMinTextValue="1" SliderMaxTextValue="30" Margin="0,121,0,0" Width="160" Height="58" VerticalAlignment="Top" />
                                <local:SliderWithDisplayTextBox Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left" Margin="0,185,0,0" x:Name="sliderWithDisplayTextBox_Opacity" SliderValue="{Binding Opacity, Mode=TwoWay}" VerticalAlignment="Top" SliderMinValue="0.1" SliderMaxValue="1" TickFrequencyValue="0.1" SliderLabelTextValue="Transparenz" SliderMinTextValue="10%" SliderMaxTextValue="100%" Width="160" Height="58" />
                                <local:SliderWithDisplayTextBox Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left" Margin="0,249,0,0" x:Name="sliderWithDisplayTextBox_ObjectSize" SliderValue="{Binding ObjectSize, Mode=TwoWay}" Height="57" VerticalAlignment="Top" SliderMinValue="0.3" SliderMaxValue="3" SliderLabelTextValue="Objektgröße" SliderMinTextValue="0.3x" SliderMaxTextValue="3x" TickFrequencyValue="0.1" Width="160" />
                                
                                <ToggleButton Grid.Column="1" Grid.Row="3" IsChecked="{Binding CreateLine, Mode=OneWay}" Content="[1] Line" Name="PathLineButton" Height="25" HorizontalAlignment="Left" Width="77" VerticalAlignment="Top" />
                                <ToggleButton Grid.Column="1" Grid.Row="3" IsChecked="{Binding CreateFilledLine, Mode=OneWay}" Content="[2] Fläche" Name="FilledPathLineButton" Height="25" HorizontalAlignment="Right" Width="77" VerticalAlignment="Top" />

                                <ScrollViewer x:Name="MyScrollViewer" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Grid.Row="4" Grid.Column="1" Height="379" VerticalAlignment="Top" Grid.ColumnSpan="2" Margin="0,0,10,0">
                                    <WrapPanel Grid.Row="4" Grid.Column="1" Name="PictureButtonWrapPanel" Width="165" Margin="0,0,1,0"/>
                                </ScrollViewer>
                                <Button Content="Ebene +" Grid.Column="1" Grid.Row="3" Height="23" HorizontalAlignment="Left" Margin="0,31,0,0" Name="ButtonEbeneHigher" VerticalAlignment="Top" Width="77" Click="ButtonEbeneHigher_Click" />
                                <Button Content="Ebene -" Grid.Column="1" Grid.Row="3" Height="23" HorizontalAlignment="Left" Margin="83,31,0,0" Name="ButtonEbeneLower" VerticalAlignment="Top" Width="77" Click="ButtonEbeneLower_Click" />
                                <local:SliderWithDisplayTextBox Grid.Column="1" Grid.Row="2" HorizontalAlignment="Left" Margin="0,1,0,0" x:Name="sliderWithDisplayTextBox_ZLevel" SliderValue="{Binding ZLevel, Mode=TwoWay}" VerticalAlignment="Top" SliderMinValue="0" SliderMaxValue="20" SliderLabelTextValue="Z-Level" SliderMinTextValue="0" SliderMaxTextValue="20" TickFrequencyValue="1" Width="160" Height="58" />
                                <CheckBox Content="Z-Level Anzeigen" IsChecked="{Binding ShowZ}" Grid.Column="1" Grid.Row="2" Height="18" HorizontalAlignment="Left" Margin="25,65,0,0" Name="checkBox1" VerticalAlignment="Top" Width="113" />
                                <CheckBox Content="Editor Modus" IsChecked="{Binding IsEditorModeEnabled}" Height="20" HorizontalAlignment="Left" Margin="25,14,0,0" Name="checkBox3" VerticalAlignment="Top" Width="113" FontSize="14" FontStyle="Normal" FontWeight="SemiBold" ToolTip="Wenn deaktiviert, können nur noch Helden und Monster bewegt werden" Checked="checkBox3_Checked" Grid.Column="1" />
                                <Button Content="Ebene max" Grid.Column="1" Grid.Row="3" Height="23" HorizontalAlignment="Left" Margin="0,59,0,0" x:Name="ButtonEbeneHigherMax" VerticalAlignment="Top" Width="77" Click="ButtonEbeneHigherMax_Click" />
                                <Button Content="Ebene min" Grid.Column="1" Grid.Row="3" Height="23" HorizontalAlignment="Left" Margin="82,59,0,0" x:Name="ButtonEbeneLowerMin" VerticalAlignment="Top" Width="77" Click="ButtonEbeneLowerMin_Click" />
                                <local:SliderWithDisplayTextBox Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left" x:Name="sliderWithDisplayTextBox_AlphaChannel" SliderValue="{Binding SelectedFillColorAlpha, Mode=TwoWay}" TickFrequencyValue="0.1" SliderLabelTextValue="Alpha Kanal" SliderMinValue="0" SliderMaxValue="1" SliderMinTextValue="0" SliderMaxTextValue="1" Margin="0,63,0,0" Width="160" Height="58" VerticalAlignment="Top" />
                            </Grid>
                            <StackPanel Orientation="Vertical">
                                <!-- Zeichenmodi -->
                                <ListBox ItemsSource="{StaticResource ZeichenValues}" SelectedValue="{Binding ZeichenModus}">
                                    <ListBox.Resources>
                                        <ViewGeneral:DictionaryValueConverter x:Key="toolImages">
                                            <ViewGeneral:DictionaryValueConverter.Values>
                                                <BitmapImage x:Key="Auswahl" UriSource="/DSA MeisterGeister;component/Images/Icons/Zeichnen/auswahlpfeil.png" />
                                                <BitmapImage x:Key="Linie" UriSource="/DSA MeisterGeister;component/Images/Icons/Zeichnen/stift.png" />
                                                <BitmapImage x:Key="Fläche" UriSource="/DSA MeisterGeister;component/Images/Icons/Zeichnen/polygon.png" />
                                                <BitmapImage x:Key="Bild" UriSource="/DSA MeisterGeister;component/Images/Icons/Zeichnen/bild.png" />
                                                <BitmapImage x:Key="Gegner" UriSource="/DSA MeisterGeister;component/Images/Icons/Zeichnen/orc.png" />
                                                <BitmapImage x:Key="None" UriSource="/DSA MeisterGeister;component/Images/Icons/General/fragezeichen.png" />
                                            </ViewGeneral:DictionaryValueConverter.Values>
                                        </ViewGeneral:DictionaryValueConverter>
                                    </ListBox.Resources>
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <Image Height="30" Width="30" ToolTip="{Binding FallbackValue=None}" Source="{Binding Converter={StaticResource toolImages}}"></Image>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                                <StackPanel Grid.Column="1" Grid.Row="1" Orientation="Horizontal">
                                    <Grid Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left">
                                        <xctk:ColorPicker SelectedColor="{Binding SelectedColor}" Name="colorPicker1" VerticalAlignment="Top" Width="22" Height="22" ShowDropDownButton="False" ToolTip="Linienfarbe"/>
                                        <Polygon Fill="White" IsHitTestVisible="False" Points="1,19.5 1,1 20.5,1" />
                                        <Polygon Fill="White" IsHitTestVisible="False" Points="2.5,21 22,21 22,2.5" />
                                    </Grid>
                                    <xctk:ColorPicker HorizontalAlignment="Left" Name="colorPicker2" SelectedColor="{Binding SelectedFillColor}" VerticalAlignment="Top" Width="22" Height="22" ShowDropDownButton="False" ToolTip="Füllfarbe"/>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                    </ScrollViewer>
                </Expander.Content>
            </Expander>
            <!--<xctkzb:Zoombox Grid.Column="1" Background="#FF367536" IsUsingScrollBars="True" ZoomOn="View" RelativeZoomModifiers="SHIFT">-->
            <!-- ZOOM KONTROLL & Listbox with Templates for Creatures, Lines and Pictures -->
            <wpfxc:ZoomControl Grid.Column="1" x:Name="ArenaScrollViewer" Background="#FF367536" 
                           MaxZoom="3" MinZoom="0.08" MaxZoomDelta="3" ZoomDeltaMultiplier="50"
                           Mode="Original" TranslateX="0" TranslateY="0"
                           LimitToContent="True" WheelZoomsAlone="True" PanWithoutModifier="True"
                           ModifierKeyPan="Shift" ModifierKeyZoom="Control" ModifierKeyZoomBox="Alt"  VerticalAlignment="Bottom">

                <Grid Height="10000" Width="10000">
                    <ListBox Name="ObjektGrid" ItemsSource="{Binding ObjektListe.View}" SelectedItem="{Binding SelectedObject, Mode=TwoWay}" 
                             Background="Transparent" Height="10000" Width="10000" 
                             IsEnabled="{Binding IsEditorModeEnabled}" IsHitTestVisible="{Binding IsEditorModeEnabled}" 
                             PreviewMouseRightButtonDown="ArenaGrid_PreviewRightMouseButtonDown"  MouseRightButtonDown="ArenaGrid_MouseRightButtonDown" 
                             MouseLeftButtonDown="ArenaGrid_MouseLeftButtonDown" MouseLeftButtonUp="ArenaGrid_MouseLeftButtonUp" 
                             MouseMove="ArenaGrid_MouseMove" PreviewMouseLeftButtonUp="ArenaGrid_PreviewMouseLeftButtonUp" PreviewMouseLeftButtonDown="ArenaGrid_PreviewMouseLeftButtonDown" 
                             SelectionChanged="ArenaGrid_SelectionChanged" SelectionMode="Single">
                        <ListBox.Resources>
                            <!-- Datatemplate PATHLINE -->
                            <DataTemplate DataType="{x:Type model:PathLine}">
                                <Thumb DragDelta="Thumb_Drag" IsEnabled="{Binding IsSelected,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}">
                                    <Thumb.Template>
                                        <ControlTemplate TargetType="Thumb">
                                            <Canvas Visibility="{Binding IsVisible, Converter={StaticResource BoolToVisibilityConverter}}" IsHitTestVisible="{Binding DataContext.IsEditorModeEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}">
                                                <Path Stroke="{Binding ObjectColor}" StrokeThickness="{Binding StrokeThickness}" Data="{Binding PathGeometryData}" x:Name="PathLine" Opacity="{Binding Opacity}" >

                                                </Path>
                                                <TextBlock Canvas.Top="{Binding ZDisplayY}" Canvas.Left="{Binding ZDisplayX}" Width="60" TextAlignment="Center" Text="{Binding ZLevel}" FontWeight="Bold" FontSize="10" 
                                           IsHitTestVisible="False" 
                                           Visibility="{Binding DataContext.ShowZ, 
                                                                    RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl},
                                                                    Converter={StaticResource BoolToVisibilityConverter}}"/>
                                            </Canvas>
                                            <ControlTemplate.Triggers>
                                                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                                    <Setter Property="Effect" TargetName="PathLine">
                                                        <Setter.Value>
                                                            <DropShadowEffect Color="Pink" ShadowDepth="10" BlurRadius="25" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type model:FilledPathLine}">
                                <Thumb DragDelta="Thumb_Drag" 
                           IsEnabled="{Binding IsSelected,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}">
                                    <Thumb.Template>
                                        <ControlTemplate TargetType="Thumb">
                                            <Canvas Visibility="{Binding IsVisible, Converter={StaticResource BoolToVisibilityConverter}}" IsHitTestVisible="{Binding DataContext.IsEditorModeEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}">
                                                <Path Stroke="{Binding ObjectColor}" StrokeThickness="{Binding StrokeThickness}" Data="{Binding FilledPathGeometryData}" x:Name="FilledPathLine" Opacity="{Binding Opacity}">
                                                    <Path.Fill>
                                                        <SolidColorBrush Color="{Binding FillColor}" />
                                                    </Path.Fill>
                                                </Path>
                                                <TextBlock Canvas.Top="{Binding ZDisplayY}" Canvas.Left="{Binding ZDisplayX}" Width="60" TextAlignment="Center" Text="{Binding ZLevel}" FontWeight="Bold" IsHitTestVisible="False" FontSize="10" 
                                           Visibility="{Binding DataContext.ShowZ, 
                                                                    RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl},
                                                                    Converter={StaticResource BoolToVisibilityConverter}}"/>
                                            </Canvas>
                                            <ControlTemplate.Triggers>
                                                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                                    <Setter Property="Effect" TargetName="FilledPathLine">
                                                        <Setter.Value>
                                                            <DropShadowEffect Color="Pink" ShadowDepth="10" BlurRadius="25" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                            </DataTemplate>
                            <!-- Datatemplate IMAGEOBJECT -->
                            <DataTemplate DataType="{x:Type model:ImageObject}">
                                <Thumb DragDelta="Thumb_Drag" 
                           IsEnabled="{Binding IsSelected,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}">
                                    <Thumb.Template>
                                        <ControlTemplate TargetType="Thumb">
                                            <Canvas Visibility="{Binding IsVisible, Converter={StaticResource BoolToVisibilityConverter}}" IsHitTestVisible="{Binding DataContext.IsEditorModeEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}">
                                                <Image RenderTransformOrigin="0.5,0.5" Source="{Binding PictureUrl}" Opacity="{Binding Opacity}" Name="ImageObject1" Canvas.Top="{Binding ImagePositionY}" Canvas.Left="{Binding ImagePositionX}" Width="{Binding ImageWidth}" Height="{Binding ImageHeight}" Stretch="Fill" VerticalAlignment="Top" >
                                                    <Image.RenderTransform>
                                                        <RotateTransform Angle="{Binding RotateAngle}" />
                                                    </Image.RenderTransform>
                                                </Image>
                                                <TextBlock Canvas.Top="{Binding ZDisplayY}" Canvas.Left="{Binding ZDisplayX}" Width="60" TextAlignment="Center" Text="{Binding ZLevel}" FontWeight="Bold" IsHitTestVisible="False" FontSize="10" 
                                           Visibility="{Binding DataContext.ShowZ, 
                                                                    RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl},
                                                                    Converter={StaticResource BoolToVisibilityConverter}}"/>

                                            </Canvas>
                                            <ControlTemplate.Triggers>
                                                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                                    <Setter Property="Effect">
                                                        <Setter.Value>
                                                            <DropShadowEffect Color="Pink" ShadowDepth="10" BlurRadius="25" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                            </DataTemplate>
                        </ListBox.Resources>
                        <ListBox.Template>
                            <ControlTemplate TargetType="ListBox">
                                <Border Background="{TemplateBinding Background}">
                                    <ItemsPresenter/>
                                </Border>
                            </ControlTemplate>
                        </ListBox.Template>
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas IsItemsHost="True" Background="Transparent"></Canvas>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                    </ListBox>
                    <ListBox Name="KämpferGrid" ItemsSource="{Binding KämpferListe.View}" SelectedItem="{Binding SelectedObject, Mode=TwoWay}" 
                             Height="10000" Width="10000" 
                             IsEnabled="{Binding IsEditorModeEnabled, Converter={StaticResource InverseBooleanConverter1}}" IsHitTestVisible="{Binding IsEditorModeEnabled, Converter={StaticResource InverseBooleanConverter1}}"
                             PreviewMouseRightButtonDown="ArenaGrid_PreviewRightMouseButtonDown" MouseRightButtonDown="ArenaGrid_MouseRightButtonDown" 
                             MouseLeftButtonDown="ArenaGrid_MouseLeftButtonDown" MouseLeftButtonUp="ArenaGrid_MouseLeftButtonUp" 
                             MouseMove="ArenaGrid_MouseMove" PreviewMouseLeftButtonUp="ArenaGrid_PreviewMouseLeftButtonUp" PreviewMouseLeftButtonDown="ArenaGrid_PreviewMouseLeftButtonDown" 
                             SelectionChanged="ArenaGrid_SelectionChanged" SelectionMode="Single" >
                        <ListBox.Resources>
                            <ViewGeneral:DictionaryValueConverter x:Key="positionImages" KeyType="{x:Type kampflogic:Position}">
                                <ViewGeneral:DictionaryValueConverter.Values>
                                    <BitmapImage x:Key="Fliegend"  UriSource="/DSA MeisterGeister;component/Images/Bodenplan/FlyingCreature.png" />
                                    <BitmapImage x:Key="Schwebend" UriSource="/DSA MeisterGeister;component/Images/Bodenplan/FloatingCreature.png" />
                                    <BitmapImage x:Key="Stehend"   UriSource="/DSA MeisterGeister;component/Images/Bodenplan/StandingCreature.png" />
                                    <BitmapImage x:Key="Kniend"    UriSource="/DSA MeisterGeister;component/Images/Bodenplan/KneelingCreature.png" />
                                    <BitmapImage x:Key="Liegend"   UriSource="/DSA MeisterGeister;component/Images/Bodenplan/OnTheGroundCreature.png" />
                                    <BitmapImage x:Key="Reitend"   UriSource="/DSA MeisterGeister;component/Images/Bodenplan/RidingCreature.png" />
                                </ViewGeneral:DictionaryValueConverter.Values>
                            </ViewGeneral:DictionaryValueConverter>
                            <!--Datatemplate BattlegroundCreature (Hero & Enemy)-->
                            <DataTemplate DataType="{x:Type model:BattlegroundCreature}">
                                <Thumb DragDelta="Thumb_Drag" 
                           IsEnabled="{Binding IsSelected,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}">
                                    <Thumb.Template>
                                        <ControlTemplate TargetType="Thumb">
                                            <Canvas Visibility="{Binding IsVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                                                <!--SightArea-->
                                                <Path Visibility="{Binding DataContext.ShowSightArea, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}, Converter={StaticResource BoolToVisibilityConverter}}" 
                                                  Fill="Yellow" IsHitTestVisible="False" Stroke="Yellow" StrokeThickness="1" Data="{Binding SightAreaGeometryData}" Opacity="0.2"/>
                                                <!--Frame for Hero Picture-->
                                                <Rectangle RadiusX="12" RadiusY="12" Canvas.Top="{Binding CreatureY}" Canvas.Left="{Binding CreatureX}" Width="{Binding CreatureWidth}" Height="{Binding CreatureHeight}" ToolTip="{Binding Name}">
                                                    <Rectangle.Fill>
                                                        <ImageBrush ImageSource="{Binding DataContext.CreaturePictureUrl, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}, Converter={StaticResource ImagePathConverter}}" Opacity="{Binding Opacity}" Stretch="Fill"/>
                                                    </Rectangle.Fill>
                                                </Rectangle>
                                                <TextBlock Canvas.Top="{Binding ZDisplayY}" Canvas.Left="{Binding ZDisplayX}" Width="60" TextAlignment="Center" Text="{Binding ZLevel}" FontWeight="Bold" IsHitTestVisible="False" FontSize="10" 
                                           Visibility="{Binding DataContext.ShowZ, 
                                                                    RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl},
                                                                    Converter={StaticResource BoolToVisibilityConverter}}"/>
                                                <TextBlock  Canvas.Top="{Binding CreatureNameY}" Canvas.Left="{Binding CreatureNameX}" Width="160" TextAlignment="Center" Text="{Binding Kurzname}" FontWeight="Normal" IsHitTestVisible="False" FontSize="17" 
                                                        Visibility="{Binding DataContext.ShowCreatureName, 
                                                                    RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl},
                                                                    Converter={StaticResource BoolToVisibilityConverter}}"/>
                                                <!--Kneel, Lie, Stand, Fly - Position Button-->
                                                <Image Width="50" Height="50" Source="{Binding Position, Converter={StaticResource positionImages}}" Canvas.Top="{Binding CreatureNameY}" Canvas.Left="{Binding CreatureNameX}" />
                                                <Canvas.Effect>
                                                    <DropShadowEffect Color="{Binding DataContext.Farbmarkierung, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}} }" ShadowDepth="10" BlurRadius="20" />
                                                </Canvas.Effect>
                                            </Canvas>
                                            <ControlTemplate.Triggers>
                                                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                                    <Setter Property="Effect">
                                                        <Setter.Value>
                                                            <DropShadowEffect Color="Pink" ShadowDepth="10" BlurRadius="25" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                            </DataTemplate>
                        </ListBox.Resources>
                        <ListBox.Background>
                            <!--<Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1" Opacity=".3">
                                            <GradientStop Color="White" Offset="0" />
                                            <GradientStop Color="GhostWhite" Offset="1" />
                                        </LinearGradientBrush>
                                    </Border.Background>-->
                            <!-- Hexgrid -->
                            <VisualBrush TileMode="Tile" Viewport="{Binding TileViewPort}" ViewportUnits="Absolute">
                                <VisualBrush.Visual>
                                    <Path StrokeThickness="3" StrokeDashArray="5 3" Data="{Binding TilePathData}">
                                        <Path.Stroke>
                                            <SolidColorBrush Color="{Binding GridColor}" />
                                        </Path.Stroke>
                                    </Path>
                                </VisualBrush.Visual>
                            </VisualBrush>
                        </ListBox.Background>
                        <ListBox.Template>
                            <ControlTemplate TargetType="ListBox">
                                <Border Background="{TemplateBinding Background}">
                                    <ItemsPresenter/>
                                </Border>
                            </ControlTemplate>
                        </ListBox.Template>
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas IsItemsHost="True" Background="Transparent"/>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                    </ListBox>
                </Grid>
                <!--    <local:DragScrollViewer.InputBindings></local:DragScrollViewer.InputBindings>
        </local:DragScrollViewer> -->
            </wpfxc:ZoomControl>
            <!--</xctkzb:Zoombox>-->
        </Grid>
        <!--<DockPanel Margin="220,131,12,11" Name="ArenaGridContainer" Background="Aqua"></DockPanel>-->



    </Grid>
    <UserControl.InputBindings>
        <KeyBinding Key="Delete" Command="{Binding DeleteCommand}" />
    </UserControl.InputBindings>
</UserControl>
