<UserControl x:Class="MeisterGeister.View.Bodenplan.BattlegroundView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:MeisterGeister.View.Bodenplan"
             xmlns:xctk="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
             xmlns:xctkzb="clr-namespace:Xceed.Wpf.Toolkit.Zoombox;assembly=Xceed.Wpf.Toolkit"
             xmlns:model="clr-namespace:MeisterGeister.ViewModel.Bodenplan.Logic"
             xmlns:kampflogic="clr-namespace:MeisterGeister.ViewModel.Kampf.Logic"
             xmlns:KampfManöver="clr-namespace:MeisterGeister.ViewModel.Kampf.Logic.Manöver"
             xmlns:ViewGeneral="clr-namespace:MeisterGeister.View.General"
             xmlns:localsolution="clr-namespace:MeisterGeister"
             xmlns:dbmodel="clr-namespace:MeisterGeister.Model"
             xmlns:wpfxc="clr-namespace:WPFExtensions.Controls;assembly=WPFExtensions"
             xmlns:wpfxb="clr-namespace:WPFExtensions.AttachedBehaviours;assembly=WPFExtensions"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             x:Name="view"
             d:DesignHeight="1100" d:DesignWidth="1280" Unloaded="view_Unloaded">
    <!--KeyDown="UserControl_KeyDown" KeyUp="UserControl_KeyUp"--> 
    <UserControl.Resources>
        <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>
        <ViewGeneral:ColorToSolidBrushValueConverter x:Key="ColorConverter"/>
        <ViewGeneral:IsNullOrEmptyConverter x:Key="IsNullOrEmptyConverter"/>
        <ViewGeneral:IsEqualOrGreaterThanConverter x:Key="IsEqualOrGreaterThanConverter1"/>
        <model:PositionToImageConverter x:Key="PositionToImageConverter1" />
        <BitmapImage x:Key="FragezeichenBild" UriSource="/DSA MeisterGeister;component/Images/Icons/General/fragezeichen.png" />
    </UserControl.Resources>
    <Grid>
        <Grid.Resources>
            <ViewGeneral:ColorToSolidBrushValueConverter x:Key="ColorToBrushConverter" />
            <kampflogic:DataTypeConverter x:Key="DataTypeConverter1"/>
            <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
            <ViewGeneral:ImagePathConverter x:Key="ImagePathConverter" />
            <ViewGeneral:EnumItemsSource x:Key="ZeichenValues" Type="{x:Type model:ZeichenModus}"/>
        </Grid.Resources>        
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Expander Grid.Column="0" IsExpanded="False" ExpandDirection="Right" HorizontalAlignment="Left" Margin="0,24,0,0">
                <Expander.Content>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Expander Grid.Column="0" IsExpanded="True" >
                            <Expander.Content>
                                <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" VerticalAlignment="Top" >
                                    <StackPanel Orientation="Horizontal">
                                        <Grid Name="grid1" Width="200" ClipToBounds="True" IsManipulationEnabled="False" Margin="12,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="34" />
                                                <RowDefinition Height="256" />
                                                <RowDefinition Height="87" />
                                                <RowDefinition Height="89" />
                                                <RowDefinition Height="378*" />
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="24*" />
                                                <ColumnDefinition Width="160" />
                                                <ColumnDefinition Width="24*" />
                                            </Grid.ColumnDefinitions>
                                            <local:SliderWithDisplayTextBox Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left" x:Name="sliderWithDisplayTextBox_StrokeThickness" SliderValue="{Binding StrokeThickness, Mode=TwoWay}" TickFrequencyValue="1" SliderLabelTextValue="Linien Stärke" SliderMinValue="1" SliderMaxValue="30" SliderMinTextValue="1" SliderMaxTextValue="30" Margin="0,69.4,0,0" Width="160" Height="56" VerticalAlignment="Top" />
                                            <local:SliderWithDisplayTextBox Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left" Margin="0,130.4,0,0" x:Name="sliderWithDisplayTextBox_Opacity" SliderValue="{Binding Opacity, Mode=TwoWay}" VerticalAlignment="Top" SliderMinValue="0.1" SliderMaxValue="1" TickFrequencyValue="0.1" SliderLabelTextValue="Transparenz" SliderMinTextValue="10%" SliderMaxTextValue="100%" Width="160" Height="58" />
                                            <local:SliderWithDisplayTextBox Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left" Margin="0,193.4,0,0" x:Name="sliderWithDisplayTextBox_ObjectSize" SliderValue="{Binding ObjectSize, Mode=TwoWay}" Height="57" VerticalAlignment="Top" SliderMinValue="0.3" SliderMaxValue="20" SliderLabelTextValue="Objektgröße" SliderMinTextValue="0.3x" SliderMaxTextValue="3x" TickFrequencyValue="0.1" Width="160" />

                                            <ToggleButton Grid.Column="1" Grid.Row="3" IsChecked="{Binding CreateLine, Mode=OneWay}" Content="[1] Line" Name="PathLineButton" Height="25" HorizontalAlignment="Left" Width="77" VerticalAlignment="Top" />
                                            <ToggleButton Grid.Column="1" Grid.Row="3" IsChecked="{Binding CreateFilledLine, Mode=OneWay}" Content="[2] Fläche" Name="FilledPathLineButton" Height="25" HorizontalAlignment="Right" Width="77" VerticalAlignment="Top" />

                                            <Button Content="Ebene +" Grid.Column="1" Grid.Row="3" Height="23" HorizontalAlignment="Left" Margin="0,31,0,0" Name="ButtonEbeneHigher" VerticalAlignment="Top" Width="77" Click="ButtonEbeneHigher_Click" />
                                            <Button Content="Ebene -" Grid.Column="1" Grid.Row="3" Height="23" HorizontalAlignment="Left" Margin="83,31,0,0" Name="ButtonEbeneLower" VerticalAlignment="Top" Width="77" Click="ButtonEbeneLower_Click" />
                                            <local:SliderWithDisplayTextBox Grid.Column="1" Grid.Row="2" HorizontalAlignment="Left" Margin="0,1,0,0" x:Name="sliderWithDisplayTextBox_ZLevel" SliderValue="{Binding ZLevel, Mode=TwoWay}" VerticalAlignment="Top" SliderMinValue="0" SliderMaxValue="20" SliderLabelTextValue="Z-Level" SliderMinTextValue="0" SliderMaxTextValue="20" TickFrequencyValue="1" Width="160" Height="58" />
                                            <CheckBox Content="Z-Level Anzeigen" IsChecked="{Binding ShowZ}" Grid.Column="1" Grid.Row="2" Height="18" HorizontalAlignment="Left" Margin="25,65,0,0" Name="checkBox1" VerticalAlignment="Top" Width="113" />
                                            <CheckBox Content="Editor Modus" IsChecked="{Binding IsEditorModeEnabled}" Height="20" HorizontalAlignment="Left" Margin="25,14,0,0" Name="checkBox3" VerticalAlignment="Top" Width="113" FontSize="14" FontStyle="Normal" FontWeight="SemiBold" ToolTip="Wenn deaktiviert, können nur noch Helden und Monster bewegt werden" Grid.Column="1" />
                                            <Button Content="Ebene max" Grid.Column="1" Grid.Row="3" Height="23" HorizontalAlignment="Left" Margin="0,59,0,0" x:Name="ButtonEbeneHigherMax" VerticalAlignment="Top" Width="77" Click="ButtonEbeneHigherMax_Click" />
                                            <Button Content="Ebene min" Grid.Column="1" Grid.Row="3" Height="23" HorizontalAlignment="Left" Margin="82,59,0,0" x:Name="ButtonEbeneLowerMin" VerticalAlignment="Top" Width="77" Click="ButtonEbeneLowerMin_Click" />
                                            <local:SliderWithDisplayTextBox Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left" x:Name="sliderWithDisplayTextBox_AlphaChannel" SliderValue="{Binding SelectedFillColorAlpha, Mode=TwoWay}" TickFrequencyValue="0.1" SliderLabelTextValue="Alpha Kanal" SliderMinValue="0" SliderMaxValue="1" SliderMinTextValue="0" SliderMaxTextValue="1" Margin="0,6,0,0" Width="160" Height="58" VerticalAlignment="Top" />
                                        </Grid>
                                        <!--<StackPanel Orientation="Vertical">
                                            --><!-- Zeichenmodi --><!--
                                            <ListBox ItemsSource="{StaticResource ZeichenValues}" SelectedValue="{Binding ZeichenModus}">
                                                <ListBox.Resources>
                                                    <ViewGeneral:DictionaryValueConverter x:Key="toolImages">
                                                        <ViewGeneral:DictionaryValueConverter.Values>
                                                            <BitmapImage x:Key="Auswahl" UriSource="/DSA MeisterGeister;component/Images/Icons/Zeichnen/auswahlpfeil.png" />
                                                            <BitmapImage x:Key="Stift" UriSource="/DSA MeisterGeister;component/Images/Icons/Zeichnen/stift.png" />
                                                            <BitmapImage x:Key="Linie" UriSource="/DSA MeisterGeister;component/Images/Icons/Zeichnen/linie.png" />
                                                            <BitmapImage x:Key="Fläche" UriSource="/DSA MeisterGeister;component/Images/Icons/Zeichnen/polygon.png" />
                                                            <BitmapImage x:Key="Bild" UriSource="/DSA MeisterGeister;component/Images/Icons/Zeichnen/bild.png" />
                                                            <BitmapImage x:Key="Licht" UriSource="/DSA MeisterGeister;component/Images/Icons/Zeichnen/fackel.png" />
                                                            <BitmapImage x:Key="Gegner" UriSource="/DSA MeisterGeister;component/Images/Icons/Zeichnen/orc.png" />
                                                            <BitmapImage x:Key="None" UriSource="/DSA MeisterGeister;component/Images/Icons/General/fragezeichen.png" />
                                                        </ViewGeneral:DictionaryValueConverter.Values>
                                                    </ViewGeneral:DictionaryValueConverter>
                                                </ListBox.Resources>
                                                <ListBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <Image Height="30" Width="30" ToolTip="{Binding FallbackValue=None}" Source="{Binding Converter={StaticResource toolImages}}"></Image>
                                                    </DataTemplate>
                                                </ListBox.ItemTemplate>
                                            </ListBox>
                                            <StackPanel Grid.Column="1" Grid.Row="1" Orientation="Horizontal">
                                                <Grid Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left">
                                                    <xctk:ColorPicker SelectedColor="{Binding SelectedColor}" Name="colorPicker1" VerticalAlignment="Top" Width="22" Height="22" ShowDropDownButton="False" ToolTip="Linienfarbe"/>
                                                    <Polygon Fill="White" IsHitTestVisible="False" Points="1,19.5 1,1 20.5,1" />
                                                    <Polygon Fill="White" IsHitTestVisible="False" Points="2.5,21 22,21 22,2.5" />
                                                </Grid>
                                                <xctk:ColorPicker HorizontalAlignment="Left" Name="colorPicker2" SelectedColor="{Binding SelectedFillColor}" VerticalAlignment="Top" Width="22" Height="22" ShowDropDownButton="False" ToolTip="Füllfarbe"/>
                                            </StackPanel>
                                        </StackPanel>-->
                                    </StackPanel>
                                </ScrollViewer>
                            </Expander.Content>
                        </Expander>


                        <Expander Grid.Row="1" IsExpanded="True">
                            <Expander.Content>
                                <Grid Width="200" ClipToBounds="True" IsManipulationEnabled="False" Margin="12,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="30" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <Button Content="Bild hinzu" Height="23" HorizontalAlignment="Left" x:Name="ButtonBildhinzu" VerticalAlignment="Top" Width="77" Click="ButtonBildhinzun_Click" />

                                    <ScrollViewer x:Name="MyScrollViewer" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Visible" Grid.Row="1" VerticalAlignment="Top" Grid.ColumnSpan="2" Margin="0,0,3,0">
                                        <WrapPanel Name="PictureButtonWrapPanel" Width="165" VerticalAlignment="Stretch" MinHeight="200" Margin="0,0,1,0"/>
                                    </ScrollViewer>
                                </Grid>
                            </Expander.Content>
                        </Expander>
                    </Grid>
                </Expander.Content>
            </Expander>
            
            <Grid Grid.Column="1" Margin="0,24,0,0">
                <wpfxc:ZoomControl Grid.Column="1" x:Name="ArenaScrollViewer" Background="#FF367536" 
                           MaxZoom="3" MinZoom="0.08" MaxZoomDelta="3" ZoomDeltaMultiplier="50" Mode="Original" 
                           TranslateX="{Binding MeisterZoomTransX, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TranslateY="{Binding MeisterZoomTransY, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                           Zoom="{Binding MeisterZoom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                           LimitToContent="True" WheelZoomsAlone="True" PanWithoutModifier="True"
                           ModifierKeyPan="Shift" ModifierKeyZoom="Control" ModifierKeyZoomBox="Alt"  VerticalAlignment="Bottom">

                    <Grid Name="ArenaGridTop" >
                        <Image Name="imgbtnBGStoppen" Source="{Binding BackgroundImage}" VerticalAlignment="Top" HorizontalAlignment="Left" 
                               Width="{Binding BackgroundOffsetSize, UpdateSourceTrigger=PropertyChanged}" 
                               Margin="{Binding OffsetBackgroudMargin, UpdateSourceTrigger=PropertyChanged}" />
                        <Image Name="imgFog" Source="{Binding FogImage}" Opacity="0.5" VerticalAlignment="Top" HorizontalAlignment="Left" Width="10000" Height="10000" 
                                Visibility="{Binding useFog, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter1}}"/>
                        <!--ObjektListe.View-->
                        <ListBox ItemsSource="{Binding BattlegroundObjects}" SelectedItem="{Binding SelectedObject, Mode=TwoWay}" Name="ArenaGrid" 
                                 PreviewMouseRightButtonDown="ArenaGrid_PreviewRightMouseButtonDown"  
                                 MouseMove="ArenaGrid_MouseMove"
                                 MouseLeftButtonDown="ArenaGrid_MouseLeftButtonDown" 
                                 MouseLeftButtonUp="ArenaGrid_MouseLeftButtonUp" 
                                 PreviewMouseLeftButtonUp="ArenaGrid_PreviewMouseLeftButtonUp" 
                                 PreviewMouseLeftButtonDown="ArenaGrid_PreviewMouseLeftButtonDown"
                                 SelectionChanged="ArenaGrid_SelectionChanged" 
                                 Height="10000" Width="10000" SelectionMode="Single" >
                            <ListBox.Resources>
                                <!--Datatemplate BattlegroundCreature (Hero & Enemy)-->
                                <DataTemplate DataType="{x:Type model:BattlegroundCreature}">
                                    <Thumb DragDelta="Thumb_Drag" IsEnabled="{Binding IsSelected,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}">
                                        <Thumb.Template>
                                            <ControlTemplate TargetType="Thumb">
                                                <Canvas Visibility="{Binding IsVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                                                    <!--SightArea-->
                                                    <Path Visibility="{Binding VM.ShowSightArea, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}, Converter={StaticResource BoolToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}" 
                                                                Fill="Yellow" IsHitTestVisible="False" Stroke="Yellow" StrokeThickness="1" Data="{Binding SightAreaGeometryData}" Opacity="0.2"/>

                                                    <!--Frame for Heroe Picture-->
                                                    <Rectangle RadiusX="12" RadiusY="12" Canvas.Top="{Binding CreatureY,UpdateSourceTrigger=PropertyChanged}" Canvas.Left="{Binding CreatureX,UpdateSourceTrigger=PropertyChanged}" Width="{Binding CreatureWidth,UpdateSourceTrigger=PropertyChanged}" Height="{Binding CreatureHeight,UpdateSourceTrigger=PropertyChanged}" ToolTip="{Binding Name}">
                                                        <Rectangle.Fill>
                                                            <ImageBrush ImageSource="{Binding DataContext.CreaturePictureUrl, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}, Converter={StaticResource ImagePathConverter}}" Opacity="{Binding Opacity}" Stretch="Fill"/>
                                                        </Rectangle.Fill>
                                                    </Rectangle>

                                                    <TextBlock Canvas.Top="{Binding ZDisplayY}" Canvas.Left="{Binding ZDisplayX}" Width="60" TextAlignment="Center" Text="{Binding ZLevel}" FontWeight="Bold" IsHitTestVisible="False" FontSize="10" 
                                                                    Visibility="{Binding DataContext.ShowZ, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}, Converter={StaticResource BoolToVisibilityConverter}}"/>

                                                    <Image Canvas.Top="{Binding ZDisplayY}" Canvas.Left="{Binding ZDisplayX}" Width="40" Height="40" Source="/DSA MeisterGeister;component/Images/Icons/Schaden.png"  >
                                                        <Image.Style>
                                                            <Style TargetType="Image">
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Wunden, Converter={StaticResource IsEqualOrGreaterThanConverter1}, ConverterParameter=1}" Value="True" >
                                                                        <Setter Property="Visibility" Value="Visible"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding WundenByZone[Unlokalisiert], Converter={StaticResource IsEqualOrGreaterThanConverter1}, ConverterParameter=1}" Value="True" >
                                                                        <Setter Property="Visibility" Value="Visible"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding WundenByZone[Kopf], Converter={StaticResource IsEqualOrGreaterThanConverter1}, ConverterParameter=1}" Value="True" >
                                                                        <Setter Property="Visibility" Value="Visible"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding WundenByZone[Brust], Converter={StaticResource IsEqualOrGreaterThanConverter1}, ConverterParameter=1}" Value="True" >
                                                                        <Setter Property="Visibility" Value="Visible"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding WundenByZone[ArmR], Converter={StaticResource IsEqualOrGreaterThanConverter1}, ConverterParameter=1}" Value="True" >
                                                                        <Setter Property="Visibility" Value="Visible"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding WundenByZone[ArmL], Converter={StaticResource IsEqualOrGreaterThanConverter1}, ConverterParameter=1}" Value="True" >
                                                                        <Setter Property="Visibility" Value="Visible"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding WundenByZone[Bauch], Converter={StaticResource IsEqualOrGreaterThanConverter1}, ConverterParameter=1}" Value="True" >
                                                                        <Setter Property="Visibility" Value="Visible"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding WundenByZone[BeinR], Converter={StaticResource IsEqualOrGreaterThanConverter1}, ConverterParameter=1}" Value="True" >
                                                                        <Setter Property="Visibility" Value="Visible"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding WundenByZone[BeinL], Converter={StaticResource IsEqualOrGreaterThanConverter1}, ConverterParameter=1}" Value="True" >
                                                                        <Setter Property="Visibility" Value="Visible"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Image.Style>
                                                    </Image>


                                                    <!--HinweisText-->
                                                    <TextBlock TextAlignment="Center" FontSize="14" FontStyle="Italic" Background="White" HorizontalAlignment="Center" VerticalAlignment="Top" Width="140"
                                                               Canvas.Top="{Binding CreatureNameY}" Canvas.Left="{Binding CreatureNameX}" Margin="0,-14,0,0">
                                                        <TextBlock.Style>
                                                            <Style TargetType="TextBlock">
                                                                <Setter Property="Text" Value="{Binding HinweisText, UpdateSourceTrigger=PropertyChanged}" />
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding HinweisText}" Value="">
                                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBlock.Style>
                                                    </TextBlock>

                                                    <TextBlock  Canvas.Top="{Binding CreatureNameY}" Canvas.Left="{Binding CreatureNameX}" Width="160" TextAlignment="Center" FontWeight="Normal" IsHitTestVisible="False" FontSize="17" 
                                                                    Visibility="{Binding DataContext.ShowCreatureName, 
                                                                    RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl},
                                                                    Converter={StaticResource BoolToVisibilityConverter}}">
                                                        <TextBlock.Style>
                                                            <Style TargetType="TextBlock">
                                                                <Setter Property="Text" Value="{Binding KämpferTempName}" />
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding IsHeld}" Value="True">
                                                                        <Setter Property="Text" Value="{Binding Kurzname}" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBlock.Style>
                                                    </TextBlock>
                                                    <Image Width="50" Height="50" Source="{Binding Position, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource PositionToImageConverter1}}" 
                                                               Canvas.Top="{Binding CreatureNameY}" Canvas.Left="{Binding CreatureNameX}" />


                                                    <!--<Label Background="White"  HorizontalAlignment="Center" VerticalAlignment="Top"
                                                               Content="{Binding DataContext.KampfVM.Manöver.Ausführender.Kämpfer.HinweisText, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"  />-->

                                                    <!-- Längerfristige Handlungen -->
                                                    <!--<Grid Margin="80,50,0,0" Canvas.Top="{Binding CreatureNameY, UpdateSourceTrigger=PropertyChanged}" Canvas.Left="{Binding CreatureNameX, UpdateSourceTrigger=PropertyChanged}"
                                                            Background="#FFE0E07C" >
                                                        <Grid.Style>
                                                            <Style TargetType="Grid">
                                                                <Setter Property="Visibility" Value="Collapsed" />
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding DataContext.KampfVM.Manöver.Ausführender.Kämpfer.Manöver, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl},
                                                                        Converter={StaticResource DataTypeConverter1}, UpdateSourceTrigger=PropertyChanged}" Value="{x:Type KampfManöver:FernkampfManöver}">
                                                                        <Setter Property="Visibility" Value="Visible" />
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding DataContext.KampfVM.Manöver.Ausführender.Kämpfer.Manöver, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl},
                                                                        Converter={StaticResource DataTypeConverter1}, UpdateSourceTrigger=PropertyChanged}" Value="{x:Type KampfManöver:Zauber}">
                                                                        <Setter Property="Visibility" Value="Visible"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding DataContext.KampfVM.Manöver.Ausführender.Kämpfer.Manöver, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl},
                                                                        Converter={StaticResource DataTypeConverter1}, UpdateSourceTrigger=PropertyChanged}" Value="{x:Type KampfManöver:SonstigesManöver}">
                                                                        <Setter Property="Visibility" Value="Visible"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Grid.Style> 
                                                        <Image Margin="-1" HorizontalAlignment="Left">
                                                            <Image.Style>
                                                                <Style TargetType="Image">
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding DataContext.SelectedManöver.Manöver, Converter={StaticResource DataTypeConverter1}, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" Value="{x:Type KampfManöver:FernkampfManöver}">
                                                                            <Setter Property="Source" Value="/DSA MeisterGeister;component/Images/Icons/Fernkampf.png" />
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding DataContext.SelectedManöver.Manöver, Converter={StaticResource DataTypeConverter1}, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" Value="{x:Type KampfManöver:Zauber}">
                                                                            <Setter Property="Source" Value="/DSA MeisterGeister;component/Images/Icons/Magie.png" />
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding DataContext.SelectedManöver.Manöver, Converter={StaticResource DataTypeConverter1}, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" Value="{x:Type KampfManöver:SonstigesManöver}">
                                                                            <Setter Property="Source" Value="/DSA MeisterGeister;component/Images/Icons/Kalender.png" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Image.Style>
                                                        </Image>

                                                        <TextBlock Margin="10,0,0,0" Text="{Binding DataContext.SelectedManöver.Manöver.VerbleibendeDauer, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" VerticalAlignment="Center" Width="14" FontSize="9" FontWeight="Bold"  />
                                                    </Grid>-->

                                                    
                                                    
                                                    <!--Angriff-Abwehraktionen-->
                                                    <Slider VerticalAlignment="Bottom" 
                                                                Canvas.Top="{Binding CreatureY,UpdateSourceTrigger=PropertyChanged}" Canvas.Left="{Binding CreatureX,UpdateSourceTrigger=PropertyChanged}"
                                                                Margin="-5,80,6,0" Minimum="0" IsSnapToTickEnabled="True" Width="50" ToolTip="Aktionen umwandeln"
                                                                Maximum="{Binding ki.Aktionen, UpdateSourceTrigger=PropertyChanged}" 
                                                                Value="{Binding ki.Abwehraktionen, UpdateSourceTrigger=PropertyChanged}"/>
                                                    <StackPanel Orientation="Horizontal" Canvas.Top="{Binding CreatureY,UpdateSourceTrigger=PropertyChanged}" 
                                                                    Canvas.Left="{Binding CreatureX,UpdateSourceTrigger=PropertyChanged}"
                                                                    Margin="35,80,3,0" >
                                                        <ViewGeneral:ImageDuplicator VerticalAlignment="Top" Padding="0" Anzahl="{Binding ki.VerbrauchteAngriffsaktionen, UpdateSourceTrigger=PropertyChanged}" ImageSource="/DSA%20MeisterGeister;component/Images/Icons/nahkampf_01_gestrichen.png" />
                                                        <ViewGeneral:ImageDuplicator VerticalAlignment="Top" Padding="0" Anzahl="{Binding ki.AngriffsaktionenÜbrig, UpdateSourceTrigger=PropertyChanged}" ImageSource="/DSA%20MeisterGeister;component/Images/Icons/nahkampf_01.png" />

                                                        <ViewGeneral:ImageDuplicator VerticalAlignment="Top" Padding="0" Anzahl="{Binding ki.VerbrauchteAbwehraktionen, UpdateSourceTrigger=PropertyChanged}" ImageSource="/DSA%20MeisterGeister;component/Images/Icons/schild_gestrichen.png" />
                                                        <ViewGeneral:ImageDuplicator VerticalAlignment="Top" Padding="0" Anzahl="{Binding ki.AbwehraktionenÜbrig, UpdateSourceTrigger=PropertyChanged}" ImageSource="/DSA%20MeisterGeister;component/Images/Icons/schild.png" />
                                                    </StackPanel>

                                                    <!--Aktionsbuttons rechts-->
                                                    <StackPanel Margin="80,-31,0,0" Canvas.Top="{Binding CreatureY,UpdateSourceTrigger=PropertyChanged}" Canvas.Left="{Binding CreatureX,UpdateSourceTrigger=PropertyChanged}"
                                                                    Visibility="{Binding IsSelected, Converter={StaticResource BooleanToVisibilityConverter1}}" Background="Transparent">
                                                        <Button Name="UmwandelnAttacke" Height="27" Width="27" Margin="0,3" BorderBrush="Transparent" >
                                                            <Image Source="/DSA MeisterGeister;component/Images/Icons/nahkampf_01.png" Stretch="Fill" Margin="-4" />
                                                        </Button>
                                                        <!--<Button Name="UmwandelnFernkampf" Height="27" Width="27" Margin="0,3" >
                                                                <Image Source="/DSA MeisterGeister;component/Images/Icons/fernkampf.png" Stretch="Fill" Margin="-4" />
                                                            </Button>-->

                                                        <MenuItem Name="miKämpferFernkampf" Height="27" Width="27" BorderThickness="1" HorizontalAlignment="Center">
                                                            <MenuItem.Style>
                                                                <Style TargetType="MenuItem">
                                                                    <Setter Property="ItemsSource" Value="{x:Null}" />
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding ki.Kämpfer.Fernkampfwaffen.Count, Converter={StaticResource IsEqualOrGreaterThanConverter1}, ConverterParameter='2'}" Value="false">
                                                                            <Setter Property="Command" Value="{Binding UmwandelnFernkampf}" />
                                                                        </DataTrigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding ki.Kämpfer.Fernkampfwaffen.Count, Converter={StaticResource IsEqualOrGreaterThanConverter1}, ConverterParameter='2'}" Value="true" />
                                                                                <Condition Binding="{Binding ki.Kämpfer.GegnerBase}" Value="{x:Null}" />
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="ItemsSource" Value="{Binding ki.Kämpfer.Fernkampfwaffen}" />
                                                                        </MultiDataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </MenuItem.Style>
                                                            <MenuItem.Icon>
                                                                <Image Source="/DSA%20MeisterGeister;component/Images/Icons/fernkampf.png" MaxWidth="24" Margin="-1,-3,-3,-3" />
                                                            </MenuItem.Icon>
                                                            <MenuItem.ItemContainerStyle>
                                                                <!--BasedOn="{StaticResource {x:Type MenuItem}}"-->
                                                                <Style TargetType="MenuItem" >
                                                                    <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=MenuItem},Path=DataContext.UmwandelnFernkampf}"/>
                                                                    <Setter Property="CommandParameter" Value="{Binding}"/>
                                                                </Style>
                                                            </MenuItem.ItemContainerStyle>
                                                            <MenuItem.ItemTemplate>
                                                                <DataTemplate>
                                                                    <TextBlock Text="{Binding Name}"/>
                                                                </DataTemplate>
                                                            </MenuItem.ItemTemplate>
                                                        </MenuItem>

                                                        <MenuItem Name="miKämpferZauber" Height="27" Width="27" BorderThickness="1" HorizontalAlignment="Center"
                                                                      Visibility="{Binding ki.Kämpfer.Magiebegabt, Converter={StaticResource BooleanToVisibilityConverter1}}" >
                                                            <MenuItem.Style>
                                                                <Style TargetType="MenuItem">
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding ki.Kämpfer.Held_Zauber}" Value="{x:Null}">
                                                                            <Setter Property="ItemsSource" Value="{Binding ki.Kämpfer.GegnerBase.GegnerBase_Zauber}" />
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding ki.Kämpfer.GegnerBase.GegnerBase_Zauber}" Value="{x:Null}">
                                                                            <Setter Property="ItemsSource" Value="{Binding ki.Kämpfer.Held_Zauber}" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </MenuItem.Style>
                                                            <MenuItem.Icon>
                                                                <Image Source="/DSA%20MeisterGeister;component/Images/Icons/magie.png" MaxWidth="24" Margin="-1,-3,-3,-3" />
                                                            </MenuItem.Icon>
                                                            <MenuItem.ItemContainerStyle>
                                                                <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}" >
                                                                    <Setter Property="Command" 
                                                                                Value="{Binding DataContext.SelManöver.UmwandelnZauber, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"/>
                                                                    <!--Value="{Binding mi.UmwandelnZauber, RelativeSource={RelativeSource}}"/>-->
                                                                    <Setter Property="CommandParameter" Value="{Binding}"/>
                                                                </Style>
                                                            </MenuItem.ItemContainerStyle>
                                                            <MenuItem.ItemTemplate>
                                                                <DataTemplate>
                                                                    <TextBlock Text="{Binding Zauber.Name}"/>
                                                                </DataTemplate>
                                                            </MenuItem.ItemTemplate>
                                                        </MenuItem>
                                                        <!--<Button Name="UmwandelnZauber" Height="27" Width="27" Margin="0,3" Visibility="{Binding DataContext.KampfVM.Manöver.Ausführender.Kämpfer.Magiebegabt, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}">
                                                                <Image Source="/DSA MeisterGeister;component/Images/Icons/magie.png" Stretch="Fill" Margin="-4" />
                                                            </Button>-->

                                                        <Button Name="UmwandelnSonstiges" Height="27" Width="27" Margin="0,3" BorderBrush="Transparent" >
                                                            <Image Source="/DSA MeisterGeister;component/Images/Icons/kalender.png" Stretch="Fill" Margin="-4" />
                                                        </Button>
                                                    </StackPanel>
                                                    
                                                    <Canvas.Effect>
                                                        <DropShadowEffect Color="{Binding DataContext.Farbmarkierung, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}} }" ShadowDepth="10" BlurRadius="20" />
                                                    </Canvas.Effect>
                                                </Canvas>

                                                <ControlTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                                        <Setter Property="Effect">
                                                            <Setter.Value>
                                                                <DropShadowEffect Color="Yellow" ShadowDepth="10" BlurRadius="35" />
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsAnDerReihe}" Value="True">
                                                        <Setter Property="Effect">
                                                            <Setter.Value>
                                                                <DropShadowEffect Color="#FFC0FCFF" ShadowDepth="10" BlurRadius="35" />
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Thumb.Template>
                                    </Thumb>
                                </DataTemplate>

                                <!-- Datatemplate PATHLINE -->
                                <DataTemplate DataType="{x:Type model:PathLine}">
                                    <Thumb DragDelta="Thumb_Drag" IsEnabled="{Binding IsSelected,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}">
                                        <Thumb.Template>
                                            <ControlTemplate TargetType="Thumb">
                                                <Canvas Visibility="{Binding IsVisible, Converter={StaticResource BoolToVisibilityConverter}}" IsHitTestVisible="{Binding DataContext.IsEditorModeEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}">
                                                    <Path Stroke="{Binding ObjectColor}" StrokeThickness="{Binding StrokeThickness}" Data="{Binding PathGeometryData}" x:Name="PathLine" Opacity="{Binding Opacity}" />
                                                    <TextBlock Canvas.Top="{Binding ZDisplayY}" Canvas.Left="{Binding ZDisplayX}" Width="60" TextAlignment="Center" Text="{Binding ZLevel}" FontWeight="Bold" FontSize="10" 
                                                            IsHitTestVisible="False" 
                                                            Visibility="{Binding DataContext.ShowZ, 
                                                            RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl},
                                                            Converter={StaticResource BoolToVisibilityConverter}}"/>
                                                </Canvas>
                                                <ControlTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                                        <Setter Property="Effect" TargetName="PathLine">
                                                            <Setter.Value>
                                                                <DropShadowEffect Color="Yellow" ShadowDepth="10" BlurRadius="25" />
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Thumb.Template>
                                    </Thumb>
                                </DataTemplate>

                                <DataTemplate DataType="{x:Type model:FilledPathLine}">
                                    <Thumb DragDelta="Thumb_Drag" IsEnabled="{Binding IsSelected,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}">
                                        <Thumb.Template>
                                            <ControlTemplate TargetType="Thumb">
                                                <Canvas Visibility="{Binding IsVisible, Converter={StaticResource BoolToVisibilityConverter}}" IsHitTestVisible="{Binding DataContext.IsEditorModeEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}">
                                                    <Path Stroke="{Binding ObjectColor}" StrokeThickness="{Binding StrokeThickness}" Data="{Binding FilledPathGeometryData}" x:Name="FilledPathLine" Opacity="{Binding Opacity}">
                                                        <Path.Fill>
                                                            <SolidColorBrush Color="{Binding FillColor}" />
                                                        </Path.Fill>
                                                    </Path>
                                                    <TextBlock Canvas.Top="{Binding ZDisplayY}" Canvas.Left="{Binding ZDisplayX}" Width="60" TextAlignment="Center" Text="{Binding ZLevel}" FontWeight="Bold" IsHitTestVisible="False" FontSize="10" 
                                                            Visibility="{Binding DataContext.ShowZ, 
                                                                    RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl},
                                                                    Converter={StaticResource BoolToVisibilityConverter}}"/>
                                                </Canvas>
                                                <ControlTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                                        <Setter Property="Effect" TargetName="FilledPathLine">
                                                            <Setter.Value>
                                                                <DropShadowEffect Color="Yellow" ShadowDepth="10" BlurRadius="25" />
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Thumb.Template>
                                    </Thumb>
                                </DataTemplate>

                                <!-- Datatemplate IMAGEOBJECT -->
                                <DataTemplate DataType="{x:Type model:ImageObject}">
                                    <Thumb DragDelta="Thumb_Drag" IsEnabled="{Binding IsSelected,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}">
                                        <Thumb.Template>
                                            <ControlTemplate TargetType="Thumb">
                                                <Canvas Visibility="{Binding IsVisible, Converter={StaticResource BoolToVisibilityConverter}}" IsHitTestVisible="{Binding DataContext.IsEditorModeEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}">
                                                    <Image RenderTransformOrigin="0.5,0.5" Source="{Binding PictureUrl}" Opacity="{Binding Opacity}" Name="ImageObject1" Canvas.Top="{Binding ImagePositionY}" Canvas.Left="{Binding ImagePositionX}" Width="{Binding ImageWidth}" Height="{Binding ImageHeight}" Stretch="Fill" VerticalAlignment="Top" >
                                                        <Image.RenderTransform>
                                                            <RotateTransform Angle="{Binding RotateAngle}" />
                                                        </Image.RenderTransform>
                                                    </Image>
                                                    <TextBlock Canvas.Top="{Binding ZDisplayY}" Canvas.Left="{Binding ZDisplayX}" Width="60" TextAlignment="Center" Text="{Binding ZLevel}" FontWeight="Bold" IsHitTestVisible="False" FontSize="10" 
                                                                    Visibility="{Binding DataContext.ShowZ, 
                                                                    RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl},
                                                                    Converter={StaticResource BoolToVisibilityConverter}}"/>

                                                </Canvas>

                                                <ControlTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                                        <Setter Property="Effect">
                                                            <Setter.Value>
                                                                <DropShadowEffect Color="Yellow" ShadowDepth="10" BlurRadius="25" />
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Thumb.Template>
                                    </Thumb>
                                </DataTemplate>
                            </ListBox.Resources>

                            <ListBox.Background>
                                <!--<Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1" Opacity=".3">
                                            <GradientStop Color="White" Offset="0" />
                                            <GradientStop Color="GhostWhite" Offset="1" />
                                        </LinearGradientBrush>
                                    </Border.Background>-->

                                <!-- Hexgrid -->
                                <VisualBrush TileMode="Tile" Viewport="{Binding TileViewPort}" ViewportUnits="Absolute">
                                    <VisualBrush.Visual>
                                        <Path StrokeThickness="3" StrokeDashArray="5 3" Data="{Binding TilePathData}">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="{Binding GridColor, UpdateSourceTrigger=PropertyChanged}" />
                                            </Path.Stroke>
                                        </Path>
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </ListBox.Background>

                            <ListBox.Template>
                                <ControlTemplate TargetType="ListBox">
                                    <Border Background="{TemplateBinding Background}">
                                        <ItemsPresenter/>
                                    </Border>
                                </ControlTemplate>
                            </ListBox.Template>

                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Canvas IsItemsHost="True" Background="Transparent"></Canvas>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                        </ListBox>
                    </Grid>
                    <!--    <local:DragScrollViewer.InputBindings></local:DragScrollViewer.InputBindings>
        </local:DragScrollViewer> -->
                </wpfxc:ZoomControl>
            </Grid>            
        </Grid>
    </Grid>
    <UserControl.InputBindings>
        <KeyBinding Key="Delete" Command="{Binding DeleteCommand}" />
    </UserControl.InputBindings>
</UserControl>
