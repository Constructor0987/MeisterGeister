<UserControl x:Class="MeisterGeister.View.Bodenplan.BattlegroundView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:MeisterGeister.View.Bodenplan"
             xmlns:xctk="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
             xmlns:model="clr-namespace:MeisterGeister.ViewModel.Bodenplan.Logic"
             xmlns:ViewGeneral="clr-namespace:MeisterGeister.View.General"
             xmlns:localsolution="clr-namespace:MeisterGeister"
             xmlns:dbmodel="clr-namespace:MeisterGeister.Model"
             xmlns:wpfxc="clr-namespace:WPFExtensions.Controls;assembly=WPFExtensions"
             xmlns:wpfxb="clr-namespace:WPFExtensions.AttachedBehaviours;assembly=WPFExtensions"
             mc:Ignorable="d" 
             x:Name="view"
             d:DesignHeight="1100" d:DesignWidth="1280" KeyDown="UserControl_KeyDown" KeyUp="UserControl_KeyUp" Background="{StaticResource BackgroundPergamentQuer}">   
    <Grid>
        <Grid.Resources>
            <ViewGeneral:ColorToSolidBrushValueConverter x:Key="ColorToBrushConverter" />
            <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>

            <!--Datatemplate BattlegroundCreature (Hero & Enemy)-->
            <DataTemplate DataType="{x:Type model:BattlegroundCreature}">
                <Thumb DragDelta="Thumb_Drag" 
                           IsEnabled="{Binding IsSelected,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}">
                    <Thumb.Template>
                        <ControlTemplate TargetType="Thumb">
                            <Canvas Visibility="{Binding IsVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                                <Rectangle RadiusX="12" RadiusY="12" Canvas.Top="{Binding CreatureY}" Canvas.Left="{Binding CreatureX}" Width="{Binding CreatureWidth}" Height="{Binding CreatureHeight}" ToolTip="{Binding Name}">
                                    <Rectangle.Fill>
                                        <ImageBrush ImageSource="{Binding DataContext.CreaturePictureUrl, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Opacity="{Binding Opacity}" Stretch="Fill"/>                                        
                                    </Rectangle.Fill>
                                </Rectangle>
                                <!--<Image Source="{Binding CreaturePictureUrl}" Opacity="{Binding Opacity}" Name="ImageObject1" Canvas.Top="{Binding CreatureY}" Canvas.Left="{Binding CreatureX}" Width="{Binding CreatureWidth}" Height="{Binding CreatureHeight}" Stretch="Fill" VerticalAlignment="Top" />-->
                                <TextBlock Canvas.Top="{Binding ZDisplayY}" Canvas.Left="{Binding ZDisplayX}" Width="60" TextAlignment="Center" Text="{Binding ZLevel}" FontWeight="Bold" IsHitTestVisible="False" FontSize="10" 
                                           Visibility="{Binding DataContext.ShowZ, 
                                                                    RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl},
                                                                    Converter={StaticResource BoolToVisibilityConverter}}"/>
                                <TextBlock Canvas.Top="{Binding CreatureNameY}" Canvas.Left="{Binding CreatureNameX}" Width="160" TextAlignment="Center" Text="{Binding Kurzname}" FontWeight="Normal" IsHitTestVisible="False" FontSize="17" 
                                           Visibility="{Binding DataContext.ShowCreatureName, 
                                                                    RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl},
                                                                    Converter={StaticResource BoolToVisibilityConverter}}"/>
                                <Canvas.Effect>
                                    <DropShadowEffect Color="{Binding DataContext.Farbmarkierung, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}} }" ShadowDepth="4" BlurRadius="11" />
                                </Canvas.Effect>
                            </Canvas>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                    <Setter Property="Effect">
                                        <Setter.Value>
                                            <DropShadowEffect Color="LightSkyBlue" ShadowDepth="3" BlurRadius="10" />
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Thumb.Template>
                </Thumb>
            </DataTemplate>

            <!-- Datatemplate PATHLINE -->
            <DataTemplate DataType="{x:Type model:PathLine}">
                <Thumb DragDelta="Thumb_Drag" IsEnabled="{Binding IsSelected,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}">
                    <Thumb.Template>
                        <ControlTemplate TargetType="Thumb">
                            <Canvas Visibility="{Binding IsVisible, Converter={StaticResource BoolToVisibilityConverter}}" IsHitTestVisible="{Binding DataContext.IsEditorModeEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}">
                                <Path Stroke="{Binding ObjectColor}" StrokeThickness="{Binding StrokeThickness}" Data="{Binding PathGeometryData}" x:Name="PathLine" Opacity="{Binding Opacity}" >
                                    
                                </Path>
                                <TextBlock Canvas.Top="{Binding ZDisplayY}" Canvas.Left="{Binding ZDisplayX}" Width="60" TextAlignment="Center" Text="{Binding ZLevel}" FontWeight="Bold" FontSize="10" 
                                           IsHitTestVisible="False" 
                                           Visibility="{Binding DataContext.ShowZ, 
                                                                    RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl},
                                                                    Converter={StaticResource BoolToVisibilityConverter}}"/>
                            </Canvas>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                    <Setter Property="Effect" TargetName="PathLine">
                                        <Setter.Value>
                                            <DropShadowEffect Color="LightSkyBlue" ShadowDepth="3" BlurRadius="10" />
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Thumb.Template>
                </Thumb>
            </DataTemplate>

            <DataTemplate DataType="{x:Type model:FilledPathLine}">
                <Thumb DragDelta="Thumb_Drag" 
                           IsEnabled="{Binding IsSelected,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}">
                    <Thumb.Template>
                        <ControlTemplate TargetType="Thumb">
                            <Canvas Visibility="{Binding IsVisible, Converter={StaticResource BoolToVisibilityConverter}}" IsHitTestVisible="{Binding DataContext.IsEditorModeEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}">
                                <Path Stroke="{Binding ObjectColor}" StrokeThickness="{Binding StrokeThickness}" Data="{Binding FilledPathGeometryData}" x:Name="FilledPathLine" Opacity="{Binding Opacity}">
                                    <Path.Fill>
                                        <SolidColorBrush Color="{Binding FillColor}" />
                                    </Path.Fill>
                                </Path>
                                <TextBlock Canvas.Top="{Binding ZDisplayY}" Canvas.Left="{Binding ZDisplayX}" Width="60" TextAlignment="Center" Text="{Binding ZLevel}" FontWeight="Bold" IsHitTestVisible="False" FontSize="10" 
                                           Visibility="{Binding DataContext.ShowZ, 
                                                                    RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl},
                                                                    Converter={StaticResource BoolToVisibilityConverter}}"/>
                            </Canvas>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                    <Setter Property="Effect" TargetName="FilledPathLine">
                                        <Setter.Value>
                                            <DropShadowEffect Color="LightSkyBlue" ShadowDepth="3" BlurRadius="10" />
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Thumb.Template>
                </Thumb>
            </DataTemplate>
            
            <!-- Datatemplate IMAGEOBJECT -->
            <DataTemplate DataType="{x:Type model:ImageObject}">
                <Thumb DragDelta="Thumb_Drag" 
                           IsEnabled="{Binding IsSelected,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}">
                    <Thumb.Template>
                        <ControlTemplate TargetType="Thumb">
                            <Canvas Visibility="{Binding IsVisible, Converter={StaticResource BoolToVisibilityConverter}}" IsHitTestVisible="{Binding DataContext.IsEditorModeEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}">
                                <Image Source="{Binding PictureUrl}" Opacity="{Binding Opacity}" Name="ImageObject1" Canvas.Top="{Binding ImagePositionY}" Canvas.Left="{Binding ImagePositionX}" Width="{Binding ImageWidth}" Height="{Binding ImageHeight}" Stretch="Fill" VerticalAlignment="Top" />
                                <TextBlock Canvas.Top="{Binding ZDisplayY}" Canvas.Left="{Binding ZDisplayX}" Width="60" TextAlignment="Center" Text="{Binding ZLevel}" FontWeight="Bold" IsHitTestVisible="False" FontSize="10" 
                                           Visibility="{Binding DataContext.ShowZ, 
                                                                    RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl},
                                                                    Converter={StaticResource BoolToVisibilityConverter}}"/>

                            </Canvas>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                    <Setter Property="Effect">
                                        <Setter.Value>
                                            <DropShadowEffect Color="LightSkyBlue" ShadowDepth="3" BlurRadius="10" />
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Thumb.Template>
                </Thumb>
            </DataTemplate>

        </Grid.Resources>
        <DockPanel Margin="12,12,12,0" Name="dockPanel1" Background="#0F000000" Height="113" VerticalAlignment="Top">
            <Grid Height="113" Name="grid2" Width="1256" Margin="0,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Top">
                <!--<Slider x:Name="uiScaleSlider" Value="1" Minimum="0.1" Maximum="4" Height="34" Width="200" Margin="443,36,613,43" />-->
                <Border BorderBrush="Silver" BorderThickness="1" Height="100" HorizontalAlignment="Left" Margin="6,7,0,0" Name="border1" VerticalAlignment="Top" Width="110">
                    <Grid Width="110">
                        <xctk:CheckListBox Height="73" HorizontalAlignment="Left" Margin="0,25,0,0" Name="checkListBox1" VerticalAlignment="Top" Width="110" SelectedValue="{Binding VisibleZLevels}" ItemsSource="{Binding PossibleZLevels}" ToolTip="Wähle aus welche Z Level sichtbar sein sollen." />
                        <CheckBox Content="Alle Z Anzeigen" IsChecked="{Binding IgnorZLevel}" Height="16" HorizontalAlignment="Left" Margin="3,5,0,0" Name="checkBox2" VerticalAlignment="Top" Width="93" ToolTip="Ignoriert die Z Level Auswahl und zeigt alle Elemente an." />
                    </Grid>
                </Border>
                <CheckBox IsChecked="{Binding ShowCreatureName}" Content="Namen Anzeigen" Height="16" HorizontalAlignment="Left" Margin="133,13,0,0" Name="checkBox4" VerticalAlignment="Top" />
            </Grid>
        </DockPanel>
        <DockPanel Margin="12,131,0,12" Name="dockPanel2" HorizontalAlignment="Left" Width="200" Background="#12000000"></DockPanel>
        <DockPanel Margin="220,131,12,11" Name="ArenaGridContainer"></DockPanel>
        
        <Grid Name="grid1" Width="200" ClipToBounds="True" IsManipulationEnabled="False" Margin="12,131,0,0" HorizontalAlignment="Left" Height="958" VerticalAlignment="Top">
            <Grid.RowDefinitions>
                <RowDefinition Height="50*" />
                <RowDefinition Height="302" />
                <RowDefinition Height="87" />
                <RowDefinition Height="68*" />
                <RowDefinition Height="451*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="24*" />
                <ColumnDefinition Width="160" />
                <ColumnDefinition Width="24*" />
            </Grid.ColumnDefinitions>
            <xctk:ColorPicker Grid.Column="1" Grid.Row="1" SelectedColor="{Binding SelectedColor}" HorizontalAlignment="Right" Margin="0,7,0,0" Name="colorPicker1" VerticalAlignment="Top" Width="88" />
            <local:SliderWithDisplayTextBox Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left" x:Name="sliderWithDisplayTextBox_StrokeThickness" SliderValue="{Binding StrokeThickness, Mode=TwoWay}" TickFrequencyValue="1" SliderLabelTextValue="Linien Stärke" SliderMinValue="1" SliderMaxValue="30" SliderMinTextValue="1" SliderMaxTextValue="30" Margin="0,64,0,0" Width="160" Height="58" VerticalAlignment="Top" />
            <local:SliderWithDisplayTextBox Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left" Margin="0,128,0,0" x:Name="sliderWithDisplayTextBox_Opacity" SliderValue="{Binding Opacity, Mode=TwoWay}" VerticalAlignment="Top" SliderMinValue="0.1" SliderMaxValue="1" TickFrequencyValue="0.1" SliderLabelTextValue="Transparenz" SliderMinTextValue="10%" SliderMaxTextValue="100%" Width="160" />
            <local:SliderWithDisplayTextBox Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left" Margin="0,192,0,0" x:Name="sliderWithDisplayTextBox_ObjectSize" SliderValue="{Binding ObjectSize, Mode=TwoWay}" Height="57" VerticalAlignment="Top" SliderMinValue="0.3" SliderMaxValue="3" SliderLabelTextValue="Objektgröße" SliderMinTextValue="0.3x" SliderMaxTextValue="3x" TickFrequencyValue="0.1" Width="160" />
            <xctk:ColorPicker HorizontalAlignment="Left" Margin="72,35,0,0" Name="colorPicker2" SelectedColor="{Binding SelectedFillColor}" VerticalAlignment="Top" Width="88" Grid.Column="1" Grid.Row="1" />
            <Label Content="Line Color" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left" Name="label1" Width="56" FontSize="10" Margin="10,7,0,273" />
            <Label Content="Fill Color" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left" Name="label2" Width="56" FontSize="10" Margin="10,29,0,0" Height="28" VerticalAlignment="Top" />
            <ToggleButton Grid.Column="1" Grid.Row="3" IsChecked="{Binding CreateLine, Mode=TwoWay}" Content="[1] Line" Name="PathLineButton" Height="25" HorizontalAlignment="Left" Width="77" VerticalAlignment="Top" />
            <ToggleButton Grid.Column="1" Grid.Row="3" IsChecked="{Binding CreateFilledLine, Mode=TwoWay}" Content="[2] Fläche" Name="FilledPathLineButton" Height="25" HorizontalAlignment="Right" Width="77" VerticalAlignment="Top" />
            <Grid Grid.Row="4" Name="PictureButtonGrid" Grid.Column="1" Height="439" VerticalAlignment="Top">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50" />
                    <ColumnDefinition Width="50" />
                    <ColumnDefinition Width="50" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <!--<RowDefinition Height="5" />-->
                    <RowDefinition Height="50" />
                    <RowDefinition Height="50" />
                    <RowDefinition Height="50" />
                    <RowDefinition Height="50" />
                    <RowDefinition Height="50" />
                    <RowDefinition Height="50" />
                    <RowDefinition Height="50" />
                </Grid.RowDefinitions>
            </Grid>
            <Button Content="Ebene +" Grid.Column="1" Grid.Row="3" Height="23" HorizontalAlignment="Left" Margin="0,31,0,0" Name="ButtonEbeneHigher" VerticalAlignment="Top" Width="77" Click="ButtonEbeneHigher_Click" />
            <Button Content="Ebene -" Grid.Column="1" Grid.Row="3" Height="23" HorizontalAlignment="Left" Margin="83,31,0,0" Name="ButtonEbeneLower" VerticalAlignment="Top" Width="77" Click="ButtonEbeneLower_Click" />
            <local:SliderWithDisplayTextBox Grid.Column="1" Grid.Row="2" HorizontalAlignment="Left" Margin="0,1,0,0" x:Name="sliderWithDisplayTextBox_ZLevel" SliderValue="{Binding ZLevel, Mode=TwoWay}" VerticalAlignment="Top" SliderMinValue="0" SliderMaxValue="20" SliderLabelTextValue="Z-Level" SliderMinTextValue="0" SliderMaxTextValue="20" TickFrequencyValue="1" Width="160" />
            <CheckBox Content="Z-Level Anzeigen" IsChecked="{Binding ShowZ}" Grid.Column="1" Grid.Row="2" Height="18" HorizontalAlignment="Left" Margin="25,65,0,0" Name="checkBox1" VerticalAlignment="Top" Width="113" />
            <CheckBox Content="Editor Modus" IsChecked="{Binding IsEditorModeEnabled}" Height="20" HorizontalAlignment="Left" Margin="25,14,0,0" Name="checkBox3" VerticalAlignment="Top" Width="113" FontSize="14" FontStyle="Normal" FontWeight="SemiBold" ToolTip="Wenn deaktiviert, können nur noch Helden und Monster bewegt werden" Checked="checkBox3_Checked" Grid.Column="1" />
        </Grid>
        <wpfxc:ZoomControl x:Name="ArenaScrollViewer" Margin="220,131,12,12" Background="#FF367536" 
                           MaxZoom="3" MinZoom="0.08" MaxZoomDelta="3" ZoomDeltaMultiplier="50"
                           Mode="Original" TranslateX="0" TranslateY="0"
                           LimitToContent="True" WheelZoomsAlone="True" PanWithoutModifier="True"
                           ModifierKeyPan="Shift" ModifierKeyZoom="Control" ModifierKeyZoomBox="Alt">
        <!--<local:DragScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" x:Name="ArenaScrollViewer" ScrollChanged="ArenaScrollViewer_ScrollChanged" Margin="220,131,12,12">-->
            <ListBox ItemsSource="{Binding BattlegroundObjects}" SelectedItem="{Binding SelectedObject, Mode=TwoWay}" Name="ArenaGrid" MouseLeftButtonDown="ArenaGrid_MouseLeftButtonDown" MouseLeftButtonUp="ArenaGrid_MouseLeftButtonUp" MouseMove="ArenaGrid_MouseMove" Height="10000" Width="10000" PreviewMouseLeftButtonUp="ArenaGrid_PreviewMouseLeftButtonUp" PreviewMouseLeftButtonDown="ArenaGrid_PreviewMouseLeftButtonDown" SelectionChanged="ArenaGrid_SelectionChanged" SelectionMode="Multiple">
                <ListBox.Template>
                    <ControlTemplate>
                        <Border>
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1" Opacity=".3">
                                    <GradientStop Color="White" Offset="0" />
                                    <GradientStop Color="GhostWhite" Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border>
                                <Border.Background> <!-- Hexgrid -->
                                    <VisualBrush TileMode="Tile" Viewport="0,0,200,200" ViewportUnits="Absolute">
                                        <VisualBrush.Visual>
                                            <!--<Rectangle Stroke="Darkgray" StrokeThickness="1" Height="50" Width="50" StrokeDashArray="5 3" />-->
                                            <Path Stroke="White" StrokeThickness="3" StrokeDashArray="5 3" Data="{Binding TilePathData}" />
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Border.Background>
                                <ItemsPresenter />
                            </Border>
                        </Border>
                    </ControlTemplate>
                </ListBox.Template>
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas IsItemsHost="True" Background="Transparent"></Canvas>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
            </ListBox>
        <!--    <local:DragScrollViewer.InputBindings></local:DragScrollViewer.InputBindings>
        </local:DragScrollViewer> -->
        </wpfxc:ZoomControl>
    </Grid>
    <UserControl.InputBindings>
        <KeyBinding Key="Delete" Command="{Binding DeleteCommand}" />
    </UserControl.InputBindings>
</UserControl>
