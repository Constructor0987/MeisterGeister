<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:MeisterGeister.View.Bodenplan"
             xmlns:xctk="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
             xmlns:xctkzb="clr-namespace:Xceed.Wpf.Toolkit.Zoombox;assembly=Xceed.Wpf.Toolkit"
             xmlns:Kampf="clr-namespace:MeisterGeister.View.Kampf"
             xmlns:model="clr-namespace:MeisterGeister.ViewModel.Bodenplan.Logic"
             xmlns:kampflogic="clr-namespace:MeisterGeister.ViewModel.Kampf.Logic"
             xmlns:KampfManöver="clr-namespace:MeisterGeister.ViewModel.Kampf.Logic.Manöver"
             xmlns:ViewGeneral="clr-namespace:MeisterGeister.View.General"
             xmlns:localsolution="clr-namespace:MeisterGeister"
             xmlns:dbmodel="clr-namespace:MeisterGeister.Model"
             xmlns:wpfxc="clr-namespace:WPFExtensions.Controls;assembly=WPFExtensions"
             xmlns:wpfxb="clr-namespace:WPFExtensions.AttachedBehaviours;assembly=WPFExtensions"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:s="clr-namespace:MeisterGeister.View.Bodenplan"
             xmlns:ee="http://schemas.microsoft.com/expression/2010/effects" x:Class="MeisterGeister.View.Bodenplan.BattlegroundView"
             mc:Ignorable="d" 
             x:Name="view"
             d:DesignHeight="1100" d:DesignWidth="1280" Unloaded="view_Unloaded">
    <!--KeyDown="UserControl_KeyDown" KeyUp="UserControl_KeyUp"-->
    <UserControl.Resources>

        <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>
        <ViewGeneral:ColorToSolidBrushValueConverter x:Key="ColorConverter"/>
        <ViewGeneral:IsNullOrEmptyConverter x:Key="IsNullOrEmptyConverter"/>
        <ViewGeneral:IsEqualOrGreaterThanConverter x:Key="IsEqualOrGreaterThanConverter1"/>
        <ViewGeneral:IsEqualOrGreaterThanVisibleConverter x:Key="IsEqualOrGreaterThanVisibleConverter1"/>
        <model:PositionToImageConverter x:Key="PositionToImageConverter1" />
        <BitmapImage x:Key="FragezeichenBild" UriSource="/DSA MeisterGeister;component/Images/Icons/General/fragezeichen.png" />
        
        <Style TargetType="ProgressBar">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ProgressBar" >
                        <Grid x:Name="Root">
                            <Border Name="PART_Track" CornerRadius="2" Background="LightGray" BorderBrush="Gray" BorderThickness="1" />
                            <Border Name="PART_Indicator" CornerRadius="1" Background="#FF1FF31F" BorderBrush="Gray" BorderThickness="1" HorizontalAlignment="Left" >
                                <!--<Border.Background>
                                    <LinearGradientBrush  >
                                        <GradientStop Color="Red" Offset="0"/>
                                        <GradientStop Color="Yellow" Offset="0.2"/>
                                        <GradientStop Color="#FF1FF31F" Offset="0.867"/>
                                    </LinearGradientBrush>
                                </Border.Background>-->
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!-- Getting vertical style working using technique described here: http://stackoverflow.com/a/6849237/7532 -->
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter TargetName="Root" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="270" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="Root" Property="Width" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Height}" />
                                <Setter TargetName="Root" Property="Height" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Width}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <UserControl.InputBindings>
        <KeyBinding Key="Delete" Command="{Binding DeleteCommand}" />
    </UserControl.InputBindings>
    <Grid>
        <Grid.Resources>
            <ViewGeneral:ColorToSolidBrushValueConverter x:Key="ColorToBrushConverter" />
            <kampflogic:DataTypeConverter x:Key="DataTypeConverter1"/>
            <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
            <ViewGeneral:ImagePathConverter x:Key="ImagePathConverter" />
            <ViewGeneral:EnumItemsSource x:Key="ZeichenValues" Type="{x:Type model:ZeichenModus}"/>
        </Grid.Resources>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="{Binding MeisterBGWidth, UpdateSourceTrigger=PropertyChanged}" />
            </Grid.ColumnDefinitions>
            <Expander Grid.Column="0" IsExpanded="False" ExpandDirection="Right" HorizontalAlignment="Left" Margin="0,24,0,0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Expander Grid.Column="0" IsExpanded="True" >
                        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" VerticalAlignment="Top" >
                            <StackPanel Orientation="Horizontal">
                                <Grid x:Name="grid1" Width="200" ClipToBounds="True" IsManipulationEnabled="False" Margin="12,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="24" />
                                        <RowDefinition Height="225" />
                                        <RowDefinition Height="87" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="24*" />
                                        <ColumnDefinition Width="160" />
                                        <ColumnDefinition Width="24*" />
                                    </Grid.ColumnDefinitions>
                                    <CheckBox Content="Editor Modus" IsChecked="{Binding IsEditorModeEnabled}" Height="20" HorizontalAlignment="Left" Margin="25,5,0,0" x:Name="checkBox3" VerticalAlignment="Top" Width="113" FontSize="14" FontStyle="Normal" FontWeight="SemiBold" ToolTip="Wenn deaktiviert, können nur noch Helden und Monster bewegt werden" Grid.Column="1" />
                                    <StackPanel Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left">
                                        <local:SliderWithDisplayTextBox x:Name="sliderWithDisplayTextBox_AlphaChannel" SliderValue="{Binding SelectedFillColorAlpha, Mode=TwoWay}" TickFrequencyValue="0.1" SliderLabelTextValue="Alpha Kanal" SliderMinValue="0" SliderMaxValue="1" SliderMinTextValue="0" SliderMaxTextValue="1" Width="160" />
                                        <local:SliderWithDisplayTextBox x:Name="sliderWithDisplayTextBox_StrokeThickness" SliderValue="{Binding StrokeThickness, Mode=TwoWay}" TickFrequencyValue="1" SliderLabelTextValue="Linien Stärke" SliderMinValue="1" SliderMaxValue="30" SliderMinTextValue="1" SliderMaxTextValue="30" Width="160" />
                                        <local:SliderWithDisplayTextBox x:Name="sliderWithDisplayTextBox_Opacity" SliderValue="{Binding Opacity, Mode=TwoWay}" SliderMinValue="0.1" SliderMaxValue="1" TickFrequencyValue="0.1" SliderLabelTextValue="Transparenz" SliderMinTextValue="10%" SliderMaxTextValue="100%" Width="160" />
                                        <local:SliderWithDisplayTextBox x:Name="sliderWithDisplayTextBox_ObjectSize" SliderValue="{Binding ObjectSize, Mode=TwoWay}" SliderMinValue="0.3" SliderMaxValue="20" SliderLabelTextValue="Objektgröße" SliderMinTextValue="0.3x" SliderMaxTextValue="20x" TickFrequencyValue="0.1" Width="160" />
                                    
                                        <local:SliderWithDisplayTextBox Grid.Column="1" Grid.Row="2" HorizontalAlignment="Left" Margin="0,10,0,0" x:Name="sliderWithDisplayTextBox_ZLevel" SliderValue="{Binding ZLevel, Mode=TwoWay}" VerticalAlignment="Top" SliderMinValue="0" SliderMaxValue="20" SliderLabelTextValue="Z-Level" SliderMinTextValue="0" SliderMaxTextValue="20" TickFrequencyValue="1" Width="160" />
                                        <CheckBox Content="Z-Level Anzeigen" IsChecked="{Binding ShowZ}" Grid.Column="1" Grid.Row="2" Height="18" x:Name="checkBox1" VerticalAlignment="Top" Width="113" />
                                    </StackPanel>
                                    
                                    <ToggleButton Grid.Column="1" Grid.Row="2" IsChecked="{Binding CreateLine, Mode=OneWay}" Content="[1] Line" x:Name="PathLineButton" Height="25" HorizontalAlignment="Left" Width="77" VerticalAlignment="Top" />
                                    <ToggleButton Grid.Column="1" Grid.Row="2" IsChecked="{Binding CreateFilledLine, Mode=OneWay}" Content="[2] Fläche" x:Name="FilledPathLineButton" Height="25" HorizontalAlignment="Right" Width="77" VerticalAlignment="Top" />

                                    <Button Content="Ebene +" Grid.Column="1" Grid.Row="2" Height="23" HorizontalAlignment="Left" Margin="0,27,0,0" x:Name="ButtonEbeneHigher" VerticalAlignment="Top" Width="77" Click="ButtonEbeneHigher_Click" />
                                    <Button Content="Ebene -" Grid.Column="1" Grid.Row="2" Height="23" HorizontalAlignment="Left" Margin="83,27,0,0" x:Name="ButtonEbeneLower" VerticalAlignment="Top" Width="77" Click="ButtonEbeneLower_Click" />
                                    <Button Content="Ebene max" Grid.Column="1" Grid.Row="2" Height="23" HorizontalAlignment="Left" Margin="0,53,0,0" x:Name="ButtonEbeneHigherMax" VerticalAlignment="Top" Width="77" Click="ButtonEbeneHigherMax_Click" />
                                    <Button Content="Ebene min" Grid.Column="1" Grid.Row="2" Height="23" HorizontalAlignment="Left" Margin="82,53,0,0" x:Name="ButtonEbeneLowerMin" VerticalAlignment="Top" Width="77" Click="ButtonEbeneLowerMin_Click" />
                                    </Grid>
                                <StackPanel Orientation="Vertical">
                                    <!-- Zeichenmodi -->
                                    <ListBox SelectedValue="{Binding ZeichenModus}">
                                        <ListBox.Resources>
                                            <ViewGeneral:DictionaryValueConverter x:Key="toolImages">
                                                <ViewGeneral:DictionaryValueConverter.Values>
                                                    <BitmapImage x:Key="Auswahl" UriSource="/DSA MeisterGeister;component/Images/Icons/Zeichnen/auswahlpfeil.png" />
                                                    <!--<BitmapImage x:Key="Stift" UriSource="/DSA MeisterGeister;component/Images/Icons/Zeichnen/stift.png" />-->
                                                    <BitmapImage x:Key="Linie" UriSource="/DSA MeisterGeister;component/Images/Icons/Zeichnen/linie.png" />
                                                    <BitmapImage x:Key="Fläche" UriSource="/DSA MeisterGeister;component/Images/Icons/Zeichnen/polygon.png" />
                                                    <!--<BitmapImage x:Key="Bild" UriSource="/DSA MeisterGeister;component/Images/Icons/Zeichnen/bild.png" />
                                                    <BitmapImage x:Key="Licht" UriSource="/DSA MeisterGeister;component/Images/Icons/Zeichnen/fackel.png" />
                                                    <BitmapImage x:Key="Gegner" UriSource="/DSA MeisterGeister;component/Images/Icons/Zeichnen/orc.png" />-->
                                                    <BitmapImage x:Key="None" UriSource="/DSA MeisterGeister;component/Images/Icons/General/fragezeichen.png" />
                                                </ViewGeneral:DictionaryValueConverter.Values>
                                            </ViewGeneral:DictionaryValueConverter>
                                        </ListBox.Resources>
                                        <ListBox.ItemsSource>
                                            <StaticResource ResourceKey="ZeichenValues"/>
                                        </ListBox.ItemsSource>
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <Image Height="30" Width="30" ToolTip="{Binding FallbackValue=None}" Source="{Binding Converter={StaticResource toolImages}}"/>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                    <StackPanel Grid.Column="1" Grid.Row="1" Orientation="Horizontal">
                                        <Grid Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left">
                                            <xctk:ColorPicker SelectedColor="{Binding SelectedColor}" x:Name="colorPicker1" VerticalAlignment="Top" Width="22" Height="22" ShowDropDownButton="False" ToolTip="Linienfarbe"/>
                                            <Polygon Fill="White" IsHitTestVisible="False" Points="1,19.5 1,1 20.5,1" />
                                            <Polygon Fill="White" IsHitTestVisible="False" Points="2.5,21 22,21 22,2.5" />
                                        </Grid>
                                        <xctk:ColorPicker HorizontalAlignment="Left" x:Name="colorPicker2" SelectedColor="{Binding SelectedFillColor}" VerticalAlignment="Top" Width="22" Height="22" ShowDropDownButton="False" ToolTip="Füllfarbe"/>
                                    </StackPanel>
                                </StackPanel>
                            </StackPanel>
                        </ScrollViewer>
                    </Expander>

                    <Expander Grid.Row="1" IsExpanded="True">
                        <Grid Width="200" ClipToBounds="True" IsManipulationEnabled="False" Margin="12,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Top">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <Button Content="Bild hinzu" Height="23" HorizontalAlignment="Left" x:Name="ButtonBildhinzu" VerticalAlignment="Top" Width="77" Click="ButtonBildhinzun_Click" />

                            <!--<ScrollViewer x:Name="MyScrollViewer" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Visible" Grid.Row="1" VerticalAlignment="Top" Grid.ColumnSpan="2" Margin="0,0,3,0">-->
                            <ListBox Grid.Row="1" VerticalAlignment="Top" Grid.ColumnSpan="2" Margin="0,0,3,0" Width="165" x:Name="lstbxPictureButton" MinHeight="200" ScrollViewer.VerticalScrollBarVisibility="Auto" />                                
                                    <!--WrapPanel x:Name="PictureButtonWrapPanel" Width="165" VerticalAlignment="Stretch" MinHeight="200" Margin="0,0,1,0"/>-->
                            <!--</ScrollViewer>-->
                        </Grid>
                    </Expander>
                </Grid>
            </Expander>

            <Grid x:Name="grdSpielfeld" Grid.Column="1" Margin="0,24,0,0">
                <wpfxc:ZoomControl Grid.Column="1" x:Name="ArenaScrollViewer" Background="#FF367536" 
                        MaxZoom="2" MinZoom="0.05" MaxZoomDelta="2" ZoomDeltaMultiplier="50" Mode="Original" 
                        TranslateX="{Binding MeisterZoomTransX, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                        TranslateY="{Binding MeisterZoomTransY, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                        Zoom="{Binding MeisterZoom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        LimitToContent="True" WheelZoomsAlone="True" PanWithoutModifier="True"
                        ModifierKeyPan="Shift" ModifierKeyZoom="Control" ModifierKeyZoomBox="Alt"  VerticalAlignment="Bottom">
                    <Grid x:Name="ArenaGridTop" >
                        <Image x:Name="imgbtnBGStoppen" Source="{Binding BackgroundImage}" VerticalAlignment="Top" HorizontalAlignment="Left" 
                               Width="{Binding BackgroundOffsetSize, UpdateSourceTrigger=PropertyChanged}" 
                               Margin="{Binding OffsetBackgroudMargin, UpdateSourceTrigger=PropertyChanged}" />
                        <Image x:Name="imgFog" Source="{Binding FogImage}" Opacity="0.5" VerticalAlignment="Top" HorizontalAlignment="Left" Width="10000" Height="10000" 
                                Visibility="{Binding useFog, Converter={StaticResource BooleanToVisibilityConverter1}, UpdateSourceTrigger=PropertyChanged}"/>
                        <!--ObjektListe.View-->
                        <ListBox ItemsSource="{Binding BattlegroundObjects}" SelectedItem="{Binding SelectedObject, Mode=TwoWay}" x:Name="ArenaGrid" 
                                 PreviewMouseRightButtonDown="ArenaGrid_PreviewRightMouseButtonDown"  
                                 MouseMove="ArenaGrid_MouseMove" DragOver="ArenaGrid_DragOver"
                                 MouseLeftButtonDown="ArenaGrid_MouseLeftButtonDown" 
                                 MouseLeftButtonUp="ArenaGrid_MouseLeftButtonUp" 
                                 PreviewMouseLeftButtonUp="ArenaGrid_PreviewMouseLeftButtonUp" 
                                 SelectionChanged="ArenaGrid_SelectionChanged" 
                                 Drop="ArenaGrid_Drop" PreviewMouseLeftButtonDown="ArenaGrid_PreviewMouseLeftButtonDown"
                                 GiveFeedback="ArenaGrid_GiveFeedback"
                                 Height="10000" Width="10000" SelectionMode="Single" AllowDrop="True" >
                            <!---->
                            <ListBox.Style>
                                <Style TargetType="ListBox">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsPointerVisible}" Value="True">
                                            <Setter Property="Cursor" Value="Pen" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ListBox.Style>
                            <ListBox.Resources>
                                
                                <!--Datatemplate BattlegroundCreature (Hero & Enemy)-->
                                <DataTemplate DataType="{x:Type model:BattlegroundCreature}">
                                <Thumb DragDelta="Thumb_Drag">
                                    <!--IsEnabled="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}">-->
                                        <Thumb.Template>
                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                <Canvas >
                                                    <Canvas.Style>
                                                        <Style TargetType="Canvas">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding IsVisible}" Value="False">
                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding IsMoving}" Value="True">
                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Canvas.Style>
                                                    <Canvas.Effect>
                                                        <DropShadowEffect Color="{Binding DataContext.Farbmarkierung, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}, UpdateSourceTrigger=PropertyChanged}" ShadowDepth="10" BlurRadius="20" />
                                                    </Canvas.Effect>

                                                    <!--Lichtquelle-->
                                                    <Ellipse Opacity="0.4" Stroke="#FFF0FC00" StrokeThickness="2" 
                                                             Width="{Binding ki.LichtquellePixelRadius}" Height="{Binding ki.LichtquellePixelRadius}"
                                                             Canvas.Left="{Binding MidCreatureX, UpdateSourceTrigger=PropertyChanged}" Canvas.Top="{Binding MidCreatureY, UpdateSourceTrigger=PropertyChanged}">
                                                        <Ellipse.Fill>
                                                            <RadialGradientBrush >
                                                                <GradientStop Color="Transparent" Offset="1"/>
                                                                <GradientStop Color="#FFF0FC00" Offset=".8"/>
                                                            </RadialGradientBrush>
                                                        </Ellipse.Fill>
                                                        <Ellipse.Style>
                                                            <Style TargetType="{x:Type Ellipse}">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding ki.LichtquellePixel}" Value="0">
                                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Ellipse.Style>
                                                    </Ellipse>

                                                    <!--SightArea-->
                                                    <Path IsHitTestVisible="False" StrokeThickness="1" Data="{Binding SightAreaGeometryData}" Opacity="0.2">
                                                        <Path.Style>
                                                            <Style TargetType="Path">
                                                                <Setter Property="Visibility" Value="Collapsed" />
                                                                <Setter Property="Fill" Value="Yellow"/>
                                                                <Setter Property="Stroke" Value="Yellow" />
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding VM.ShowSightArea, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                                                        <Setter Property="Visibility" Value="Visible" />
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding ki.Kämpfer.IsHeld}" Value="False">
                                                                        <Setter Property="Fill" Value="DarkOrange"/>
                                                                        <Setter Property="Stroke" Value="DarkOrange" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Path.Style>
                                                    </Path>

                                                    <!--Frame for Heroe Picture-->
                                                    <Rectangle RadiusX="12" RadiusY="12" Canvas.Top="{Binding CreatureY, UpdateSourceTrigger=PropertyChanged}" 
                                                               Canvas.Left="{Binding CreatureX, UpdateSourceTrigger=PropertyChanged}" 
                                                               Width="{Binding CreatureWidth, UpdateSourceTrigger=PropertyChanged}" 
                                                               Height="{Binding CreatureHeight, UpdateSourceTrigger=PropertyChanged}" ToolTip="{Binding Name}" Stroke="#FF5D5757">
                                                        <Rectangle.Fill>
                                                            <ImageBrush Opacity="{Binding Opacity}" Stretch="Fill">
                                                                <ImageBrush.ImageSource>
                                                                    <Binding Path="Bild" IsAsync="True" Mode="OneWay" Converter="{StaticResource ImagePathConverter}">
                                                                        <Binding.FallbackValue>
                                                                            <ImageSource>
                                                                                /DSA MeisterGeister;component/Images/Icons/General/fragezeichen.png
                                                                            </ImageSource>
                                                                        </Binding.FallbackValue>
                                                                        <Binding.TargetNullValue>
                                                                            <ImageSource>
                                                                                /DSA MeisterGeister;component/Images/Icons/General/fragezeichen.png
                                                                            </ImageSource>
                                                                        </Binding.TargetNullValue>
                                                                    </Binding>
                                                                </ImageBrush.ImageSource>
                                                            </ImageBrush>
                                                        </Rectangle.Fill>
                                                    </Rectangle>

                                                    <!---Z-Level-->
                                                    <TextBlock Canvas.Top="{Binding ZDisplayY}" Canvas.Left="{Binding ZDisplayX}" Width="60" TextAlignment="Center" Text="{Binding ZLevel}" FontWeight="Bold" IsHitTestVisible="False" FontSize="10" 
                                                        Visibility="{Binding DataContext.ShowZ, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>

                                                    <!--Wunden-->
                                                    <Image Canvas.Top="{Binding ZDisplayY}" Canvas.Left="{Binding ZDisplayX}" Width="40" Height="40" Source="/DSA MeisterGeister;component/Images/Icons/Schaden.png" 
                                                            Margin="-35,30,0,0" >
                                                        <Image.Style>
                                                            <Style TargetType="{x:Type Image}">
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Wunden, ConverterParameter=1, Converter={StaticResource IsEqualOrGreaterThanConverter1}}" Value="True" >
                                                                        <Setter Property="Visibility" Value="Visible"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding WundenByZone[Unlokalisiert], ConverterParameter=1, Converter={StaticResource IsEqualOrGreaterThanConverter1}}" Value="True" >
                                                                        <Setter Property="Visibility" Value="Visible"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding WundenByZone[Kopf], ConverterParameter=1, Converter={StaticResource IsEqualOrGreaterThanConverter1}}" Value="True" >
                                                                        <Setter Property="Visibility" Value="Visible"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding WundenByZone[Brust], ConverterParameter=1, Converter={StaticResource IsEqualOrGreaterThanConverter1}}" Value="True" >
                                                                        <Setter Property="Visibility" Value="Visible"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding WundenByZone[ArmR], ConverterParameter=1, Converter={StaticResource IsEqualOrGreaterThanConverter1}}" Value="True" >
                                                                        <Setter Property="Visibility" Value="Visible"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding WundenByZone[ArmL], ConverterParameter=1, Converter={StaticResource IsEqualOrGreaterThanConverter1}}" Value="True" >
                                                                        <Setter Property="Visibility" Value="Visible"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding WundenByZone[Bauch], ConverterParameter=1, Converter={StaticResource IsEqualOrGreaterThanConverter1}}" Value="True" >
                                                                        <Setter Property="Visibility" Value="Visible"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding WundenByZone[BeinR], ConverterParameter=1, Converter={StaticResource IsEqualOrGreaterThanConverter1}}" Value="True" >
                                                                        <Setter Property="Visibility" Value="Visible"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding WundenByZone[BeinL], ConverterParameter=1, Converter={StaticResource IsEqualOrGreaterThanConverter1}}" Value="True" >
                                                                        <Setter Property="Visibility" Value="Visible"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Image.Style>
                                                    </Image>

                                                    <!--HinweisText-->
                                                    <TextBlock TextAlignment="Center" FontSize="14" TextWrapping="Wrap" FontStyle="Italic" Background="White" HorizontalAlignment="Center" VerticalAlignment="Bottom" Width="140"
                                                               Canvas.Top="{Binding CreatureNameY}" Canvas.Left="{Binding CreatureNameX}"  Margin="0,-220,0,0">
                                                        <TextBlock.Style>
                                                            <Style TargetType="{x:Type TextBlock}">
                                                                <Setter Property="Text" Value="{Binding HinweisText, UpdateSourceTrigger=PropertyChanged}" />
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding HinweisText}" Value="">
                                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBlock.Style>
                                                    </TextBlock>

                                                    <!---CreatureName-->
                                                    <TextBlock  Canvas.Top="{Binding CreatureNameY}" Canvas.Left="{Binding CreatureNameX}" Width="160" TextAlignment="Center" FontWeight="Normal" IsHitTestVisible="False" FontSize="17" >
                                                        <TextBlock.Style>
                                                            <Style TargetType="{x:Type TextBlock}">
                                                                <Setter Property="Text" Value="{Binding KämpferTempName, FallbackValue=''}" />
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding IsHeld}" Value="False">
                                                                        <Setter Property="Text" Value="{Binding KämpferTempName}" />
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding IsHeld}" Value="True">
                                                                            <Setter Property="Text" Value="{Binding Kurzname}" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBlock.Style>
                                                    </TextBlock>

                                                    <!--Lebensbalken-->
                                                    <ProgressBar Canvas.Top="{Binding CreatureY}" Canvas.Left="{Binding CreatureX}" 
                                                        Height="{Binding CreatureHeight}" Width="10" HorizontalAlignment="Left" Margin="-12,0,0,0"
                                                        Maximum="{Binding LebensenergieMax}" Minimum="0" VerticalAlignment="Top" 
                                                        Value="{Binding LebensenergieAktuell}" Orientation="Vertical" Background="#FF3DD81A"
                                                        Visibility="{Binding ShowLebensbalken, Converter={StaticResource BooleanToVisibilityConverter1}, UpdateSourceTrigger=PropertyChanged}" />

                                                    <!--Anführer-Krone-->
                                                    <Image Width="40" Height="40" Margin="0,-32,0, 0" Source="/DSA%20MeisterGeister;component/Images/Icons/Krone.png"
                                                           Visibility="{Binding ki.IstAnführer, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter1}}"
                                                           Canvas.Top="{Binding CreatureNameY}" Canvas.Left="{Binding CreatureNameX}" />

                                                    <!--Position-->
                                                    <Image Width="50" Height="50" Source="{Binding Position, Converter={StaticResource PositionToImageConverter1}, UpdateSourceTrigger=PropertyChanged}" 
                                                               Canvas.Top="{Binding CreatureNameY}" Canvas.Left="{Binding CreatureNameX}" />

                                                    <!--Angriff-Abwehraktionen-->
                                                    <Grid Canvas.Top="{Binding CreatureY, UpdateSourceTrigger=PropertyChanged}" Canvas.Left="{Binding CreatureX, UpdateSourceTrigger=PropertyChanged}" 
                                                          Margin="{Binding MarginCreatureATPAaktionen}" HorizontalAlignment="Left" >
                                                        <Slider VerticalAlignment="Bottom" Margin="-50,0,0,0"
                                                            Minimum="0" IsSnapToTickEnabled="True" Width="50" ToolTip="Aktionen umwandeln"
                                                            Maximum="{Binding ki.Aktionen, UpdateSourceTrigger=PropertyChanged}" 
                                                            Value="{Binding ki.Angriffsaktionen, UpdateSourceTrigger=PropertyChanged}"/>
                                                        <StackPanel Orientation="Horizontal" Margin="35,0,-3,0" >
                                                            <ViewGeneral:ImageDuplicator VerticalAlignment="Top" Padding="0" Anzahl="{Binding ki.VerbrauchteAngriffsaktionen, UpdateSourceTrigger=PropertyChanged}" ImageSource="/DSA%20MeisterGeister;component/Images/Icons/nahkampf_01_gestrichen.png" />
                                                            <ViewGeneral:ImageDuplicator VerticalAlignment="Top" Padding="0" Anzahl="{Binding ki.AngriffsaktionenÜbrig, UpdateSourceTrigger=PropertyChanged}" ImageSource="/DSA%20MeisterGeister;component/Images/Icons/nahkampf_01.png" />

                                                            <ViewGeneral:ImageDuplicator VerticalAlignment="Top" Padding="0" Anzahl="{Binding ki.VerbrauchteAbwehraktionen, UpdateSourceTrigger=PropertyChanged}" ImageSource="/DSA%20MeisterGeister;component/Images/Icons/schild_gestrichen.png" />
                                                            <ViewGeneral:ImageDuplicator VerticalAlignment="Top" Padding="0" Anzahl="{Binding ki.AbwehraktionenÜbrig, UpdateSourceTrigger=PropertyChanged}" ImageSource="/DSA%20MeisterGeister;component/Images/Icons/schild.png" />
                                                        </StackPanel>

                                                        <TextBlock Margin="-60,0,0,0" Text="{Binding ki.AktManöverInfo.Manöver.VerbleibendeDauer, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" VerticalAlignment="Center" Width="14" FontSize="9" FontWeight="Bold"  />
                                                    </Grid>

                                                    <!--Aktionsbuttons rechts-->
                                                    <Grid Canvas.Top="{Binding CreatureY, UpdateSourceTrigger=PropertyChanged}" Canvas.Left="{Binding CreatureX, UpdateSourceTrigger=PropertyChanged}"
                                                          Height="{Binding CreatureAktionsbuttonsPos}" Margin="{Binding MarginCreatureAktionsbuttons}" Background="Transparent" >
                                                        <!--Visibility="{Binding IsSelected, Converter={StaticResource BooleanToVisibilityConverter1}}"-->
                                                        <Grid.Style>
                                                            <Style TargetType="Grid">
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                                        <Setter Property="Visibility" Value="Visible"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Grid.Style>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                        </Grid.RowDefinitions>

                                                    <MenuItem Grid.Row="0" x:Name="miKämpferAttacke" Height="27" Width="27" BorderThickness="1" HorizontalAlignment="Center" 
                                                              Command="{Binding DataContext.OnBtnUmwandelnAttacke, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                                                              CommandParameter="{Binding}"
                                                              >
                                                        <!--PreviewMouseLeftButtonDown="ArenaGrid_PreviewMouseLeftButtonDown"--> 
                                                        <MenuItem.Icon>
                                                                <Image Source="/DSA%20MeisterGeister;component/Images/Icons/nahkampf_01.png" MaxWidth="24" Margin="-1,-3,-3,-3" />
                                                            </MenuItem.Icon>
                                                            <!--<MenuItem.ItemContainerStyle>
                                                                <Style TargetType="{x:Type MenuItem}" >
                                                                    <Setter Property="Command" Value="{Binding DataContext.OnBtnUmwandelnAttacke, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
                                                                    <Setter Property="CommandParameter" Value="{Binding}"/>
                                                                </Style>
                                                            </MenuItem.ItemContainerStyle>-->
                                                            <MenuItem.ItemTemplate>
                                                                <DataTemplate>
                                                                    <TextBlock Text="{Binding Name}"/>
                                                                </DataTemplate>
                                                            </MenuItem.ItemTemplate>
                                                        </MenuItem>                            

                                                        <MenuItem Grid.Row="1" x:Name="miKämpferFernkampf" Height="27" Width="27" BorderThickness="1" HorizontalAlignment="Center">
                                                            <MenuItem.Style>
                                                                <Style TargetType="{x:Type MenuItem}">
                                                                    <Setter Property="ItemsSource" Value="{x:Null}" />
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding ki.Kämpfer.Fernkampfwaffen.Count, ConverterParameter=2, Converter={StaticResource IsEqualOrGreaterThanConverter1}}" Value="false">
                                                                            <Setter Property="Command" Value="{Binding DataContext.OnBtnUmwandelnFernkampf, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                                                                        </DataTrigger>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding ki.Kämpfer.Fernkampfwaffen.Count, ConverterParameter=2, Converter={StaticResource IsEqualOrGreaterThanConverter1}}" Value="true" />
                                                                                <Condition Binding="{Binding IsHeld }" Value="True" />
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="ItemsSource" Value="{Binding ki.Kämpfer.Fernkampfwaffen}" />
                                                                        </MultiDataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </MenuItem.Style>
                                                            <MenuItem.Icon>
                                                                <Image Source="/DSA%20MeisterGeister;component/Images/Icons/fernkampf.png" MaxWidth="24" Margin="-1,-3,-3,-3" />
                                                            </MenuItem.Icon>
                                                            <MenuItem.ItemContainerStyle>
                                                                <!--BasedOn="{StaticResource {x:Type MenuItem}}"-->
                                                                <Style TargetType="{x:Type MenuItem}" >
                                                                <Setter Property="Command" Value="{Binding DataContext.OnBtnUmwandelnFernkampf, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
                                                                    <Setter Property="CommandParameter" Value="{Binding}"/>
                                                                </Style>
                                                            </MenuItem.ItemContainerStyle>
                                                            <MenuItem.ItemTemplate>
                                                                <DataTemplate>
                                                                    <TextBlock Text="{Binding Name}"/>
                                                                </DataTemplate>
                                                            </MenuItem.ItemTemplate>
                                                        </MenuItem>

                                                        <MenuItem Grid.Row="2" x:Name="miKämpferZauber" Height="27" Width="27" BorderThickness="1" HorizontalAlignment="Center"
                                                                      Visibility="{Binding ki.Kämpfer.Magiebegabt, Converter={StaticResource BooleanToVisibilityConverter1}}" >
                                                            <MenuItem.Style>
                                                                <Style TargetType="{x:Type MenuItem}">
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding IsHeld }" Value="False">
                                                                            <Setter Property="ItemsSource" Value="{Binding ki.Kämpfer.GegnerBase.GegnerBase_Zauber}" />
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding IsHeld }" Value="True">
                                                                            <Setter Property="ItemsSource" Value="{Binding ki.Kämpfer.Held_Zauber}" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </MenuItem.Style>
                                                            <MenuItem.Icon>
                                                                <Image Source="/DSA%20MeisterGeister;component/Images/Icons/magie.png" MaxWidth="24" Margin="-1,-3,-3,-3" />
                                                            </MenuItem.Icon>
                                                            <MenuItem.ItemContainerStyle>
                                                                <Style TargetType="{x:Type MenuItem}"  >
                                                                    <!--BasedOn="{StaticResource {x:Type MenuItem}}"-->
                                                                    <Setter Property="Command" 
                                                                                Value="{Binding DataContext.SelManöver.UmwandelnZauber, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
                                                                    <!--Value="{Binding mi.UmwandelnZauber, RelativeSource={RelativeSource}}"/>-->
                                                                    <Setter Property="CommandParameter" Value="{Binding}"/>
                                                                </Style>
                                                            </MenuItem.ItemContainerStyle>
                                                            <MenuItem.ItemTemplate>
                                                                <DataTemplate>
                                                                    <TextBlock Text="{Binding Zauber.Name}"/>
                                                                </DataTemplate>
                                                            </MenuItem.ItemTemplate>
                                                        </MenuItem>

                                                        <MenuItem Grid.Row="3" x:Name="miKämpferSonstiges" Height="27" Width="27" BorderThickness="1" HorizontalAlignment="Center">
                                                            <MenuItem.Icon>
                                                                <Image Source="/DSA%20MeisterGeister;component/Images/Icons/kalender.png" MaxWidth="24" Margin="-1,-3,-3,-3" />
                                                            </MenuItem.Icon>
                                                            <MenuItem.ItemContainerStyle>
                                                                <Style TargetType="{x:Type MenuItem}" >
                                                                    <Setter Property="Command" Value="{Binding DataContext.OnBtnUmwandelnSonstiges, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
                                                                    <Setter Property="CommandParameter" Value="{Binding}"/>
                                                                </Style>
                                                            </MenuItem.ItemContainerStyle>
                                                            <MenuItem.ItemTemplate>
                                                                <DataTemplate>
                                                                    <TextBlock Text="{Binding Name}"/>
                                                                </DataTemplate>
                                                            </MenuItem.ItemTemplate>
                                                        </MenuItem>                                                        
                                                    </Grid>
                                                </Canvas>

                                                <ControlTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                                        <Setter Property="Effect">
                                                            <Setter.Value>
                                                                <DropShadowEffect Color="Yellow" ShadowDepth="10" BlurRadius="35" />
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsAnDerReihe}" Value="True">
                                                        <Setter Property="Effect">
                                                            <Setter.Value>
                                                                <DropShadowEffect Color="#FFC0FCFF" ShadowDepth="10" BlurRadius="35" />
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Thumb.Template>
                                    </Thumb>
                                </DataTemplate>

                                <!-- Datatemplate PATHLINE -->
                                <DataTemplate DataType="{x:Type model:PathLine}">
                                    <Thumb DragDelta="Thumb_Drag" IsEnabled="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}">
                                        <Thumb.Template>
                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                <Canvas Visibility="{Binding IsVisible, Converter={StaticResource BoolToVisibilityConverter}}" IsHitTestVisible="{Binding DataContext.IsEditorModeEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
                                                    <Path Stroke="{Binding ObjectColor}" StrokeThickness="{Binding StrokeThickness}" Data="{Binding PathGeometryData}" x:Name="PathLine" Opacity="{Binding Opacity}" />
                                                    <TextBlock Canvas.Top="{Binding ZDisplayY}" Canvas.Left="{Binding ZDisplayX}" Width="60" TextAlignment="Center" Text="{Binding ZLevel}" FontWeight="Bold" FontSize="10" 
                                                            IsHitTestVisible="False" 
                                                            Visibility="{Binding DataContext.ShowZ, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
                                                </Canvas>
                                                <ControlTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                                        <Setter Property="Effect" TargetName="PathLine">
                                                            <Setter.Value>
                                                                <DropShadowEffect Color="Yellow" ShadowDepth="10" BlurRadius="25" />
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Thumb.Template>
                                    </Thumb>
                                </DataTemplate>

                                <!-- Datatemplate FILLED PATHLINE -->
                                <DataTemplate DataType="{x:Type model:FilledPathLine}">
                                    <Thumb DragDelta="Thumb_Drag" IsEnabled="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}">
                                        <Thumb.Template>
                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                <Canvas Visibility="{Binding IsVisible, Converter={StaticResource BoolToVisibilityConverter}}" IsHitTestVisible="{Binding DataContext.IsEditorModeEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
                                                    <Path Stroke="{Binding ObjectColor}" StrokeThickness="{Binding StrokeThickness}" Data="{Binding FilledPathGeometryData}" x:Name="FilledPathLine" Opacity="{Binding Opacity}">
                                                        <Path.Fill>
                                                            <SolidColorBrush Color="{Binding FillColor}" />
                                                        </Path.Fill>
                                                    </Path>
                                                    <TextBlock Canvas.Top="{Binding ZDisplayY}" Canvas.Left="{Binding ZDisplayX}" Width="60" TextAlignment="Center" Text="{Binding ZLevel}" FontWeight="Bold" IsHitTestVisible="False" FontSize="10" 
                                                            Visibility="{Binding DataContext.ShowZ, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
                                                </Canvas>
                                                <ControlTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                                        <Setter Property="Effect" TargetName="FilledPathLine">
                                                            <Setter.Value>
                                                                <DropShadowEffect Color="Yellow" ShadowDepth="10" BlurRadius="25" />
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Thumb.Template>
                                    </Thumb>
                                </DataTemplate>

                                <!-- Datatemplate IMAGEOBJECT -->
                                <DataTemplate DataType="{x:Type model:ImageObject}">
                                    <Thumb DragDelta="Thumb_Drag" IsEnabled="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}">
                                        <Thumb.Template>
                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                <Canvas Visibility="{Binding IsVisible, Converter={StaticResource BoolToVisibilityConverter}}" IsHitTestVisible="{Binding DataContext.IsEditorModeEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
                                                    <Image RenderTransformOrigin="0.5,0.5" Source="{Binding PictureUrl}" Opacity="{Binding Opacity}" x:Name="ImageObject1" Canvas.Top="{Binding ImagePositionY}" Canvas.Left="{Binding ImagePositionX}" Width="{Binding ImageWidth}" Height="{Binding ImageHeight}" Stretch="Fill" VerticalAlignment="Top" >
                                                        <Image.RenderTransform>
                                                            <RotateTransform Angle="{Binding RotateAngle}" />
                                                        </Image.RenderTransform>
                                                    </Image>
                                                    <TextBlock Canvas.Top="{Binding ZDisplayY}" Canvas.Left="{Binding ZDisplayX}" Width="60" TextAlignment="Center" Text="{Binding ZLevel}" FontWeight="Bold" IsHitTestVisible="False" FontSize="10" 
                                                                    Visibility="{Binding DataContext.ShowZ, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>

                                                </Canvas>

                                                <ControlTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                                                        <Setter Property="Effect">
                                                            <Setter.Value>
                                                                <DropShadowEffect Color="Yellow" ShadowDepth="10" BlurRadius="25" />
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Thumb.Template>
                                    </Thumb>
                                </DataTemplate>
                            </ListBox.Resources>

                            <ListBox.Background>
                                <!--<Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1" Opacity=".3">
                                            <GradientStop Color="White" Offset="0" />
                                            <GradientStop Color="GhostWhite" Offset="1" />
                                        </LinearGradientBrush>
                                    </Border.Background>-->

                                <!-- Hexgrid -->
                                <VisualBrush TileMode="Tile" Viewport="{Binding TileViewPort}" ViewportUnits="Absolute">
                                    <VisualBrush.Visual>
                                        <Path StrokeThickness="3" StrokeDashArray="5 3" Data="{Binding TilePathData}">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="{Binding GridColor, UpdateSourceTrigger=PropertyChanged}" />
                                            </Path.Stroke>
                                        </Path>
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </ListBox.Background>

                            <ListBox.Template>
                                <ControlTemplate TargetType="{x:Type ListBox}">
                                    <Border Background="{TemplateBinding Background}">
                                        <ItemsPresenter/>
                                    </Border>
                                </ControlTemplate>
                            </ListBox.Template>

                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Canvas IsItemsHost="True" Background="Transparent" 
                                 GiveFeedback="ArenaGrid_GiveFeedback" />
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                        </ListBox>

                        <s:SpielerPointer Margin="{Binding PointerMargin,UpdateSourceTrigger=PropertyChanged}" />
                    </Grid>
                </wpfxc:ZoomControl>
                <Label Content="{Binding Bewegungslaenge, UpdateSourceTrigger=PropertyChanged}"  Padding="0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="100" Height="17" />
            </Grid>

        </Grid>
    </Grid>
</UserControl>
