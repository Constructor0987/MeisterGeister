//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.ComponentModel;

namespace MeisterGeister.Model
{
    [DataContract(IsReference=true)]
    public partial class Gegner : INotifyPropertyChanged
    {
        #region INotifyPropertyChanged
    	public event PropertyChangedEventHandler PropertyChanged;
    	
    	public void OnChanged(String info)
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(info));
            }
        }

        #endregion

        #region Primitive Properties
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual System.Guid GegnerGUID
        {
            get { return _gegnerGUID; }
            set
    		{ 
    			_gegnerGUID = value;
    			OnChanged("GegnerGUID");
    		}
    
        }
        private System.Guid _gegnerGUID;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual System.Guid GegnerBaseGUID
        {
            get { return _gegnerBaseGUID; }
            set
            {
                if (_gegnerBaseGUID != value)
                {
                    if (GegnerBase != null && GegnerBase.GegnerBaseGUID != value)
                    {
                        GegnerBase = null;
                    }
                    _gegnerBaseGUID = value;
                }
            }
    
        }
        private System.Guid _gegnerBaseGUID;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual string Name
        {
            get { return _name; }
            set
    		{ 
    			_name = value;
    			OnChanged("Name");
    		}
    
        }
        private string _name;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual string Bild
        {
            get { return _bild; }
            set
    		{ 
    			_bild = value;
    			OnChanged("Bild");
    		}
    
        }
        private string _bild;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int ATMod
        {
            get { return _aTMod; }
            set
    		{ 
    			_aTMod = value;
    			OnChanged("ATMod");
    		}
    
        }
        private int _aTMod;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int INIBasis
        {
            get { return _iNIBasis; }
            set
    		{ 
    			_iNIBasis = value;
    			OnChanged("INIBasis");
    		}
    
        }
        private int _iNIBasis;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int PA
        {
            get { return _pA; }
            set
    		{ 
    			_pA = value;
    			OnChanged("PA");
    		}
    
        }
        private int _pA;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int LE
        {
            get { return _lE; }
            set
    		{ 
    			_lE = value;
    			OnChanged("LE");
    		}
    
        }
        private int _lE;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int AU
        {
            get { return _aU; }
            set
    		{ 
    			_aU = value;
    			OnChanged("AU");
    		}
    
        }
        private int _aU;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int AE
        {
            get { return _aE; }
            set
    		{ 
    			_aE = value;
    			OnChanged("AE");
    		}
    
        }
        private int _aE;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int KE
        {
            get { return _kE; }
            set
    		{ 
    			_kE = value;
    			OnChanged("KE");
    		}
    
        }
        private int _kE;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int KO
        {
            get { return _kO; }
            set
    		{ 
    			_kO = value;
    			OnChanged("KO");
    		}
    
        }
        private int _kO;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int MRGeist
        {
            get { return _mRGeist; }
            set
    		{ 
    			_mRGeist = value;
    			OnChanged("MRGeist");
    		}
    
        }
        private int _mRGeist;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual Nullable<int> MRKörper
        {
            get { return _mRKörper; }
            set
    		{ 
    			_mRKörper = value;
    			OnChanged("MRKörper");
    		}
    
        }
        private Nullable<int> _mRKörper;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int RSKopf
        {
            get { return _rSKopf; }
            set
    		{ 
    			_rSKopf = value;
    			OnChanged("RSKopf");
    		}
    
        }
        private int _rSKopf;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int RSBrust
        {
            get { return _rSBrust; }
            set
    		{ 
    			_rSBrust = value;
    			OnChanged("RSBrust");
    		}
    
        }
        private int _rSBrust;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int RSRücken
        {
            get { return _rSRücken; }
            set
    		{ 
    			_rSRücken = value;
    			OnChanged("RSRücken");
    		}
    
        }
        private int _rSRücken;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int RSArmL
        {
            get { return _rSArmL; }
            set
    		{ 
    			_rSArmL = value;
    			OnChanged("RSArmL");
    		}
    
        }
        private int _rSArmL;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int RSArmR
        {
            get { return _rSArmR; }
            set
    		{ 
    			_rSArmR = value;
    			OnChanged("RSArmR");
    		}
    
        }
        private int _rSArmR;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int RSBauch
        {
            get { return _rSBauch; }
            set
    		{ 
    			_rSBauch = value;
    			OnChanged("RSBauch");
    		}
    
        }
        private int _rSBauch;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int RSBeinL
        {
            get { return _rSBeinL; }
            set
    		{ 
    			_rSBeinL = value;
    			OnChanged("RSBeinL");
    		}
    
        }
        private int _rSBeinL;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int RSBeinR
        {
            get { return _rSBeinR; }
            set
    		{ 
    			_rSBeinR = value;
    			OnChanged("RSBeinR");
    		}
    
        }
        private int _rSBeinR;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int LEAktuell
        {
            get { return _lEAktuell; }
            set
    		{ 
    			_lEAktuell = value;
    			OnChanged("LEAktuell");
    		}
    
        }
        private int _lEAktuell;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int AUAktuell
        {
            get { return _aUAktuell; }
            set
    		{ 
    			_aUAktuell = value;
    			OnChanged("AUAktuell");
    		}
    
        }
        private int _aUAktuell;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int AEAktuell
        {
            get { return _aEAktuell; }
            set
    		{ 
    			_aEAktuell = value;
    			OnChanged("AEAktuell");
    		}
    
        }
        private int _aEAktuell;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int KEAktuell
        {
            get { return _kEAktuell; }
            set
    		{ 
    			_kEAktuell = value;
    			OnChanged("KEAktuell");
    		}
    
        }
        private int _kEAktuell;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int Wunden
        {
            get { return _wunden; }
            set
    		{ 
    			_wunden = value;
    			OnChanged("Wunden");
    		}
    
        }
        private int _wunden;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int WundenKopf
        {
            get { return _wundenKopf; }
            set
    		{ 
    			_wundenKopf = value;
    			OnChanged("WundenKopf");
    		}
    
        }
        private int _wundenKopf;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int WundenBrust
        {
            get { return _wundenBrust; }
            set
    		{ 
    			_wundenBrust = value;
    			OnChanged("WundenBrust");
    		}
    
        }
        private int _wundenBrust;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int WundenArmL
        {
            get { return _wundenArmL; }
            set
    		{ 
    			_wundenArmL = value;
    			OnChanged("WundenArmL");
    		}
    
        }
        private int _wundenArmL;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int WundenArmR
        {
            get { return _wundenArmR; }
            set
    		{ 
    			_wundenArmR = value;
    			OnChanged("WundenArmR");
    		}
    
        }
        private int _wundenArmR;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int WundenBauch
        {
            get { return _wundenBauch; }
            set
    		{ 
    			_wundenBauch = value;
    			OnChanged("WundenBauch");
    		}
    
        }
        private int _wundenBauch;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int WundenBeinL
        {
            get { return _wundenBeinL; }
            set
    		{ 
    			_wundenBeinL = value;
    			OnChanged("WundenBeinL");
    		}
    
        }
        private int _wundenBeinL;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int WundenBeinR
        {
            get { return _wundenBeinR; }
            set
    		{ 
    			_wundenBeinR = value;
    			OnChanged("WundenBeinR");
    		}
    
        }
        private int _wundenBeinR;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual string Bemerkung
        {
            get { return _bemerkung; }
            set
    		{ 
    			_bemerkung = value;
    			OnChanged("Bemerkung");
    		}
    
        }
        private string _bemerkung;

        #endregion

        #region Navigation Properties
    
    	[DataMember]
        public virtual GegnerBase GegnerBase
        {
            get { return _gegnerBase; }
            set
            {
                if (!ReferenceEquals(_gegnerBase, value))
                {
                    var previousValue = _gegnerBase;
                    _gegnerBase = value;
                    FixupGegnerBase(previousValue);
                }
            }
        }
        private GegnerBase _gegnerBase;

        #endregion

        #region Association Fixup
    
        private void FixupGegnerBase(GegnerBase previousValue)
        {
    		OnChanged("GegnerBase");
            if (previousValue != null && previousValue.Gegner.Contains(this))
            {
                previousValue.Gegner.Remove(this);
            }
    
            if (GegnerBase != null)
            {
                if (!GegnerBase.Gegner.Contains(this))
                {
                    GegnerBase.Gegner.Add(this);
                }
                if (GegnerBaseGUID != GegnerBase.GegnerBaseGUID)
                {
                    GegnerBaseGUID = GegnerBase.GegnerBaseGUID;
                }
            }
        }

        #endregion

    }
}
