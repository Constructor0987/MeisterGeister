//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.ComponentModel;

namespace MeisterGeister.Model
{
    [DataContract(IsReference=true)]
    public partial class Kultur_Name : INotifyPropertyChanged
    {
        #region INotifyPropertyChanged
    	public event PropertyChangedEventHandler PropertyChanged;
    	
    	public void OnChanged(String info)
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(info));
            }
        }

        #endregion
        #region Primitive Properties
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual System.Guid KulturGUID
        {
            get { return _kulturGUID; }
            set
            {
                if (_kulturGUID != value)
                {
                    if (Kultur != null && Kultur.KulturGUID != value)
                    {
                        Kultur = null;
                    }
                    _kulturGUID = value;
                }
            }
    
        }
        private System.Guid _kulturGUID;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual string Herkunft
        {
            get { return _herkunft; }
            set
    		{ 
    			_herkunft = value;
    			OnChanged("Herkunft");
    		}
    
        }
        private string _herkunft;

        #endregion
        #region Navigation Properties
    
    	[DataMember]
        public virtual Kultur Kultur
        {
            get { return _kultur; }
            set
            {
                if (!ReferenceEquals(_kultur, value))
                {
                    var previousValue = _kultur;
                    _kultur = value;
                    FixupKultur(previousValue);
                }
            }
        }
        private Kultur _kultur;

        #endregion
        #region Association Fixup
    
        private void FixupKultur(Kultur previousValue)
        {
    		OnChanged("Kultur");
            if (previousValue != null && previousValue.Kultur_Name.Contains(this))
            {
                previousValue.Kultur_Name.Remove(this);
            }
    
            if (Kultur != null)
            {
                if (!Kultur.Kultur_Name.Contains(this))
                {
                    Kultur.Kultur_Name.Add(this);
                }
                if (KulturGUID != Kultur.KulturGUID)
                {
                    KulturGUID = Kultur.KulturGUID;
                }
            }
        }

        #endregion
    }
}
