//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.ComponentModel;

namespace MeisterGeister.Model
{
    [DataContract(IsReference=true)]
    public partial class Alchimierezept : INotifyPropertyChanged
    {
        #region INotifyPropertyChanged
    	public event PropertyChangedEventHandler PropertyChanged;
    	
    	public void OnChanged(String info)
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(info));
            }
        }

        #endregion

        #region Primitive Properties
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual System.Guid AlchimierezeptGUID
        {
            get { return _alchimierezeptGUID; }
            set
    		{ 
    			_alchimierezeptGUID = value;
    			OnChanged("AlchimierezeptGUID");
    		}
    
        }
        private System.Guid _alchimierezeptGUID;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual string Name
        {
            get { return _name; }
            set
    		{ 
    			_name = value;
    			OnChanged("Name");
    		}
    
        }
        private string _name;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual string Gruppe
        {
            get { return _gruppe; }
            set
    		{ 
    			_gruppe = value;
    			OnChanged("Gruppe");
    		}
    
        }
        private string _gruppe;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual string Kategorie
        {
            get { return _kategorie; }
            set
    		{ 
    			_kategorie = value;
    			OnChanged("Kategorie");
    		}
    
        }
        private string _kategorie;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual string Merkmale
        {
            get { return _merkmale; }
            set
    		{ 
    			_merkmale = value;
    			OnChanged("Merkmale");
    		}
    
        }
        private string _merkmale;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int Brauschwierigkeit
        {
            get { return _brauschwierigkeit; }
            set
    		{ 
    			_brauschwierigkeit = value;
    			OnChanged("Brauschwierigkeit");
    		}
    
        }
        private int _brauschwierigkeit;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int Analyseschwierigkeit
        {
            get { return _analyseschwierigkeit; }
            set
    		{ 
    			_analyseschwierigkeit = value;
    			OnChanged("Analyseschwierigkeit");
    		}
    
        }
        private int _analyseschwierigkeit;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int Beschaffungsschwierigkeit
        {
            get { return _beschaffungsschwierigkeit; }
            set
    		{ 
    			_beschaffungsschwierigkeit = value;
    			OnChanged("Beschaffungsschwierigkeit");
    		}
    
        }
        private int _beschaffungsschwierigkeit;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual double Beschaffungskosten
        {
            get { return _beschaffungskosten; }
            set
    		{ 
    			_beschaffungskosten = value;
    			OnChanged("Beschaffungskosten");
    		}
    
        }
        private double _beschaffungskosten;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual string Haltbarkeit
        {
            get { return _haltbarkeit; }
            set
    		{ 
    			_haltbarkeit = value;
    			OnChanged("Haltbarkeit");
    		}
    
        }
        private string _haltbarkeit;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual string Haltbarkeitseinheit
        {
            get { return _haltbarkeitseinheit; }
            set
    		{ 
    			_haltbarkeitseinheit = value;
    			OnChanged("Haltbarkeitseinheit");
    		}
    
        }
        private string _haltbarkeitseinheit;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual string Labor
        {
            get { return _labor; }
            set
    		{ 
    			_labor = value;
    			OnChanged("Labor");
    		}
    
        }
        private string _labor;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual string Zutaten
        {
            get { return _zutaten; }
            set
    		{ 
    			_zutaten = value;
    			OnChanged("Zutaten");
    		}
    
        }
        private string _zutaten;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual string Substitute
        {
            get { return _substitute; }
            set
    		{ 
    			_substitute = value;
    			OnChanged("Substitute");
    		}
    
        }
        private string _substitute;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual string Bemerkung
        {
            get { return _bemerkung; }
            set
    		{ 
    			_bemerkung = value;
    			OnChanged("Bemerkung");
    		}
    
        }
        private string _bemerkung;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual string Literatur
        {
            get { return _literatur; }
            set
    		{ 
    			_literatur = value;
    			OnChanged("Literatur");
    		}
    
        }
        private string _literatur;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual string Tags
        {
            get { return _tags; }
            set
    		{ 
    			_tags = value;
    			OnChanged("Tags");
    		}
    
        }
        private string _tags;

        #endregion

        #region Navigation Properties
    
    	[DataMember]
        public virtual ICollection<Alchimierezept_Setting> Alchimierezept_Setting
        {
            get
            {
                if (_alchimierezept_Setting == null)
                {
                    var newCollection = new FixupCollection<Alchimierezept_Setting>();
                    newCollection.CollectionChanged += FixupAlchimierezept_Setting;
                    _alchimierezept_Setting = newCollection;
                }
                return _alchimierezept_Setting;
            }
            set
            {
                if (!ReferenceEquals(_alchimierezept_Setting, value))
                {
                    var previousValue = _alchimierezept_Setting as FixupCollection<Alchimierezept_Setting>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupAlchimierezept_Setting;
                    }
                    _alchimierezept_Setting = value;
                    var newValue = value as FixupCollection<Alchimierezept_Setting>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupAlchimierezept_Setting;
                    }
                }
            }
        }
        private ICollection<Alchimierezept_Setting> _alchimierezept_Setting;

        #endregion

        #region Association Fixup
    
        private void FixupAlchimierezept_Setting(object sender, NotifyCollectionChangedEventArgs e)
        {
    		OnChanged("Alchimierezept_Setting");
            if (e.NewItems != null)
            {
                foreach (Alchimierezept_Setting item in e.NewItems)
                {
                    item.Alchimierezept = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Alchimierezept_Setting item in e.OldItems)
                {
                    if (ReferenceEquals(item.Alchimierezept, this))
                    {
                        item.Alchimierezept = null;
                    }
                }
            }
        }

        #endregion

    }
}
