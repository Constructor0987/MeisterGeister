//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.ComponentModel;

namespace MeisterGeister.Model
{
    [DataContract(IsReference=true)]
    public partial class Name : INotifyPropertyChanged
    {
        #region INotifyPropertyChanged
    	public event PropertyChangedEventHandler PropertyChanged;
    	
    	public void OnChanged(String info)
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(info));
            }
        }

        #endregion

        #region ValidatePropertyChanging
    	protected event Extensions.ValidatePropertyChangingEventHandler ValidatePropertyChanging;
    
    	protected void OnValidatePropertyChanging(String propertyName, object currentValue, object newValue)
    	{
    		if(ValidatePropertyChanging != null)
    		{
    			ValidatePropertyChanging(this, propertyName, currentValue, newValue);
    		}
    	}

        #endregion

        #region Primitive Properties
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int NameID
        {
            get { return _nameID; }
            set
    		{ 
    			OnValidatePropertyChanging("NameID",_nameID, value);
    			_nameID = value;
    			OnChanged("NameID");
    		}
    
        }
        private int _nameID;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual string Name1
        {
            get { return _name1; }
            set
    		{ 
    			OnValidatePropertyChanging("Name1",_name1, value);
    			_name1 = value;
    			OnChanged("Name1");
    		}
    
        }
        private string _name1;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual string Herkunft
        {
            get { return _herkunft; }
            set
    		{ 
    			OnValidatePropertyChanging("Herkunft",_herkunft, value);
    			_herkunft = value;
    			OnChanged("Herkunft");
    		}
    
        }
        private string _herkunft;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual string Art
        {
            get { return _art; }
            set
    		{ 
    			OnValidatePropertyChanging("Art",_art, value);
    			_art = value;
    			OnChanged("Art");
    		}
    
        }
        private string _art;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual string Bedeutung
        {
            get { return _bedeutung; }
            set
    		{ 
    			OnValidatePropertyChanging("Bedeutung",_bedeutung, value);
    			_bedeutung = value;
    			OnChanged("Bedeutung");
    		}
    
        }
        private string _bedeutung;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual string Geschlecht
        {
            get { return _geschlecht; }
            set
    		{ 
    			OnValidatePropertyChanging("Geschlecht",_geschlecht, value);
    			_geschlecht = value;
    			OnChanged("Geschlecht");
    		}
    
        }
        private string _geschlecht;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual Nullable<bool> KeineVorsilbe
        {
            get { return _keineVorsilbe; }
            set
    		{ 
    			OnValidatePropertyChanging("KeineVorsilbe",_keineVorsilbe, value);
    			_keineVorsilbe = value;
    			OnChanged("KeineVorsilbe");
    		}
    
        }
        private Nullable<bool> _keineVorsilbe;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual Nullable<bool> KeineNachsilbe
        {
            get { return _keineNachsilbe; }
            set
    		{ 
    			OnValidatePropertyChanging("KeineNachsilbe",_keineNachsilbe, value);
    			_keineNachsilbe = value;
    			OnChanged("KeineNachsilbe");
    		}
    
        }
        private Nullable<bool> _keineNachsilbe;

        #endregion

    }
}
