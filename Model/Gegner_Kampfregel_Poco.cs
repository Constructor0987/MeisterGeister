//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.ComponentModel;

namespace MeisterGeister.Model
{
    [DataContract(IsReference=true)]
    public partial class Gegner_Kampfregel : INotifyPropertyChanged
    {
        #region INotifyPropertyChanged
    	public event PropertyChangedEventHandler PropertyChanged;
    	
    	public void OnChanged(String info)
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(info));
            }
        }

        #endregion
        #region Primitive Properties
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual System.Guid GegnerGUID
        {
            get { return _gegnerGUID; }
            set
            {
                if (_gegnerGUID != value)
                {
                    if (Gegner != null && Gegner.GegnerGUID != value)
                    {
                        Gegner = null;
                    }
                    _gegnerGUID = value;
                }
            }
    
        }
        private System.Guid _gegnerGUID;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual System.Guid KampfregelGUID
        {
            get { return _kampfregelGUID; }
            set
            {
                if (_kampfregelGUID != value)
                {
                    if (Kampfregel != null && Kampfregel.KampfregelGUID != value)
                    {
                        Kampfregel = null;
                    }
                    _kampfregelGUID = value;
                }
            }
    
        }
        private System.Guid _kampfregelGUID;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int Erschwernis
        {
            get { return _erschwernis; }
            set
    		{ 
    			_erschwernis = value;
    			OnChanged("Erschwernis");
    		}
    
        }
        private int _erschwernis;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual string TP
        {
            get { return _tP; }
            set
    		{ 
    			_tP = value;
    			OnChanged("TP");
    		}
    
        }
        private string _tP;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual string Bemerkung
        {
            get { return _bemerkung; }
            set
    		{ 
    			_bemerkung = value;
    			OnChanged("Bemerkung");
    		}
    
        }
        private string _bemerkung;

        #endregion
        #region Navigation Properties
    
    	[DataMember]
        public virtual Gegner Gegner
        {
            get { return _gegner; }
            set
            {
                if (!ReferenceEquals(_gegner, value))
                {
                    var previousValue = _gegner;
                    _gegner = value;
                    FixupGegner(previousValue);
                }
            }
        }
        private Gegner _gegner;
    
    	[DataMember]
        public virtual Kampfregel Kampfregel
        {
            get { return _kampfregel; }
            set
            {
                if (!ReferenceEquals(_kampfregel, value))
                {
                    var previousValue = _kampfregel;
                    _kampfregel = value;
                    FixupKampfregel(previousValue);
                }
            }
        }
        private Kampfregel _kampfregel;

        #endregion
        #region Association Fixup
    
        private void FixupGegner(Gegner previousValue)
        {
    		OnChanged("Gegner");
            if (previousValue != null && previousValue.Gegner_Kampfregel.Contains(this))
            {
                previousValue.Gegner_Kampfregel.Remove(this);
            }
    
            if (Gegner != null)
            {
                if (!Gegner.Gegner_Kampfregel.Contains(this))
                {
                    Gegner.Gegner_Kampfregel.Add(this);
                }
                if (GegnerGUID != Gegner.GegnerGUID)
                {
                    GegnerGUID = Gegner.GegnerGUID;
                }
            }
        }
    
        private void FixupKampfregel(Kampfregel previousValue)
        {
    		OnChanged("Kampfregel");
            if (previousValue != null && previousValue.Gegner_Kampfregel.Contains(this))
            {
                previousValue.Gegner_Kampfregel.Remove(this);
            }
    
            if (Kampfregel != null)
            {
                if (!Kampfregel.Gegner_Kampfregel.Contains(this))
                {
                    Kampfregel.Gegner_Kampfregel.Add(this);
                }
                if (KampfregelGUID != Kampfregel.KampfregelGUID)
                {
                    KampfregelGUID = Kampfregel.KampfregelGUID;
                }
            }
        }

        #endregion
    }
}
