//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;
using System.ComponentModel;

namespace MeisterGeister.Model
{
    [DataContract(IsReference=true)]
    public partial class Rasse : INotifyPropertyChanged
    {
        #region INotifyPropertyChanged
    	public event PropertyChangedEventHandler PropertyChanged;
    	
    	public void OnChanged(String info)
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(info));
            }
        }

        #endregion

        #region ValidatePropertyChanging
    	protected event Extensions.ValidatePropertyChangingEventHandler ValidatePropertyChanging;
    
    	protected void OnValidatePropertyChanging(String propertyName, object currentValue, object newValue)
    	{
    		if(ValidatePropertyChanging != null)
    		{
    			ValidatePropertyChanging(this, propertyName, currentValue, newValue);
    		}
    	}

        #endregion

        #region Primitive Properties
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual System.Guid RasseGUID
        {
            get { return _rasseGUID; }
            set
    		{ 
    			OnValidatePropertyChanging("RasseGUID",_rasseGUID, value);
    			_rasseGUID = value;
    			OnChanged("RasseGUID");
    		}
    
        }
        private System.Guid _rasseGUID;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual string Name
        {
            get { return _name; }
            set
    		{ 
    			OnValidatePropertyChanging("Name",_name, value);
    			_name = value;
    			OnChanged("Name");
    		}
    
        }
        private string _name;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual string Variante
        {
            get { return _variante; }
            set
    		{ 
    			OnValidatePropertyChanging("Variante",_variante, value);
    			_variante = value;
    			OnChanged("Variante");
    		}
    
        }
        private string _variante;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual bool Unspielbar
        {
            get { return _unspielbar; }
            set
    		{ 
    			OnValidatePropertyChanging("Unspielbar",_unspielbar, value);
    			_unspielbar = value;
    			OnChanged("Unspielbar");
    		}
    
        }
        private bool _unspielbar;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int GP
        {
            get { return _gP; }
            set
    		{ 
    			OnValidatePropertyChanging("GP",_gP, value);
    			_gP = value;
    			OnChanged("GP");
    		}
    
        }
        private int _gP;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int Größe
        {
            get { return _größe; }
            set
    		{ 
    			OnValidatePropertyChanging("Größe",_größe, value);
    			_größe = value;
    			OnChanged("Größe");
    		}
    
        }
        private int _größe;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual string GrößeMod
        {
            get { return _größeMod; }
            set
    		{ 
    			OnValidatePropertyChanging("GrößeMod",_größeMod, value);
    			_größeMod = value;
    			OnChanged("GrößeMod");
    		}
    
        }
        private string _größeMod;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int Gewicht
        {
            get { return _gewicht; }
            set
    		{ 
    			OnValidatePropertyChanging("Gewicht",_gewicht, value);
    			_gewicht = value;
    			OnChanged("Gewicht");
    		}
    
        }
        private int _gewicht;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int MUMod
        {
            get { return _mUMod; }
            set
    		{ 
    			OnValidatePropertyChanging("MUMod",_mUMod, value);
    			_mUMod = value;
    			OnChanged("MUMod");
    		}
    
        }
        private int _mUMod;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int KLMod
        {
            get { return _kLMod; }
            set
    		{ 
    			OnValidatePropertyChanging("KLMod",_kLMod, value);
    			_kLMod = value;
    			OnChanged("KLMod");
    		}
    
        }
        private int _kLMod;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int INMod
        {
            get { return _iNMod; }
            set
    		{ 
    			OnValidatePropertyChanging("INMod",_iNMod, value);
    			_iNMod = value;
    			OnChanged("INMod");
    		}
    
        }
        private int _iNMod;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int CHMod
        {
            get { return _cHMod; }
            set
    		{ 
    			OnValidatePropertyChanging("CHMod",_cHMod, value);
    			_cHMod = value;
    			OnChanged("CHMod");
    		}
    
        }
        private int _cHMod;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int FFMod
        {
            get { return _fFMod; }
            set
    		{ 
    			OnValidatePropertyChanging("FFMod",_fFMod, value);
    			_fFMod = value;
    			OnChanged("FFMod");
    		}
    
        }
        private int _fFMod;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int GEMod
        {
            get { return _gEMod; }
            set
    		{ 
    			OnValidatePropertyChanging("GEMod",_gEMod, value);
    			_gEMod = value;
    			OnChanged("GEMod");
    		}
    
        }
        private int _gEMod;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int KOMod
        {
            get { return _kOMod; }
            set
    		{ 
    			OnValidatePropertyChanging("KOMod",_kOMod, value);
    			_kOMod = value;
    			OnChanged("KOMod");
    		}
    
        }
        private int _kOMod;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int KKMod
        {
            get { return _kKMod; }
            set
    		{ 
    			OnValidatePropertyChanging("KKMod",_kKMod, value);
    			_kKMod = value;
    			OnChanged("KKMod");
    		}
    
        }
        private int _kKMod;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int LEMod
        {
            get { return _lEMod; }
            set
    		{ 
    			OnValidatePropertyChanging("LEMod",_lEMod, value);
    			_lEMod = value;
    			OnChanged("LEMod");
    		}
    
        }
        private int _lEMod;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int AUMod
        {
            get { return _aUMod; }
            set
    		{ 
    			OnValidatePropertyChanging("AUMod",_aUMod, value);
    			_aUMod = value;
    			OnChanged("AUMod");
    		}
    
        }
        private int _aUMod;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int AEMod
        {
            get { return _aEMod; }
            set
    		{ 
    			OnValidatePropertyChanging("AEMod",_aEMod, value);
    			_aEMod = value;
    			OnChanged("AEMod");
    		}
    
        }
        private int _aEMod;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int MRMod
        {
            get { return _mRMod; }
            set
    		{ 
    			OnValidatePropertyChanging("MRMod",_mRMod, value);
    			_mRMod = value;
    			OnChanged("MRMod");
    		}
    
        }
        private int _mRMod;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual int INIMod
        {
            get { return _iNIMod; }
            set
    		{ 
    			OnValidatePropertyChanging("INIMod",_iNIMod, value);
    			_iNIMod = value;
    			OnChanged("INIMod");
    		}
    
        }
        private int _iNIMod;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual string Literatur
        {
            get { return _literatur; }
            set
    		{ 
    			OnValidatePropertyChanging("Literatur",_literatur, value);
    			_literatur = value;
    			OnChanged("Literatur");
    		}
    
        }
        private string _literatur;
    	///<summary>Database persistent property</summary>
    	[DataMember]
        public virtual string Setting
        {
            get { return _setting; }
            set
    		{ 
    			OnValidatePropertyChanging("Setting",_setting, value);
    			_setting = value;
    			OnChanged("Setting");
    		}
    
        }
        private string _setting;

        #endregion

        #region Navigation Properties
    
    	[DataMember]
        public virtual ICollection<Rasse_Farbe> Rasse_Farbe
        {
            get
            {
                if (_rasse_Farbe == null)
                {
                    var newCollection = new FixupCollection<Rasse_Farbe>();
                    newCollection.CollectionChanged += FixupRasse_Farbe;
                    _rasse_Farbe = newCollection;
                }
                return _rasse_Farbe;
            }
            set
            {
                if (!ReferenceEquals(_rasse_Farbe, value))
                {
                    var previousValue = _rasse_Farbe as FixupCollection<Rasse_Farbe>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupRasse_Farbe;
                    }
                    _rasse_Farbe = value;
                    var newValue = value as FixupCollection<Rasse_Farbe>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupRasse_Farbe;
                    }
                }
            }
        }
        private ICollection<Rasse_Farbe> _rasse_Farbe;
    
    	[DataMember]
        public virtual ICollection<Rasse_Kultur> Rasse_Kultur
        {
            get
            {
                if (_rasse_Kultur == null)
                {
                    var newCollection = new FixupCollection<Rasse_Kultur>();
                    newCollection.CollectionChanged += FixupRasse_Kultur;
                    _rasse_Kultur = newCollection;
                }
                return _rasse_Kultur;
            }
            set
            {
                if (!ReferenceEquals(_rasse_Kultur, value))
                {
                    var previousValue = _rasse_Kultur as FixupCollection<Rasse_Kultur>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupRasse_Kultur;
                    }
                    _rasse_Kultur = value;
                    var newValue = value as FixupCollection<Rasse_Kultur>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupRasse_Kultur;
                    }
                }
            }
        }
        private ICollection<Rasse_Kultur> _rasse_Kultur;

        #endregion

        #region Association Fixup
    
        private void FixupRasse_Farbe(object sender, NotifyCollectionChangedEventArgs e)
        {
    		OnChanged("Rasse_Farbe");
            if (e.NewItems != null)
            {
                foreach (Rasse_Farbe item in e.NewItems)
                {
                    item.Rasse = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Rasse_Farbe item in e.OldItems)
                {
                    if (ReferenceEquals(item.Rasse, this))
                    {
                        item.Rasse = null;
                    }
                }
            }
        }
    
        private void FixupRasse_Kultur(object sender, NotifyCollectionChangedEventArgs e)
        {
    		OnChanged("Rasse_Kultur");
            if (e.NewItems != null)
            {
                foreach (Rasse_Kultur item in e.NewItems)
                {
                    item.Rasse = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Rasse_Kultur item in e.OldItems)
                {
                    if (ReferenceEquals(item.Rasse, this))
                    {
                        item.Rasse = null;
                    }
                }
            }
        }

        #endregion

    }
}
